
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+2406 (git sha1 UNKNOWN, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `/gb3-resources/processor/yscripts/new_sail.ys' --

1. Executing Verilog-2005 frontend: verilog/CSR.v
Parsing Verilog input from `verilog/CSR.v' to AST representation.
Generating RTLIL representation for module `\csr_file'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: verilog/RAM.v
Parsing Verilog input from `verilog/RAM.v' to AST representation.
Generating RTLIL representation for module `\ramNR'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: verilog/adder.v
Parsing Verilog input from `verilog/adder.v' to AST representation.
Generating RTLIL representation for module `\dsp_adder'.
Generating RTLIL representation for module `\dsp_subtractor'.
Generating RTLIL representation for module `\dsp_addsub'.
Generating RTLIL representation for module `\adder'.
Generating RTLIL representation for module `\full_adder'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: verilog/alu.v
Parsing Verilog input from `verilog/alu.v' to AST representation.
Generating RTLIL representation for module `\alu'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: verilog/alu_control.v
Parsing Verilog input from `verilog/alu_control.v' to AST representation.
Generating RTLIL representation for module `\ALUControl'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: verilog/branch_decide.v
Parsing Verilog input from `verilog/branch_decide.v' to AST representation.
Generating RTLIL representation for module `\branch_decision'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: verilog/branch_predictor.v
Parsing Verilog input from `verilog/branch_predictor.v' to AST representation.
Generating RTLIL representation for module `\branch_predictor'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: verilog/control_unit.v
Parsing Verilog input from `verilog/control_unit.v' to AST representation.
Generating RTLIL representation for module `\control'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: verilog/cpu.v
Parsing Verilog input from `verilog/cpu.v' to AST representation.
Generating RTLIL representation for module `\cpu'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: verilog/dataMem_mask_gen.v
Parsing Verilog input from `verilog/dataMem_mask_gen.v' to AST representation.
Generating RTLIL representation for module `\sign_mask_gen'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: verilog/data_mem.v
Parsing Verilog input from `verilog/data_mem.v' to AST representation.
Generating RTLIL representation for module `\data_mem'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: verilog/dsp_adder.v
Parsing Verilog input from `verilog/dsp_adder.v' to AST representation.
Generating RTLIL representation for module `\adder_dsp'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: verilog/forwarding_unit.v
Parsing Verilog input from `verilog/forwarding_unit.v' to AST representation.
Generating RTLIL representation for module `\ForwardingUnit'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: verilog/imm_gen.v
Parsing Verilog input from `verilog/imm_gen.v' to AST representation.
Generating RTLIL representation for module `\imm_gen'.
Note: Assuming pure combinatorial block at verilog/imm_gen.v:54.2-72.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: verilog/instruction_mem.v
Parsing Verilog input from `verilog/instruction_mem.v' to AST representation.
Generating RTLIL representation for module `\instruction_memory'.
Warning: wire '\out' is assigned in a block at verilog/instruction_mem.v:71.3-71.39.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: verilog/mux2to1.v
Parsing Verilog input from `verilog/mux2to1.v' to AST representation.
Generating RTLIL representation for module `\mux2to1'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: verilog/pipeline_registers.v
Parsing Verilog input from `verilog/pipeline_registers.v' to AST representation.
Generating RTLIL representation for module `\if_id'.
Generating RTLIL representation for module `\id_ex'.
Generating RTLIL representation for module `\ex_mem'.
Generating RTLIL representation for module `\mem_wb'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: verilog/program_counter.v
Parsing Verilog input from `verilog/program_counter.v' to AST representation.
Generating RTLIL representation for module `\program_counter'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: verilog/register_file.v
Parsing Verilog input from `verilog/register_file.v' to AST representation.
Generating RTLIL representation for module `\regfile'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: toplevel.v
Parsing Verilog input from `toplevel.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

21. Executing HIERARCHY pass (managing design hierarchy).

21.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \instruction_memory
Used module:     \cpu
Used module:         \mux2to1
Used module:         \branch_predictor
Used module:         \ForwardingUnit
Used module:         \mem_wb
Used module:         \branch_decision
Used module:         \ex_mem
Used module:         \alu
Used module:             \full_adder
Used module:         \dsp_adder
Used module:             \adder_dsp
Used module:         \id_ex
Used module:         \sign_mask_gen
Used module:         \ALUControl
Used module:         \imm_gen
Used module:         \regfile
Used module:         \control
Used module:         \if_id
Used module:         \program_counter
Parameter 1 (\WIDTH) = 9

21.2. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2to1'.
Parameter 1 (\WIDTH) = 9
Generating RTLIL representation for module `$paramod\mux2to1\WIDTH=9'.
Parameter 1 (\WIDTH) = 11

21.3. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2to1'.
Parameter 1 (\WIDTH) = 11
Generating RTLIL representation for module `$paramod\mux2to1\WIDTH=11'.

21.4. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \instruction_memory
Used module:     \cpu
Used module:         \mux2to1
Used module:         \branch_predictor
Used module:         \ForwardingUnit
Used module:         \mem_wb
Used module:         \branch_decision
Used module:         \ex_mem
Used module:         \alu
Used module:             \full_adder
Used module:         \dsp_adder
Used module:             \adder_dsp
Used module:         $paramod\mux2to1\WIDTH=9
Used module:         \id_ex
Used module:         \sign_mask_gen
Used module:         \ALUControl
Used module:         \imm_gen
Used module:         \regfile
Used module:         $paramod\mux2to1\WIDTH=11
Used module:         \control
Used module:         \if_id
Used module:         \program_counter

21.5. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \instruction_memory
Used module:     \cpu
Used module:         \mux2to1
Used module:         \branch_predictor
Used module:         \ForwardingUnit
Used module:         \mem_wb
Used module:         \branch_decision
Used module:         \ex_mem
Used module:         \alu
Used module:             \full_adder
Used module:         \dsp_adder
Used module:             \adder_dsp
Used module:         $paramod\mux2to1\WIDTH=9
Used module:         \id_ex
Used module:         \sign_mask_gen
Used module:         \ALUControl
Used module:         \imm_gen
Used module:         \regfile
Used module:         $paramod\mux2to1\WIDTH=11
Used module:         \control
Used module:         \if_id
Used module:         \program_counter
Removing unused module `\adder'.
Removing unused module `\dsp_addsub'.
Removing unused module `\dsp_subtractor'.
Removing unused module `\ramNR'.
Removing unused module `\csr_file'.
Removed 5 unused modules.
Warning: Resizing cell port cpu.mem_wb_reg.data_out from 85 bits to 117 bits.
Warning: Resizing cell port cpu.mem_wb_reg.data_in from 85 bits to 117 bits.
Warning: Resizing cell port cpu.ex_mem_reg.data_out from 121 bits to 155 bits.
Warning: Resizing cell port cpu.ex_mem_reg.data_in from 121 bits to 155 bits.

22. Executing PROC pass (convert processes to netlists).

22.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `instruction_memory.$proc$verilog/instruction_mem.v:0$1072'.
Removing empty process `regfile.$proc$verilog/register_file.v:0$1107'.
Cleaned up 0 empty switches.

22.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$verilog/imm_gen.v:54$1066 in module imm_gen.
Marked 1 switch rules as full_case in process $proc$verilog/data_mem.v:240$1030 in module data_mem.
Marked 1 switch rules as full_case in process $proc$verilog/branch_predictor.v:172$617 in module branch_predictor.
Marked 1 switch rules as full_case in process $proc$verilog/branch_predictor.v:162$613 in module branch_predictor.
Removed 5 dead cases from process $proc$verilog/alu_control.v:82$86 in module ALUControl.
Marked 10 switch rules as full_case in process $proc$verilog/alu_control.v:82$86 in module ALUControl.
Removed a total of 5 dead cases.

22.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 31 assignments to connections.

22.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\mem_wb.$proc$verilog/pipeline_registers.v:0$1081'.
  Set init value: \data_out = 117'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\ex_mem.$proc$verilog/pipeline_registers.v:0$1079'.
  Set init value: \data_out = 155'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\id_ex.$proc$verilog/pipeline_registers.v:0$1077'.
  Set init value: \data_out = 178'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\if_id.$proc$verilog/pipeline_registers.v:0$1075'.
  Set init value: \data_out = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\imm_gen.$proc$verilog/imm_gen.v:0$1067'.
  Set init value: \imm = 0
Found init rule in `\data_mem.$proc$verilog/data_mem.v:0$1045'.
  Set init value: \clk_stall = 1'0
Found init rule in `\data_mem.$proc$verilog/data_mem.v:60$1044'.
  Set init value: \state = 0
Found init rule in `\branch_predictor.$proc$verilog/branch_predictor.v:0$895'.
  Set init value: \branch_mem_sig_reg = 1'0
Found init rule in `\ALUControl.$proc$verilog/alu_control.v:0$87'.
  Set init value: \ALUCtl = 7'0000000
Found init rule in `\program_counter.$proc$verilog/program_counter.v:0$1083'.
  Set init value: \outAddr = 0

22.5. Executing PROC_ARST pass (detect async resets in processes).

22.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\mem_wb.$proc$verilog/pipeline_registers.v:0$1081'.
Creating decoders for process `\mem_wb.$proc$verilog/pipeline_registers.v:145$1080'.
Creating decoders for process `\ex_mem.$proc$verilog/pipeline_registers.v:0$1079'.
Creating decoders for process `\ex_mem.$proc$verilog/pipeline_registers.v:118$1078'.
Creating decoders for process `\id_ex.$proc$verilog/pipeline_registers.v:0$1077'.
Creating decoders for process `\id_ex.$proc$verilog/pipeline_registers.v:91$1076'.
Creating decoders for process `\if_id.$proc$verilog/pipeline_registers.v:0$1075'.
Creating decoders for process `\if_id.$proc$verilog/pipeline_registers.v:64$1074'.
Creating decoders for process `\instruction_memory.$proc$verilog/instruction_mem.v:70$1068'.
Creating decoders for process `\imm_gen.$proc$verilog/imm_gen.v:0$1067'.
Creating decoders for process `\imm_gen.$proc$verilog/imm_gen.v:54$1066'.
     1/1: $1\imm[31:0]
Creating decoders for process `\data_mem.$proc$verilog/data_mem.v:0$1045'.
Creating decoders for process `\data_mem.$proc$verilog/data_mem.v:60$1044'.
Creating decoders for process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
     1/12: $0$memwr$\data_block$verilog/data_mem.v:283$961_EN[31:0]$1033
     2/12: $0$memwr$\data_block$verilog/data_mem.v:283$961_DATA[31:0]$1032
     3/12: $0$memwr$\data_block$verilog/data_mem.v:283$961_ADDR[31:0]$1031
     4/12: $0\sign_mask_buf[3:0]
     5/12: $0\addr_buf[31:0]
     6/12: $0\write_data_buffer[31:0]
     7/12: $0\memwrite_buf[0:0]
     8/12: $0\memread_buf[0:0]
     9/12: $0\word_buf[31:0]
    10/12: $0\state[31:0]
    11/12: $0\clk_stall[0:0]
    12/12: $0\read_data[31:0]
Creating decoders for process `\data_mem.$proc$verilog/data_mem.v:231$1026'.
     1/1: $0\led_reg[31:0]
Creating decoders for process `\branch_predictor.$proc$verilog/branch_predictor.v:0$895'.
Creating decoders for process `\branch_predictor.$proc$verilog/branch_predictor.v:0$634'.
Creating decoders for process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
     1/6: $0$memwr$\bht$verilog/branch_predictor.v:176$610_EN[1:0]$620
     2/6: $0$memwr$\bht$verilog/branch_predictor.v:176$610_DATA[1:0]$619
     3/6: $0$memwr$\bht$verilog/branch_predictor.v:176$610_ADDR[7:0]$618
     4/6: $0$memwr$\bht$verilog/branch_predictor.v:179$611_EN[1:0]$623
     5/6: $0$memwr$\bht$verilog/branch_predictor.v:179$611_DATA[1:0]$622
     6/6: $0$memwr$\bht$verilog/branch_predictor.v:179$611_ADDR[7:0]$621
Creating decoders for process `\branch_predictor.$proc$verilog/branch_predictor.v:162$613'.
     1/3: $1$mem2bits$\bht$verilog/branch_predictor.v:165$352[1:0]$615
     2/3: $0\predicted_taken_reg[0:0]
     3/3: $0\commit_index[7:0]
Creating decoders for process `\branch_predictor.$proc$verilog/branch_predictor.v:155$612'.
Creating decoders for process `\ALUControl.$proc$verilog/alu_control.v:0$87'.
Creating decoders for process `\ALUControl.$proc$verilog/alu_control.v:82$86'.
     1/10: $10\ALUCtl[6:0]
     2/10: $9\ALUCtl[6:0]
     3/10: $8\ALUCtl[6:0]
     4/10: $7\ALUCtl[6:0]
     5/10: $6\ALUCtl[6:0]
     6/10: $5\ALUCtl[6:0]
     7/10: $4\ALUCtl[6:0]
     8/10: $3\ALUCtl[6:0]
     9/10: $2\ALUCtl[6:0]
    10/10: $1\ALUCtl[6:0]
Creating decoders for process `\top.$proc$toplevel.v:54$1111'.
Creating decoders for process `\top.$proc$toplevel.v:53$1110'.
Creating decoders for process `\regfile.$proc$verilog/register_file.v:95$1086'.
     1/3: $0$memwr$\regfile$verilog/register_file.v:97$1085_EN[31:0]$1089
     2/3: $0$memwr$\regfile$verilog/register_file.v:97$1085_DATA[31:0]$1088
     3/3: $0$memwr$\regfile$verilog/register_file.v:97$1085_ADDR[4:0]$1087
Creating decoders for process `\program_counter.$proc$verilog/program_counter.v:0$1083'.
Creating decoders for process `\program_counter.$proc$verilog/program_counter.v:65$1082'.

22.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\imm_gen.\imm' from process `\imm_gen.$proc$verilog/imm_gen.v:54$1066'.
No latch inferred for signal `\branch_predictor.\i' from process `\branch_predictor.$proc$verilog/branch_predictor.v:0$895'.
No latch inferred for signal `\branch_predictor.$mem2bits$\bht$verilog/branch_predictor.v:205$353' from process `\branch_predictor.$proc$verilog/branch_predictor.v:0$634'.
No latch inferred for signal `\ALUControl.\ALUCtl' from process `\ALUControl.$proc$verilog/alu_control.v:82$86'.
No latch inferred for signal `\top.\CLKHF_POWERUP' from process `\top.$proc$toplevel.v:54$1111'.
No latch inferred for signal `\top.\ENCLKHF' from process `\top.$proc$toplevel.v:53$1110'.

22.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\mem_wb.\data_out' using process `\mem_wb.$proc$verilog/pipeline_registers.v:145$1080'.
  created $dff cell `$procdff$1362' with positive edge clock.
Creating register for signal `\ex_mem.\data_out' using process `\ex_mem.$proc$verilog/pipeline_registers.v:118$1078'.
  created $dff cell `$procdff$1363' with positive edge clock.
Creating register for signal `\id_ex.\data_out' using process `\id_ex.$proc$verilog/pipeline_registers.v:91$1076'.
  created $dff cell `$procdff$1364' with positive edge clock.
Creating register for signal `\if_id.\data_out' using process `\if_id.$proc$verilog/pipeline_registers.v:64$1074'.
  created $dff cell `$procdff$1365' with positive edge clock.
Creating register for signal `\instruction_memory.\out' using process `\instruction_memory.$proc$verilog/instruction_mem.v:70$1068'.
  created $dff cell `$procdff$1366' with positive edge clock.
Creating register for signal `\data_mem.\read_data' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1367' with positive edge clock.
Creating register for signal `\data_mem.\clk_stall' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1368' with positive edge clock.
Creating register for signal `\data_mem.\state' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1369' with positive edge clock.
Creating register for signal `\data_mem.\word_buf' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1370' with positive edge clock.
Creating register for signal `\data_mem.\memread_buf' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1371' with positive edge clock.
Creating register for signal `\data_mem.\memwrite_buf' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1372' with positive edge clock.
Creating register for signal `\data_mem.\write_data_buffer' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1373' with positive edge clock.
Creating register for signal `\data_mem.\addr_buf' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1374' with positive edge clock.
Creating register for signal `\data_mem.\sign_mask_buf' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1375' with positive edge clock.
Creating register for signal `\data_mem.$memwr$\data_block$verilog/data_mem.v:283$961_ADDR' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1376' with positive edge clock.
Creating register for signal `\data_mem.$memwr$\data_block$verilog/data_mem.v:283$961_DATA' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1377' with positive edge clock.
Creating register for signal `\data_mem.$memwr$\data_block$verilog/data_mem.v:283$961_EN' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1378' with positive edge clock.
Creating register for signal `\data_mem.\led_reg' using process `\data_mem.$proc$verilog/data_mem.v:231$1026'.
  created $dff cell `$procdff$1379' with positive edge clock.
Creating register for signal `\branch_predictor.$memwr$\bht$verilog/branch_predictor.v:176$610_ADDR' using process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
  created $dff cell `$procdff$1380' with positive edge clock.
Creating register for signal `\branch_predictor.$memwr$\bht$verilog/branch_predictor.v:176$610_DATA' using process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
  created $dff cell `$procdff$1381' with positive edge clock.
Creating register for signal `\branch_predictor.$memwr$\bht$verilog/branch_predictor.v:176$610_EN' using process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
  created $dff cell `$procdff$1382' with positive edge clock.
Creating register for signal `\branch_predictor.$memwr$\bht$verilog/branch_predictor.v:179$611_ADDR' using process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
  created $dff cell `$procdff$1383' with positive edge clock.
Creating register for signal `\branch_predictor.$memwr$\bht$verilog/branch_predictor.v:179$611_DATA' using process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
  created $dff cell `$procdff$1384' with positive edge clock.
Creating register for signal `\branch_predictor.$memwr$\bht$verilog/branch_predictor.v:179$611_EN' using process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
  created $dff cell `$procdff$1385' with positive edge clock.
Creating register for signal `\branch_predictor.\commit_index' using process `\branch_predictor.$proc$verilog/branch_predictor.v:162$613'.
  created $dff cell `$procdff$1386' with positive edge clock.
Creating register for signal `\branch_predictor.\predicted_taken_reg' using process `\branch_predictor.$proc$verilog/branch_predictor.v:162$613'.
  created $dff cell `$procdff$1387' with positive edge clock.
Creating register for signal `\branch_predictor.$mem2bits$\bht$verilog/branch_predictor.v:165$352' using process `\branch_predictor.$proc$verilog/branch_predictor.v:162$613'.
  created $dff cell `$procdff$1388' with positive edge clock.
Creating register for signal `\branch_predictor.\branch_mem_sig_reg' using process `\branch_predictor.$proc$verilog/branch_predictor.v:155$612'.
  created $dff cell `$procdff$1389' with negative edge clock.
Creating register for signal `\regfile.\rdAddrA_buf' using process `\regfile.$proc$verilog/register_file.v:95$1086'.
  created $dff cell `$procdff$1390' with positive edge clock.
Creating register for signal `\regfile.\rdAddrB_buf' using process `\regfile.$proc$verilog/register_file.v:95$1086'.
  created $dff cell `$procdff$1391' with positive edge clock.
Creating register for signal `\regfile.\regDatA' using process `\regfile.$proc$verilog/register_file.v:95$1086'.
  created $dff cell `$procdff$1392' with positive edge clock.
Creating register for signal `\regfile.\regDatB' using process `\regfile.$proc$verilog/register_file.v:95$1086'.
  created $dff cell `$procdff$1393' with positive edge clock.
Creating register for signal `\regfile.\wrAddr_buf' using process `\regfile.$proc$verilog/register_file.v:95$1086'.
  created $dff cell `$procdff$1394' with positive edge clock.
Creating register for signal `\regfile.\wrData_buf' using process `\regfile.$proc$verilog/register_file.v:95$1086'.
  created $dff cell `$procdff$1395' with positive edge clock.
Creating register for signal `\regfile.\write_buf' using process `\regfile.$proc$verilog/register_file.v:95$1086'.
  created $dff cell `$procdff$1396' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile$verilog/register_file.v:97$1085_ADDR' using process `\regfile.$proc$verilog/register_file.v:95$1086'.
  created $dff cell `$procdff$1397' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile$verilog/register_file.v:97$1085_DATA' using process `\regfile.$proc$verilog/register_file.v:95$1086'.
  created $dff cell `$procdff$1398' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile$verilog/register_file.v:97$1085_EN' using process `\regfile.$proc$verilog/register_file.v:95$1086'.
  created $dff cell `$procdff$1399' with positive edge clock.
Creating register for signal `\program_counter.\outAddr' using process `\program_counter.$proc$verilog/program_counter.v:65$1082'.
  created $dff cell `$procdff$1400' with positive edge clock.

22.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `mem_wb.$proc$verilog/pipeline_registers.v:0$1081'.
Removing empty process `mem_wb.$proc$verilog/pipeline_registers.v:145$1080'.
Removing empty process `ex_mem.$proc$verilog/pipeline_registers.v:0$1079'.
Removing empty process `ex_mem.$proc$verilog/pipeline_registers.v:118$1078'.
Removing empty process `id_ex.$proc$verilog/pipeline_registers.v:0$1077'.
Removing empty process `id_ex.$proc$verilog/pipeline_registers.v:91$1076'.
Removing empty process `if_id.$proc$verilog/pipeline_registers.v:0$1075'.
Removing empty process `if_id.$proc$verilog/pipeline_registers.v:64$1074'.
Removing empty process `instruction_memory.$proc$verilog/instruction_mem.v:70$1068'.
Removing empty process `imm_gen.$proc$verilog/imm_gen.v:0$1067'.
Found and cleaned up 1 empty switch in `\imm_gen.$proc$verilog/imm_gen.v:54$1066'.
Removing empty process `imm_gen.$proc$verilog/imm_gen.v:54$1066'.
Removing empty process `data_mem.$proc$verilog/data_mem.v:0$1045'.
Removing empty process `data_mem.$proc$verilog/data_mem.v:60$1044'.
Found and cleaned up 4 empty switches in `\data_mem.$proc$verilog/data_mem.v:240$1030'.
Removing empty process `data_mem.$proc$verilog/data_mem.v:240$1030'.
Found and cleaned up 1 empty switch in `\data_mem.$proc$verilog/data_mem.v:231$1026'.
Removing empty process `data_mem.$proc$verilog/data_mem.v:231$1026'.
Removing empty process `branch_predictor.$proc$verilog/branch_predictor.v:0$895'.
Removing empty process `branch_predictor.$proc$verilog/branch_predictor.v:0$634'.
Found and cleaned up 4 empty switches in `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
Removing empty process `branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
Found and cleaned up 1 empty switch in `\branch_predictor.$proc$verilog/branch_predictor.v:162$613'.
Removing empty process `branch_predictor.$proc$verilog/branch_predictor.v:162$613'.
Removing empty process `branch_predictor.$proc$verilog/branch_predictor.v:155$612'.
Removing empty process `ALUControl.$proc$verilog/alu_control.v:0$87'.
Found and cleaned up 10 empty switches in `\ALUControl.$proc$verilog/alu_control.v:82$86'.
Removing empty process `ALUControl.$proc$verilog/alu_control.v:82$86'.
Removing empty process `top.$proc$toplevel.v:54$1111'.
Removing empty process `top.$proc$toplevel.v:53$1110'.
Found and cleaned up 1 empty switch in `\regfile.$proc$verilog/register_file.v:95$1086'.
Removing empty process `regfile.$proc$verilog/register_file.v:95$1086'.
Removing empty process `program_counter.$proc$verilog/program_counter.v:0$1083'.
Removing empty process `program_counter.$proc$verilog/program_counter.v:65$1082'.
Cleaned up 22 empty switches.

23. Executing OPT pass (performing simple optimizations).

23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mem_wb.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module mux2to1.
Optimizing module instruction_memory.
<suppressed ~1 debug messages>
Optimizing module imm_gen.
Optimizing module ForwardingUnit.
<suppressed ~4 debug messages>
Optimizing module adder_dsp.
Optimizing module data_mem.
<suppressed ~24 debug messages>
Optimizing module sign_mask_gen.
Optimizing module cpu.
Optimizing module control.
Optimizing module branch_predictor.
<suppressed ~1 debug messages>
Optimizing module branch_decision.
Optimizing module ALUControl.
<suppressed ~9 debug messages>
Optimizing module alu.
<suppressed ~3 debug messages>
Optimizing module full_adder.
Optimizing module $paramod\mux2to1\WIDTH=11.
Optimizing module $paramod\mux2to1\WIDTH=9.
Optimizing module top.
Optimizing module dsp_adder.
Optimizing module regfile.
<suppressed ~4 debug messages>
Optimizing module program_counter.

23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\instruction_memory'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\ForwardingUnit'.
<suppressed ~9 debug messages>
Finding identical cells in module `\adder_dsp'.
Finding identical cells in module `\data_mem'.
<suppressed ~72 debug messages>
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\control'.
<suppressed ~60 debug messages>
Finding identical cells in module `\branch_predictor'.
<suppressed ~12 debug messages>
Finding identical cells in module `\branch_decision'.
<suppressed ~6 debug messages>
Finding identical cells in module `\ALUControl'.
<suppressed ~108 debug messages>
Finding identical cells in module `\alu'.
<suppressed ~6 debug messages>
Finding identical cells in module `\full_adder'.
Finding identical cells in module `$paramod\mux2to1\WIDTH=11'.
Finding identical cells in module `$paramod\mux2to1\WIDTH=9'.
Finding identical cells in module `\top'.
Finding identical cells in module `\dsp_adder'.
Finding identical cells in module `\regfile'.
<suppressed ~3 debug messages>
Finding identical cells in module `\program_counter'.
Removed a total of 92 cells.

23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mem_wb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ex_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \id_ex..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \if_id..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux2to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \instruction_memory..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ForwardingUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder_dsp..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sign_mask_gen..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branch_predictor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1225.
    dead port 2/2 on $mux $procmux$1225.
Running muxtree optimizer on module \branch_decision..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ALUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1289.
    dead port 2/2 on $mux $procmux$1328.
    dead port 2/2 on $mux $procmux$1287.
    dead port 2/2 on $mux $procmux$1279.
    dead port 2/2 on $mux $procmux$1314.
    dead port 2/2 on $mux $procmux$1266.
    dead port 2/2 on $mux $procmux$1264.
    dead port 2/2 on $mux $procmux$1344.
    dead port 2/2 on $mux $procmux$1250.
    dead port 2/2 on $mux $procmux$1303.
    dead port 2/2 on $mux $procmux$1248.
    dead port 2/2 on $mux $procmux$1239.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \full_adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mux2to1\WIDTH=11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2to1\WIDTH=9..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dsp_adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \program_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 14 multiplexer ports.
<suppressed ~49 debug messages>

23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mem_wb.
  Optimizing cells in module \ex_mem.
  Optimizing cells in module \id_ex.
  Optimizing cells in module \if_id.
  Optimizing cells in module \mux2to1.
  Optimizing cells in module \instruction_memory.
  Optimizing cells in module \imm_gen.
    New ctrl vector for $pmux cell $procmux$1117: { $procmux$1123_CMP $procmux$1122_CMP $auto$opt_reduce.cc:134:opt_mux$1402 $procmux$1119_CMP $procmux$1118_CMP }
  Optimizing cells in module \imm_gen.
  Optimizing cells in module \ForwardingUnit.
  Optimizing cells in module \adder_dsp.
  Optimizing cells in module \data_mem.
    Consolidated identical input bits for $mux cell $procmux$1124:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$1124_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1124_Y [0]
      New connections: $procmux$1124_Y [31:1] = { $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] $procmux$1124_Y [0] }
    New ctrl vector for $pmux cell $procmux$1159: { $procmux$1170_CMP $procmux$1167_CMP $auto$opt_reduce.cc:134:opt_mux$1404 }
    New ctrl vector for $pmux cell $procmux$1171: { $procmux$1170_CMP $auto$opt_reduce.cc:134:opt_mux$1406 }
  Optimizing cells in module \data_mem.
  Optimizing cells in module \sign_mask_gen.
  Optimizing cells in module \cpu.
  Optimizing cells in module \control.
  Optimizing cells in module \branch_predictor.
    Consolidated identical input bits for $mux cell $procmux$1203:
      Old ports: A=2'00, B=2'11, Y=$procmux$1203_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1203_Y [0]
      New connections: $procmux$1203_Y [1] = $procmux$1203_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1183:
      Old ports: A=2'00, B=2'11, Y=$procmux$1183_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1183_Y [0]
      New connections: $procmux$1183_Y [1] = $procmux$1183_Y [0]
  Optimizing cells in module \branch_predictor.
    Consolidated identical input bits for $mux cell $procmux$1206:
      Old ports: A=$procmux$1203_Y, B=2'00, Y=$procmux$1206_Y
      New ports: A=$procmux$1203_Y [0], B=1'0, Y=$procmux$1206_Y [0]
      New connections: $procmux$1206_Y [1] = $procmux$1206_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1185:
      Old ports: A=2'00, B=$procmux$1183_Y, Y=$procmux$1185_Y
      New ports: A=1'0, B=$procmux$1183_Y [0], Y=$procmux$1185_Y [0]
      New connections: $procmux$1185_Y [1] = $procmux$1185_Y [0]
  Optimizing cells in module \branch_predictor.
    Consolidated identical input bits for $mux cell $procmux$1208:
      Old ports: A=2'00, B=$procmux$1206_Y, Y=$procmux$1208_Y
      New ports: A=1'0, B=$procmux$1206_Y [0], Y=$procmux$1208_Y [0]
      New connections: $procmux$1208_Y [1] = $procmux$1208_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1187:
      Old ports: A=2'00, B=$procmux$1185_Y, Y=$procmux$1187_Y
      New ports: A=1'0, B=$procmux$1185_Y [0], Y=$procmux$1187_Y [0]
      New connections: $procmux$1187_Y [1] = $procmux$1187_Y [0]
  Optimizing cells in module \branch_predictor.
  Optimizing cells in module \branch_decision.
  Optimizing cells in module \ALUControl.
    New ctrl vector for $pmux cell $procmux$1322: $auto$opt_reduce.cc:134:opt_mux$1408
    New ctrl vector for $pmux cell $procmux$1270: { $procmux$1343_CMP $procmux$1342_CMP $auto$opt_reduce.cc:134:opt_mux$1410 $procmux$1341_CMP $procmux$1340_CMP $procmux$1339_CMP $procmux$1338_CMP }
    New ctrl vector for $pmux cell $procmux$1347: { $auto$opt_reduce.cc:134:opt_mux$1412 $procmux$1353_CMP $procmux$1352_CMP $procmux$1351_CMP $procmux$1350_CMP $procmux$1349_CMP $procmux$1348_CMP }
    New ctrl vector for $pmux cell $procmux$1294: { $procmux$1343_CMP $auto$opt_reduce.cc:134:opt_mux$1414 $procmux$1341_CMP $procmux$1339_CMP $procmux$1338_CMP $procmux$1342_CMP $procmux$1340_CMP }
    New ctrl vector for $pmux cell $procmux$1310: $auto$opt_reduce.cc:134:opt_mux$1416
  Optimizing cells in module \ALUControl.
  Optimizing cells in module \alu.
  Optimizing cells in module \full_adder.
  Optimizing cells in module $paramod\mux2to1\WIDTH=11.
  Optimizing cells in module $paramod\mux2to1\WIDTH=9.
  Optimizing cells in module \top.
  Optimizing cells in module \dsp_adder.
  Optimizing cells in module \regfile.
    Consolidated identical input bits for $mux cell $procmux$1356:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$1356_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1356_Y [0]
      New connections: $procmux$1356_Y [31:1] = { $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] $procmux$1356_Y [0] }
  Optimizing cells in module \regfile.
  Optimizing cells in module \program_counter.
Performed a total of 16 changes.

23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\instruction_memory'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder_dsp'.
Finding identical cells in module `\data_mem'.
<suppressed ~3 debug messages>
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\control'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\ALUControl'.
<suppressed ~6 debug messages>
Finding identical cells in module `\alu'.
Finding identical cells in module `\full_adder'.
Finding identical cells in module `$paramod\mux2to1\WIDTH=11'.
Finding identical cells in module `$paramod\mux2to1\WIDTH=9'.
Finding identical cells in module `\top'.
Finding identical cells in module `\dsp_adder'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\program_counter'.
Removed a total of 3 cells.

23.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1388 ($dff) from module branch_predictor.
Replaced 1 DFF cells.

23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \instruction_memory..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder_dsp..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \full_adder..
Finding unused cells or wires in module $paramod\mux2to1\WIDTH=11..
Finding unused cells or wires in module $paramod\mux2to1\WIDTH=9..
Finding unused cells or wires in module \top..
Finding unused cells or wires in module \dsp_adder..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \program_counter..
Removed 2 unused cells and 331 unused wires.
<suppressed ~27 debug messages>

23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\WIDTH=11.
Optimizing module $paramod\mux2to1\WIDTH=9.
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder_dsp.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module data_mem.
Optimizing module dsp_adder.
Optimizing module ex_mem.
Optimizing module full_adder.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module instruction_memory.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

23.9. Rerunning OPT passes. (Maybe there is more to do..)

23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2to1\WIDTH=11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2to1\WIDTH=9..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ALUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ForwardingUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder_dsp..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \branch_decision..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branch_predictor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dsp_adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ex_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \full_adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \id_ex..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \if_id..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \instruction_memory..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mem_wb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux2to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \program_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sign_mask_gen..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2to1\WIDTH=11.
  Optimizing cells in module $paramod\mux2to1\WIDTH=9.
  Optimizing cells in module \ALUControl.
  Optimizing cells in module \ForwardingUnit.
  Optimizing cells in module \adder_dsp.
  Optimizing cells in module \alu.
  Optimizing cells in module \branch_decision.
  Optimizing cells in module \branch_predictor.
  Optimizing cells in module \control.
  Optimizing cells in module \cpu.
  Optimizing cells in module \data_mem.
  Optimizing cells in module \dsp_adder.
  Optimizing cells in module \ex_mem.
  Optimizing cells in module \full_adder.
  Optimizing cells in module \id_ex.
  Optimizing cells in module \if_id.
  Optimizing cells in module \imm_gen.
  Optimizing cells in module \instruction_memory.
  Optimizing cells in module \mem_wb.
  Optimizing cells in module \mux2to1.
  Optimizing cells in module \program_counter.
  Optimizing cells in module \regfile.
  Optimizing cells in module \sign_mask_gen.
  Optimizing cells in module \top.
Performed a total of 0 changes.

23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\WIDTH=11'.
Finding identical cells in module `$paramod\mux2to1\WIDTH=9'.
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder_dsp'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\dsp_adder'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\full_adder'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\instruction_memory'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.13. Executing OPT_RMDFF pass (remove dff with constant values).

23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\WIDTH=11..
Finding unused cells or wires in module $paramod\mux2to1\WIDTH=9..
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder_dsp..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \dsp_adder..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \full_adder..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \instruction_memory..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..

23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\WIDTH=11.
Optimizing module $paramod\mux2to1\WIDTH=9.
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder_dsp.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module data_mem.
Optimizing module dsp_adder.
Optimizing module ex_mem.
Optimizing module full_adder.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module instruction_memory.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

23.16. Finished OPT passes. (There is nothing left to do.)

24. Printing statistics.

=== $paramod\mux2to1\WIDTH=11 ===

   Number of wires:                  4
   Number of wire bits:             34
   Number of public wires:           4
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $mux                            1

=== $paramod\mux2to1\WIDTH=9 ===

   Number of wires:                  4
   Number of wire bits:             28
   Number of public wires:           4
   Number of public wire bits:      28
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $mux                            1

=== ALUControl ===

   Number of wires:                 35
   Number of wire bits:             98
   Number of public wires:           3
   Number of public wire bits:      18
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 33
     $eq                            18
     $logic_not                      1
     $mux                            2
     $not                            1
     $pmux                           7
     $reduce_or                      4

=== ForwardingUnit ===

   Number of wires:                 23
   Number of wire bits:             39
   Number of public wires:          10
   Number of public wire bits:      26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 17
     $eq                             4
     $logic_and                      6
     $mux                            4
     $ne                             1
     $reduce_bool                    2

=== adder_dsp ===

   Number of wires:                  4
   Number of wire bits:             97
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     SB_MAC16                        1

=== alu ===

   Number of wires:                 78
   Number of wire bits:           1262
   Number of public wires:          46
   Number of public wire bits:     610
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 74
     $add                            1
     $and                           10
     $eq                            17
     $logic_not                      2
     $logic_or                       1
     $mux                           14
     $not                            5
     $or                            18
     $reduce_bool                    1
     $shl                            1
     $shr                            1
     $sshr                           1
     $xor                            1
     full_adder                      1

=== branch_decision ===

   Number of wires:                 10
   Number of wire bits:             10
   Number of public wires:           7
   Number of public wire bits:       7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $and                            3
     $logic_not                      2
     $or                             1

=== branch_predictor ===

   Number of wires:                 43
   Number of wire bits:            264
   Number of public wires:          12
   Number of public wire bits:     150
   Number of memories:               1
   Number of memory bits:          512
   Number of processes:              0
   Number of cells:                293
     $add                            2
     $and                            1
     $dff                            8
     $meminit                      256
     $memrd                          2
     $memwr                          2
     $mux                           19
     $ne                             1
     $reduce_bool                    1
     $sub                            1

=== control ===

   Number of wires:                 36
   Number of wire bits:             42
   Number of public wires:          12
   Number of public wire bits:      18
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 35
     $and                           23
     $not                            7
     $or                             5

=== cpu ===

   Number of wires:                 73
   Number of wire bits:           1642
   Number of public wires:          69
   Number of public wire bits:    1574
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 40
     $or                             4
     $paramod\mux2to1\WIDTH=11       1
     $paramod\mux2to1\WIDTH=9        1
     ALUControl                      1
     ForwardingUnit                  1
     alu                             1
     branch_decision                 1
     branch_predictor                1
     control                         1
     dsp_adder                       2
     ex_mem                          1
     id_ex                           1
     if_id                           1
     imm_gen                         1
     mem_wb                          1
     mux2to1                        18
     program_counter                 1
     regfile                         1
     sign_mask_gen                   1

=== data_mem ===

   Number of wires:                 97
   Number of wire bits:           1480
   Number of public wires:          48
   Number of public wire bits:     715
   Number of memories:               1
   Number of memory bits:         8512
   Number of processes:              0
   Number of cells:                 84
     $and                           13
     $dff                           13
     $eq                             4
     $logic_and                      1
     $logic_not                      1
     $logic_or                       1
     $meminit                        1
     $memrd                          1
     $memwr                          1
     $mux                           37
     $not                            4
     $or                             3
     $pmux                           2
     $reduce_or                      1
     $sub                            1

=== dsp_adder ===

   Number of wires:                  4
   Number of wire bits:            128
   Number of public wires:           4
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     adder_dsp                       1

=== ex_mem ===

   Number of wires:                  3
   Number of wire bits:            311
   Number of public wires:           3
   Number of public wire bits:     311
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $dff                            1

=== full_adder ===

   Number of wires:                  5
   Number of wire bits:            129
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $add                            2

=== id_ex ===

   Number of wires:                  3
   Number of wire bits:            357
   Number of public wires:           3
   Number of public wire bits:     357
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $dff                            1

=== if_id ===

   Number of wires:                  3
   Number of wire bits:            129
   Number of public wires:           3
   Number of public wire bits:     129
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $dff                            1

=== imm_gen ===

   Number of wires:                  9
   Number of wire bits:             71
   Number of public wires:           2
   Number of public wire bits:      64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  8
     $eq                             6
     $pmux                           1
     $reduce_or                      1

=== instruction_memory ===

   Number of wires:                  4
   Number of wire bits:             97
   Number of public wires:           3
   Number of public wire bits:      65
   Number of memories:               1
   Number of memory bits:        32768
   Number of processes:              0
   Number of cells:                  3
     $dff                            1
     $meminit                        1
     $memrd                          1

=== mem_wb ===

   Number of wires:                  3
   Number of wire bits:            235
   Number of public wires:           3
   Number of public wire bits:     235
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $dff                            1

=== mux2to1 ===

   Number of wires:                  4
   Number of wire bits:             97
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $mux                            1

=== program_counter ===

   Number of wires:                  3
   Number of wire bits:             65
   Number of public wires:           3
   Number of public wire bits:      65
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $dff                            1

=== regfile ===

   Number of wires:                 32
   Number of wire bits:            436
   Number of public wires:          15
   Number of public wire bits:     225
   Number of memories:               1
   Number of memory bits:         1024
   Number of processes:              0
   Number of cells:                 28
     $and                            4
     $dff                           10
     $eq                             2
     $logic_and                      1
     $meminit                        1
     $memrd                          2
     $memwr                          1
     $mux                            5
     $reduce_bool                    2

=== sign_mask_gen ===

   Number of wires:                  4
   Number of wire bits:              9
   Number of public wires:           2
   Number of public wire bits:       7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $and                            2
     $not                            3
     $xor                            1

=== top ===

   Number of wires:                 15
   Number of wire bits:            180
   Number of public wires:          14
   Number of public wire bits:     179
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $mux                            1
     $not                            1
     SB_HFOSC                        1
     cpu                             1
     data_mem                        1
     instruction_memory              1

=== design hierarchy ===

   top                               1
     cpu                             1
       $paramod\mux2to1\WIDTH=11      1
       $paramod\mux2to1\WIDTH=9      1
       ALUControl                    1
       ForwardingUnit                1
       alu                           1
         full_adder                  1
       branch_decision               1
       branch_predictor              1
       control                       1
       dsp_adder                     2
         adder_dsp                   1
       ex_mem                        1
       id_ex                         1
       if_id                         1
       imm_gen                       1
       mem_wb                        1
       mux2to1                      18
       program_counter               1
       regfile                       1
       sign_mask_gen                 1
     data_mem                        1
     instruction_memory              1

   Number of wires:                575
   Number of wire bits:           9114
   Number of public wires:         358
   Number of public wire bits:    7110
   Number of memories:               4
   Number of memory bits:        42816
   Number of processes:              0
   Number of cells:                622
     $add                            5
     $and                           56
     $dff                           37
     $eq                            51
     $logic_and                      8
     $logic_not                      6
     $logic_or                       2
     $meminit                      259
     $memrd                          6
     $memwr                          4
     $mux                          102
     $ne                             2
     $not                           21
     $or                            31
     $pmux                          10
     $reduce_bool                    6
     $reduce_or                      6
     $shl                            1
     $shr                            1
     $sshr                           1
     $sub                            2
     $xor                            2
     SB_HFOSC                        1
     SB_MAC16                        2

25. Executing SYNTH_ICE40 pass.

25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

25.2. Executing HIERARCHY pass (managing design hierarchy).

25.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \instruction_memory
Used module:     \cpu
Used module:         \program_counter
Used module:         \dsp_adder
Used module:             \adder_dsp
Used module:         \mux2to1
Used module:         \ALUControl
Used module:         \alu
Used module:             \full_adder
Used module:         \branch_decision
Used module:         \branch_predictor
Used module:         $paramod\mux2to1\WIDTH=11
Used module:         \control
Used module:         $paramod\mux2to1\WIDTH=9
Used module:         \ex_mem
Used module:         \ForwardingUnit
Used module:         \id_ex
Used module:         \if_id
Used module:         \imm_gen
Used module:         \mem_wb
Used module:         \regfile
Used module:         \sign_mask_gen

25.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \instruction_memory
Used module:     \cpu
Used module:         \program_counter
Used module:         \dsp_adder
Used module:             \adder_dsp
Used module:         \mux2to1
Used module:         \ALUControl
Used module:         \alu
Used module:             \full_adder
Used module:         \branch_decision
Used module:         \branch_predictor
Used module:         $paramod\mux2to1\WIDTH=11
Used module:         \control
Used module:         $paramod\mux2to1\WIDTH=9
Used module:         \ex_mem
Used module:         \ForwardingUnit
Used module:         \id_ex
Used module:         \if_id
Used module:         \imm_gen
Used module:         \mem_wb
Used module:         \regfile
Used module:         \sign_mask_gen
Removed 0 unused modules.

25.3. Executing PROC pass (convert processes to netlists).

25.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

25.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

25.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

25.3.4. Executing PROC_INIT pass (extract init attributes).

25.3.5. Executing PROC_ARST pass (detect async resets in processes).

25.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

25.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

25.3.8. Executing PROC_DFF pass (convert process syncs to FFs).

25.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

25.4. Executing FLATTEN pass (flatten design).
Using template instruction_memory for cells of type instruction_memory.
Using template data_mem for cells of type data_mem.
Using template cpu for cells of type cpu.
Using template mux2to1 for cells of type mux2to1.
Using template if_id for cells of type if_id.
Using template ALUControl for cells of type ALUControl.
Using template control for cells of type control.
Using template $paramod\mux2to1\WIDTH=11 for cells of type $paramod\mux2to1\WIDTH=11.
Using template imm_gen for cells of type imm_gen.
Using template branch_predictor for cells of type branch_predictor.
Using template regfile for cells of type regfile.
Using template sign_mask_gen for cells of type sign_mask_gen.
Using template id_ex for cells of type id_ex.
Using template mem_wb for cells of type mem_wb.
Using template ForwardingUnit for cells of type ForwardingUnit.
Using template dsp_adder for cells of type dsp_adder.
Using template alu for cells of type alu.
Using template $paramod\mux2to1\WIDTH=9 for cells of type $paramod\mux2to1\WIDTH=9.
Using template ex_mem for cells of type ex_mem.
Using template branch_decision for cells of type branch_decision.
Using template program_counter for cells of type program_counter.
Using template adder_dsp for cells of type adder_dsp.
Using template full_adder for cells of type full_adder.
<suppressed ~42 debug messages>
No more expansions possible.
Deleting now unused module $paramod\mux2to1\WIDTH=11.
Deleting now unused module $paramod\mux2to1\WIDTH=9.
Deleting now unused module ALUControl.
Deleting now unused module ForwardingUnit.
Deleting now unused module adder_dsp.
Deleting now unused module alu.
Deleting now unused module branch_decision.
Deleting now unused module branch_predictor.
Deleting now unused module control.
Deleting now unused module cpu.
Deleting now unused module data_mem.
Deleting now unused module dsp_adder.
Deleting now unused module ex_mem.
Deleting now unused module full_adder.
Deleting now unused module id_ex.
Deleting now unused module if_id.
Deleting now unused module imm_gen.
Deleting now unused module instruction_memory.
Deleting now unused module mem_wb.
Deleting now unused module mux2to1.
Deleting now unused module program_counter.
Deleting now unused module regfile.
Deleting now unused module sign_mask_gen.

25.5. Executing TRIBUF pass.

25.6. Executing DEMINOUT pass (demote inout ports to input or output).

25.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

25.9. Executing CHECK pass (checking for obvious problems).
checking module top..
found and reported 0 problems.

25.10. Executing OPT pass (performing simple optimizations).

25.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

25.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

25.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

25.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

25.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

25.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.10.9. Rerunning OPT passes. (Maybe there is more to do..)

25.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

25.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

25.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

25.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.10.16. Finished OPT passes. (There is nothing left to do.)

25.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 23 address bits (of 32) from memory init port top.$techmap\data_mem_inst.$meminit$\data_block$verilog/data_mem.v:0$1042 (data_mem_inst.data_block).
Removed top 23 address bits (of 32) from memory read port top.$techmap\data_mem_inst.$memrd$\data_block$verilog/data_mem.v:261$1037 (data_mem_inst.data_block).
Removed top 23 address bits (of 32) from memory write port top.$techmap\data_mem_inst.$memwr$\data_block$verilog/data_mem.v:0$1043 (data_mem_inst.data_block).
Removed top 22 address bits (of 32) from memory init port top.$techmap\inst_mem.$meminit$\instruction_memory$verilog/instruction_mem.v:0$1071 (inst_mem.instruction_memory).
Removed top 22 address bits (of 32) from memory read port top.$techmap\inst_mem.$memrd$\instruction_memory$verilog/instruction_mem.v:71$1069 (inst_mem.instruction_memory).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$637 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$638 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$639 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$640 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$641 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$642 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$643 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$644 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$645 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$646 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$647 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$648 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$649 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$650 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$651 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$652 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$653 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$654 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$655 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$656 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$657 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$658 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$659 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$660 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$661 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$662 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$663 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$664 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$665 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$666 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$667 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$668 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$669 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$670 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$671 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$672 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$673 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$674 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$675 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$676 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$677 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$678 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$679 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$680 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$681 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$682 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$683 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$684 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$685 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$686 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$687 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$688 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$689 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$690 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$691 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$692 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$693 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$694 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$695 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$696 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$697 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$698 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$699 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$700 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$701 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$702 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$703 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$704 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$705 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$706 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$707 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$708 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$709 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$710 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$711 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$712 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$713 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$714 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$715 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$716 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$717 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$718 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$719 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$720 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$721 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$722 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$723 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$724 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$725 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$726 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$727 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$728 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$729 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$730 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$731 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$732 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$733 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$734 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$735 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$736 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$737 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$738 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$739 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$740 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$741 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$742 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$743 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$744 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$745 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$746 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$747 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$748 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$749 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$750 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$751 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$752 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$753 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$754 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$755 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$756 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$757 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$758 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$759 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$760 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$761 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$762 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$763 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$764 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$765 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$766 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$767 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$768 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$769 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$770 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$771 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$772 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$773 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$774 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$775 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$776 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$777 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$778 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$779 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$780 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$781 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$782 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$783 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$784 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$785 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$786 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$787 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$788 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$789 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$790 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$791 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$792 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$793 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$794 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$795 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$796 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$797 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$798 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$799 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$800 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$801 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$802 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$803 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$804 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$805 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$806 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$807 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$808 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$809 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$810 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$811 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$812 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$813 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$814 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$815 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$816 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$817 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$818 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$819 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$820 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$821 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$822 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$823 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$824 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$825 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$826 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$827 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$828 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$829 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$830 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$831 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$832 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$833 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$834 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$835 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$836 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$837 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$838 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$839 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$840 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$841 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$842 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$843 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$844 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$845 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$846 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$847 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$848 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$849 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$850 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$851 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$852 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$853 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$854 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$855 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$856 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$857 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$858 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$859 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$860 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$861 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$862 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$863 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$864 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$865 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$866 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$867 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$868 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$869 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$870 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$871 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$872 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$873 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$874 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$875 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$876 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$877 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$878 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$879 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$880 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$881 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$882 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$883 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$884 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$885 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$886 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$887 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$888 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$889 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$890 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$891 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$892 (processor.branch_predictor_FSM.bht).
Removed top 27 address bits (of 32) from memory init port top.$techmap\processor.register_files.$meminit$\regfile$verilog/register_file.v:0$1105 (processor.register_files.regfile).
Removed top 18 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$eq$verilog/data_mem.v:232$1028 ($eq).
Removed top 23 bits (of 32) from FF cell top.$techmap\data_mem_inst.$procdff$1376 ($dff).
Removed top 31 bits (of 32) from FF cell top.$techmap\data_mem_inst.$procdff$1378 ($dff).
Removed cell top.$techmap\data_mem_inst.$procmux$1126 ($mux).
Removed cell top.$techmap\data_mem_inst.$procmux$1128 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$procmux$1167_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$procmux$1172_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$procmux$1173_CMP0 ($eq).
Removed top 19 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:283$1041 ($sub).
Removed top 23 bits (of 32) from port Y of cell top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:283$1041 ($sub).
Removed top 1 bits (of 10) from port A of cell top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:283$1041 ($sub).
Removed top 12 bits (of 13) from port B of cell top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:283$1041 ($sub).
Removed top 4 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$1235 ($pmux).
Removed top 1 bits (of 2) from port B of cell top.$techmap\processor.alu_control.$procmux$1238_CMP0 ($eq).
Removed top 4 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$1261 ($pmux).
Removed top 4 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$1284 ($pmux).
Removed top 3 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$1294 ($pmux).
Removed top 1 bits (of 3) from port B of cell top.$techmap\processor.alu_control.$procmux$1300_CMP0 ($eq).
Removed top 3 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$1310 ($mux).
Removed top 3 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$1322 ($mux).
Removed top 1 bits (of 3) from port B of cell top.$techmap\processor.alu_control.$procmux$1325_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$techmap\processor.alu_control.$procmux$1342_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$1349_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$1350_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$1351_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$1352_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$1354_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$1355_CMP0 ($eq).
Removed top 1 bits (of 32) from mux cell top.$techmap\processor.immediate_generator.$procmux$1117 ($pmux).
Removed top 3 bits (of 4) from port B of cell top.$techmap\processor.immediate_generator.$procmux$1120_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.immediate_generator.$procmux$1121_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.immediate_generator.$procmux$1122_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:176$627 ($add).
Removed top 1 bits (of 2) from FF cell top.$techmap\processor.branch_predictor_FSM.$procdff$1382 ($dff).
Removed top 1 bits (of 2) from FF cell top.$techmap\processor.branch_predictor_FSM.$procdff$1385 ($dff).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1190 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1192 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1194 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1197 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1199 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1201 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1210 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1213 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1215 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1217 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1220 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1222 ($mux).
Removed top 1 bits (of 2) from port B of cell top.$techmap\processor.branch_predictor_FSM.$sub$verilog/branch_predictor.v:179$631 ($sub).
Removed top 31 bits (of 32) from FF cell top.$techmap\processor.register_files.$procdff$1399 ($dff).
Removed cell top.$techmap\processor.register_files.$procmux$1358 ($mux).
Removed cell top.$techmap\processor.register_files.$procmux$1360 ($mux).
Removed top 44 bits (of 117) from FF cell top.$techmap\processor.mem_wb_reg.$procdff$1362 ($dff).
Removed top 3 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:198$12 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:199$13 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:200$14 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:201$15 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:202$16 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:203$17 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:204$18 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:258$65 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:259$66 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:260$67 ($eq).
Removed top 31 bits (of 32) from mux cell top.$techmap\processor.alu_main.$ternary$verilog/alu.v:241$32 ($mux).
Removed top 31 bits (of 32) from mux cell top.$techmap\processor.alu_main.$ternary$verilog/alu.v:241$33 ($mux).
Removed top 46 bits (of 155) from FF cell top.$techmap\processor.ex_mem_reg.$procdff$1363 ($dff).
Removed top 12 bits (of 178) from FF cell top.$techmap\processor.id_ex_reg.$procdff$1364 ($dff).
Removed top 23 bits (of 32) from wire top.$techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:283$961_ADDR[31:0]$1031.
Removed top 23 bits (of 32) from wire top.$techmap\data_mem_inst.$memwr$\data_block$verilog/data_mem.v:283$961_ADDR.
Removed top 23 bits (of 32) from wire top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:261$1038_Y.
Removed top 4 bits (of 7) from wire top.$techmap\processor.alu_control.$10\ALUCtl[6:0].
Removed top 3 bits (of 7) from wire top.$techmap\processor.alu_control.$3\ALUCtl[6:0].
Removed top 3 bits (of 7) from wire top.$techmap\processor.alu_control.$4\ALUCtl[6:0].
Removed top 3 bits (of 7) from wire top.$techmap\processor.alu_control.$5\ALUCtl[6:0].
Removed top 4 bits (of 7) from wire top.$techmap\processor.alu_control.$6\ALUCtl[6:0].
Removed top 31 bits (of 32) from wire top.$techmap\processor.alu_main.$ternary$verilog/alu.v:241$32_Y.
Removed top 31 bits (of 32) from wire top.processor.alu_main.w_slt.
Removed top 12 bits (of 121) from wire top.processor.ex_mem_out.
Removed top 46 bits (of 155) from wire top.processor.ex_mem_reg.data_in.
Removed top 12 bits (of 178) from wire top.processor.id_ex_out.
Removed top 12 bits (of 85) from wire top.processor.mem_wb_out.
Removed top 44 bits (of 117) from wire top.processor.mem_wb_reg.data_in.

25.12. Executing PEEPOPT pass (run peephole optimizers).

25.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 31 unused wires.
<suppressed ~1 debug messages>

25.14. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\processor.alu_main.$sshr$verilog/alu.v:243$36 ($sshr):
    Found 1 activation_patterns using ctrl signal \processor.alu_main.op_sra.
    No candidates found.
  Analyzing resource sharing options for $techmap\processor.alu_main.$shr$verilog/alu.v:242$34 ($shr):
    Found 1 activation_patterns using ctrl signal \processor.alu_main.op_srl.
    No candidates found.
  Analyzing resource sharing options for $techmap\processor.alu_main.$shl$verilog/alu.v:244$38 ($shl):
    Found 1 activation_patterns using ctrl signal \processor.alu_main.op_sll.
    No candidates found.
  Analyzing resource sharing options for $techmap\data_mem_inst.$memrd$\data_block$verilog/data_mem.v:261$1037 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\data_mem_inst.$procmux$1158_CMP.
    No candidates found.

25.15. Executing TECHMAP pass (map to technology primitives).

25.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

25.15.2. Continuing TECHMAP pass.
No more expansions possible.

25.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

25.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

25.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $techmap\processor.alu_main.$add$verilog/alu.v:256$60 ($add).
  creating $macc model for $techmap\processor.alu_main.alu_full_adder.$add$verilog/adder.v:66$10 ($add).
  creating $macc model for $techmap\processor.alu_main.alu_full_adder.$add$verilog/adder.v:66$9 ($add).
  creating $macc model for $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:176$627 ($add).
  creating $macc model for $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:201$632 ($add).
  creating $macc model for $techmap\processor.branch_predictor_FSM.$sub$verilog/branch_predictor.v:179$631 ($sub).
  merging $macc model for $techmap\processor.alu_main.alu_full_adder.$add$verilog/adder.v:66$9 into $techmap\processor.alu_main.alu_full_adder.$add$verilog/adder.v:66$10.
  creating $alu model for $macc $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:201$632.
  creating $alu model for $macc $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:176$627.
  creating $alu model for $macc $techmap\processor.branch_predictor_FSM.$sub$verilog/branch_predictor.v:179$631.
  creating $alu model for $macc $techmap\processor.alu_main.alu_full_adder.$add$verilog/adder.v:66$10.
  creating $alu model for $macc $techmap\processor.alu_main.$add$verilog/alu.v:256$60.
  creating $alu cell for $techmap\processor.alu_main.$add$verilog/alu.v:256$60: $auto$alumacc.cc:485:replace_alu$1772
  creating $alu cell for $techmap\processor.alu_main.alu_full_adder.$add$verilog/adder.v:66$10: $auto$alumacc.cc:485:replace_alu$1775
  creating $alu cell for $techmap\processor.branch_predictor_FSM.$sub$verilog/branch_predictor.v:179$631: $auto$alumacc.cc:485:replace_alu$1778
  creating $alu cell for $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:176$627: $auto$alumacc.cc:485:replace_alu$1781
  creating $alu cell for $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:201$632: $auto$alumacc.cc:485:replace_alu$1784
  created 5 $alu and 0 $macc cells.

25.19. Executing OPT pass (performing simple optimizations).

25.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

25.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

25.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

25.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.19.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \processor.id_ex_reg.data_out [177:166] = 12'xxxxxxxxxxxx to constant driver in module top.
Promoting init spec \processor.mem_wb_reg.data_out [84:73] = 12'xxxxxxxxxxxx to constant driver in module top.
Promoting init spec \processor.ex_mem_reg.data_out [120:109] = 12'xxxxxxxxxxxx to constant driver in module top.
Promoted 3 init specs to constant drivers.

25.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

25.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.19.9. Rerunning OPT passes. (Maybe there is more to do..)

25.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

25.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

25.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

25.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.19.16. Finished OPT passes. (There is nothing left to do.)

25.20. Executing FSM pass (extract and optimize FSM).

25.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.data_mem_inst.state as FSM state register:
    Register has an initialization value.

25.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

25.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

25.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

25.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

25.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

25.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

25.21. Executing OPT pass (performing simple optimizations).

25.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

25.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.21.5. Finished fast OPT passes.

25.22. Executing MEMORY pass.

25.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

25.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\data_mem_inst.$memwr$\data_block$verilog/data_mem.v:0$1043' in module `\top': merged $dff to cell.
Checking cell `$techmap\processor.branch_predictor_FSM.$memwr$\bht$verilog/branch_predictor.v:0$893' in module `\top': merged $dff to cell.
Checking cell `$techmap\processor.branch_predictor_FSM.$memwr$\bht$verilog/branch_predictor.v:0$894' in module `\top': merged $dff to cell.
Checking cell `$techmap\processor.register_files.$memwr$\regfile$verilog/register_file.v:0$1106' in module `\top': merged $dff to cell.
Checking cell `$techmap\data_mem_inst.$memrd$\data_block$verilog/data_mem.v:261$1037' in module `\top': merged data $dff with rd enable to cell.
Checking cell `$techmap\inst_mem.$memrd$\instruction_memory$verilog/instruction_mem.v:71$1069' in module `\top': merged data $dff to cell.
Checking cell `$techmap\processor.branch_predictor_FSM.$memrd$\bht$verilog/branch_predictor.v:179$630' in module `\top': merged address $dff to cell.
Checking cell `$techmap\processor.branch_predictor_FSM.$memrd$\bht$verilog/branch_predictor.v:205$636' in module `\top': no (compatible) $dff found.
Checking cell `$techmap\processor.register_files.$memrd$\regfile$verilog/register_file.v:104$1093' in module `\top': merged data $dff to cell.
Checking cell `$techmap\processor.register_files.$memrd$\regfile$verilog/register_file.v:105$1094' in module `\top': merged data $dff to cell.

25.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 15 unused cells and 19 unused wires.
<suppressed ~17 debug messages>

25.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory top.processor.branch_predictor_FSM.bht by address:
  New clock domain: posedge \clk_proc
    Port 0 ($techmap\processor.branch_predictor_FSM.$memwr$\bht$verilog/branch_predictor.v:0$893) has addr \processor.branch_predictor_FSM.commit_index.
      Active bits: 11
    Port 1 ($techmap\processor.branch_predictor_FSM.$memwr$\bht$verilog/branch_predictor.v:0$894) has addr \processor.branch_predictor_FSM.commit_index.
      Active bits: 11
      Merging port 0 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11

25.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\data_mem_inst.data_block' in module `\top':
  $techmap\data_mem_inst.$meminit$\data_block$verilog/data_mem.v:0$1042 ($meminit)
  $techmap\data_mem_inst.$memwr$\data_block$verilog/data_mem.v:0$1043 ($memwr)
  $techmap\data_mem_inst.$memrd$\data_block$verilog/data_mem.v:261$1037 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\inst_mem.instruction_memory' in module `\top':
  $techmap\inst_mem.$meminit$\instruction_memory$verilog/instruction_mem.v:0$1071 ($meminit)
  $techmap\inst_mem.$memrd$\instruction_memory$verilog/instruction_mem.v:71$1069 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\processor.branch_predictor_FSM.bht' in module `\top':
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$637 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$638 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$639 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$640 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$641 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$642 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$643 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$644 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$645 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$646 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$647 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$648 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$649 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$650 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$651 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$652 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$653 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$654 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$655 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$656 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$657 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$658 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$659 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$660 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$661 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$662 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$663 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$664 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$665 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$666 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$667 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$668 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$669 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$670 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$671 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$672 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$673 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$674 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$675 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$676 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$677 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$678 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$679 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$680 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$681 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$682 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$683 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$684 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$685 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$686 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$687 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$688 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$689 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$690 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$691 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$692 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$693 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$694 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$695 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$696 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$697 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$698 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$699 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$700 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$701 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$702 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$703 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$704 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$705 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$706 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$707 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$708 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$709 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$710 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$711 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$712 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$713 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$714 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$715 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$716 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$717 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$718 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$719 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$720 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$721 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$722 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$723 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$724 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$725 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$726 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$727 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$728 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$729 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$730 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$731 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$732 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$733 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$734 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$735 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$736 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$737 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$738 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$739 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$740 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$741 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$742 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$743 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$744 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$745 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$746 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$747 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$748 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$749 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$750 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$751 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$752 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$753 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$754 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$755 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$756 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$757 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$758 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$759 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$760 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$761 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$762 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$763 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$764 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$765 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$766 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$767 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$768 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$769 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$770 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$771 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$772 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$773 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$774 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$775 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$776 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$777 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$778 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$779 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$780 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$781 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$782 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$783 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$784 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$785 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$786 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$787 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$788 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$789 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$790 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$791 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$792 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$793 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$794 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$795 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$796 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$797 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$798 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$799 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$800 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$801 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$802 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$803 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$804 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$805 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$806 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$807 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$808 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$809 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$810 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$811 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$812 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$813 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$814 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$815 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$816 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$817 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$818 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$819 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$820 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$821 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$822 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$823 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$824 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$825 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$826 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$827 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$828 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$829 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$830 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$831 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$832 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$833 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$834 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$835 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$836 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$837 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$838 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$839 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$840 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$841 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$842 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$843 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$844 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$845 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$846 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$847 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$848 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$849 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$850 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$851 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$852 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$853 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$854 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$855 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$856 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$857 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$858 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$859 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$860 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$861 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$862 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$863 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$864 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$865 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$866 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$867 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$868 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$869 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$870 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$871 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$872 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$873 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$874 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$875 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$876 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$877 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$878 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$879 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$880 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$881 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$882 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$883 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$884 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$885 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$886 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$887 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$888 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$889 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$890 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$891 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$892 ($meminit)
  $techmap\processor.branch_predictor_FSM.$memwr$\bht$verilog/branch_predictor.v:0$894 ($memwr)
  $techmap\processor.branch_predictor_FSM.$memrd$\bht$verilog/branch_predictor.v:179$630 ($memrd)
  $techmap\processor.branch_predictor_FSM.$memrd$\bht$verilog/branch_predictor.v:205$636 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\processor.register_files.regfile' in module `\top':
  $techmap\processor.register_files.$meminit$\regfile$verilog/register_file.v:0$1105 ($meminit)
  $techmap\processor.register_files.$memwr$\regfile$verilog/register_file.v:0$1106 ($memwr)
  $techmap\processor.register_files.$memrd$\regfile$verilog/register_file.v:104$1093 ($memrd)
  $techmap\processor.register_files.$memrd$\regfile$verilog/register_file.v:105$1094 ($memrd)

25.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing top.data_mem_inst.data_block:
  Properties: ports=2 bits=8512 rports=1 wports=1 dbits=32 abits=9 words=266
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=246 dwaste=0 bwaste=3936 waste=3936 efficiency=51
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3936 efficiency=51
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=246 dwaste=0 bwaste=3936 waste=3936 efficiency=51
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=246 dwaste=0 bwaste=3936 waste=3936 efficiency=51
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=246 dwaste=0 bwaste=1968 waste=1968 efficiency=51
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=1968 efficiency=51
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=758 dwaste=0 bwaste=3032 waste=3032 efficiency=25
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3032 efficiency=25
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1782 dwaste=0 bwaste=3564 waste=3564 efficiency=12
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3564 efficiency=12
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=246 dwaste=0 bwaste=1968 waste=1968 efficiency=51
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=758 dwaste=0 bwaste=3032 waste=3032 efficiency=25
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1782 dwaste=0 bwaste=3564 waste=3564 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=246 dwaste=0 bwaste=1968 waste=1968 efficiency=51
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=758 dwaste=0 bwaste=3032 waste=3032 efficiency=25
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1782 dwaste=0 bwaste=3564 waste=3564 efficiency=12
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=12, cells=16, acells=1
    Efficiency for rule 4.2: efficiency=25, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=51, cells=4, acells=1
    Efficiency for rule 1.1: efficiency=51, cells=4, acells=2
    Selected rule 4.1 with efficiency 51.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: data_mem_inst.data_block.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: data_mem_inst.data_block.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: data_mem_inst.data_block.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: data_mem_inst.data_block.3.0.0
Processing top.inst_mem.instruction_memory:
  Properties: ports=1 bits=32768 rports=1 wports=0 dbits=32 abits=10 words=1024
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Read port #0 is in clock domain !\clk_proc.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'min wports 1' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_romstyle="ebr" ...' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Read port #0 is in clock domain !\clk_proc.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Read port #0 is in clock domain !\clk_proc.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Read port #0 is in clock domain !\clk_proc.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=50
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'min wports 1' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min wports 1' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min wports 1' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_romstyle="ebr" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_romstyle="ebr" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_romstyle="ebr" ...' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=50, cells=16, acells=1
    Efficiency for rule 4.2: efficiency=100, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=100, cells=8, acells=2
    Efficiency for rule 1.1: efficiency=100, cells=8, acells=4
    Selected rule 4.2 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Read port #0 is in clock domain !\clk_proc.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: inst_mem.instruction_memory.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: inst_mem.instruction_memory.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: inst_mem.instruction_memory.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: inst_mem.instruction_memory.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: inst_mem.instruction_memory.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: inst_mem.instruction_memory.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: inst_mem.instruction_memory.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: inst_mem.instruction_memory.7.0.0
Processing top.processor.branch_predictor_FSM.bht:
  Properties: ports=3 bits=512 rports=2 wports=1 dbits=2 abits=8 words=256
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=14 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Bram port A1.2 has incompatible clock type.
        Failed to map read port #1.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=6 bwaste=3584 waste=3584 efficiency=12
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Bram port A1.2 has incompatible clock type.
        Failed to map read port #1.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=768 dwaste=2 bwaste=3584 waste=3584 efficiency=12
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Bram port A1.2 has incompatible clock type.
        Failed to map read port #1.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1792 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Bram port A1.2 has incompatible clock type.
        Failed to map read port #1.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  No acceptable bram resources found.
Processing top.processor.register_files.regfile:
  Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7168 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7680 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7936 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 2 rules:
    Efficiency for rule 4.1: efficiency=3, cells=8, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
    Selected rule 1.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Mapped to bram port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: processor.register_files.regfile.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: processor.register_files.regfile.0.0.1
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: processor.register_files.regfile.1.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: processor.register_files.regfile.1.0.1

25.25. Executing TECHMAP pass (map to technology primitives).

25.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

25.25.2. Continuing TECHMAP pass.
Using template $paramod$7c01128c47821c00041f4149da79e5374eeb90af\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$4f24a58f12efab28b0f5afb8e5e01a698c9326c5\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$8ca9006ba39b421e569e82dca003878627d6b129\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ee9d80b6b4eda6d20465f0718962c1faa444c536\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$375fe117678ee1d22847136eeb4444d97d88a8ed\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$633f396aef9931377cccb7f3f657a70bcbedf26a\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e04dfc04d67a30dd277a237655d41b761ca962f9\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d9f858baf6d1abb5c1b3b26d37737c2ecb50f924\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d3aa2d262a60c8471467ae484d6c7e52295652bd\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$3ed7f1f48674aadcee711d42bcdcbf2e83b2acc5\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$6cd6fdde58008442affdc6691bc938748dbbfe51\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e80654b3e4c497f14aeb6a81bd09ce2747c1e5ba\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$73604ec06a18702b3d50b003f675a84164dab2f9\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$78d238d0e01dd7623c82168982898b571015ba56\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8f341695f621d2336729f4496f2943367d9fd517\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$ee365e53c589ebe31f8e82496cf52135bc95b2b9\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$9ccac8c39051799bbb4ce52b1e7e7be1448a9337\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$25542b9ec906b44c11b1f637342f688bb8a02689\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$acb784d4d87f57e933aaa95fc0dc8348067e6805\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$81eb7082ac6cfd6de4f0ee8c41f058b14f1bc485\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$da28849c3c736680c395eb283afc83d5082e0461\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$15e007a44ef2b817750bccc16da9bab1ff2d7200\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$e787342044ea484e45f88308f76af2f3aebb2e4c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$960485841f660243af450c42d6b4560e3d9823f2\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$60e33edf70c223ab1815728a124422f72547b40b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$564c877e7397cd934aeea7be88c12a462c84de66\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~896 debug messages>

25.26. Executing ICE40_BRAMINIT pass.

25.27. Executing OPT pass (performing simple optimizations).

25.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~135 debug messages>

25.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

25.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

25.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 396 unused wires.
<suppressed ~3 debug messages>

25.27.5. Finished fast OPT passes.

25.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \processor.branch_predictor_FSM.bht in module \top:
  created 256 $dff cells and 0 static cells of width 2.
  read interface: 1 $dff and 510 $mux cells.
  write interface: 256 write mux blocks.

25.29. Executing OPT pass (performing simple optimizations).

25.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~16 debug messages>

25.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

25.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~307 debug messages>

25.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008:
      Old ports: A={ 24'000000000000000000000000 \data_mem_inst.word_buf [15:8] }, B={ \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15:8] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [15], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [31:9] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [7:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] \data_mem_inst.word_buf [15:8] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010:
      Old ports: A={ 24'000000000000000000000000 \data_mem_inst.word_buf [7:0] }, B={ \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7:0] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [7], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [31:9] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [7:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] \data_mem_inst.word_buf [7:0] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013:
      Old ports: A={ 24'000000000000000000000000 \data_mem_inst.word_buf [31:24] }, B={ \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31:24] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [31], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [31:9] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [7:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] \data_mem_inst.word_buf [31:24] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015:
      Old ports: A={ 24'000000000000000000000000 \data_mem_inst.word_buf [23:16] }, B={ \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23:16] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [23], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [31:9] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [7:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] \data_mem_inst.word_buf [23:16] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018:
      Old ports: A={ 16'0000000000000000 \data_mem_inst.word_buf [31:16] }, B={ \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31:16] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [31], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [31:17] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [15:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] \data_mem_inst.word_buf [31:16] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020:
      Old ports: A={ 16'0000000000000000 \data_mem_inst.word_buf [15:0] }, B={ \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15:0] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [15], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [31:17] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [15:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] \data_mem_inst.word_buf [15:0] }
    Consolidated identical input bits for $mux cell $techmap\processor.alu_control.$procmux$1261:
      Old ports: A=3'010, B=3'110, Y=$techmap\processor.alu_control.$8\ALUCtl[6:0] [2:0]
      New ports: A=1'0, B=1'1, Y=$techmap\processor.alu_control.$8\ALUCtl[6:0] [2]
      New connections: $techmap\processor.alu_control.$8\ALUCtl[6:0] [1:0] = 2'10
    Consolidated identical input bits for $pmux cell $techmap\processor.alu_control.$procmux$1270:
      Old ports: A={ 4'0000 $techmap\processor.alu_control.$8\ALUCtl[6:0] [2:0] }, B={ 25'0000101000011100010000000 $auto$wreduce.cc:460:run$1764 [2:0] 14'00000010000000 }, Y=$techmap\processor.alu_control.$7\ALUCtl[6:0]
      New ports: A={ 1'0 $techmap\processor.alu_control.$8\ALUCtl[6:0] [2:0] }, B={ 13'0101011110000 $auto$wreduce.cc:460:run$1764 [2:0] 8'00010000 }, Y=$techmap\processor.alu_control.$7\ALUCtl[6:0] [3:0]
      New connections: $techmap\processor.alu_control.$7\ALUCtl[6:0] [6:4] = 3'000
    Consolidated identical input bits for $mux cell $techmap\processor.alu_control.$procmux$1284:
      Old ports: A=3'011, B=3'100, Y=$auto$wreduce.cc:460:run$1764 [2:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:460:run$1764 [2] $auto$wreduce.cc:460:run$1764 [0] }
      New connections: $auto$wreduce.cc:460:run$1764 [1] = $auto$wreduce.cc:460:run$1764 [0]
    Consolidated identical input bits for $mux cell $techmap\processor.alu_control.$procmux$1310:
      Old ports: A=4'1111, B=4'0010, Y=$auto$wreduce.cc:460:run$1762 [3:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:460:run$1762 [0]
      New connections: $auto$wreduce.cc:460:run$1762 [3:1] = { $auto$wreduce.cc:460:run$1762 [0] $auto$wreduce.cc:460:run$1762 [0] 1'1 }
    Consolidated identical input bits for $mux cell $techmap\processor.alu_control.$procmux$1322:
      Old ports: A=4'1111, B=4'0010, Y=$auto$wreduce.cc:460:run$1761 [3:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:460:run$1761 [0]
      New connections: $auto$wreduce.cc:460:run$1761 [3:1] = { $auto$wreduce.cc:460:run$1761 [0] $auto$wreduce.cc:460:run$1761 [0] 1'1 }
    Consolidated identical input bits for $pmux cell $techmap\processor.alu_control.$procmux$1337:
      Old ports: A=7'0001111, B=42'001011001001100110110100011010101101100110, Y=$techmap\processor.alu_control.$2\ALUCtl[6:0]
      New ports: A=4'0001, B=24'001001000110100010101100, Y={ $techmap\processor.alu_control.$2\ALUCtl[6:0] [6:4] $techmap\processor.alu_control.$2\ALUCtl[6:0] [0] }
      New connections: $techmap\processor.alu_control.$2\ALUCtl[6:0] [3:1] = { $techmap\processor.alu_control.$2\ALUCtl[6:0] [0] 2'11 }
    Consolidated identical input bits for $mux cell $techmap\processor.cont_mux.$ternary$verilog/mux2to1.v:51$1113:
      Old ports: A={ \processor.control_unit.Jalr \processor.control_unit.ALUSrc \processor.control_unit.Lui \processor.control_unit.Auipc \processor.control_unit.Branch \processor.control_unit.MemRead \processor.control_unit.MemWrite 1'0 \processor.control_unit.RegWrite \processor.control_unit.MemtoReg \processor.control_unit.Jump }, B=11'00000000000, Y=\processor.cont_mux.out
      New ports: A={ \processor.control_unit.Jalr \processor.control_unit.ALUSrc \processor.control_unit.Lui \processor.control_unit.Auipc \processor.control_unit.Branch \processor.control_unit.MemRead \processor.control_unit.MemWrite \processor.control_unit.RegWrite \processor.control_unit.MemtoReg \processor.control_unit.Jump }, B=10'0000000000, Y={ \processor.cont_mux.out [10:4] \processor.cont_mux.out [2:0] }
      New connections: \processor.cont_mux.out [3] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1011:
      Old ports: A=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y, B=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y, Y=\data_mem_inst.out1
      New ports: A={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] \data_mem_inst.word_buf [7:0] }, B={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] \data_mem_inst.word_buf [15:8] }, Y=\data_mem_inst.out1 [8:0]
      New connections: \data_mem_inst.out1 [31:9] = { \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1016:
      Old ports: A=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y, B=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y, Y=\data_mem_inst.out2
      New ports: A={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] \data_mem_inst.word_buf [23:16] }, B={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] \data_mem_inst.word_buf [31:24] }, Y=\data_mem_inst.out2 [8:0]
      New connections: \data_mem_inst.out2 [31:9] = { \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1021:
      Old ports: A=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y, B=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y, Y=\data_mem_inst.out3
      New ports: A={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] \data_mem_inst.word_buf [15:0] }, B={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] \data_mem_inst.word_buf [31:16] }, Y=\data_mem_inst.out3 [16:0]
      New connections: \data_mem_inst.out3 [31:17] = { \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:209$1023:
      Old ports: A=\data_mem_inst.out1, B=\data_mem_inst.out2, Y=\data_mem_inst.out5
      New ports: A=\data_mem_inst.out1 [8:0], B=\data_mem_inst.out2 [8:0], Y=\data_mem_inst.out5 [8:0]
      New connections: \data_mem_inst.out5 [31:9] = { \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] }
  Optimizing cells in module \top.
Performed a total of 17 changes.

25.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

25.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

25.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 779 unused wires.
<suppressed ~1 debug messages>

25.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.29.9. Rerunning OPT passes. (Maybe there is more to do..)

25.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~309 debug messages>

25.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

25.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

25.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.29.16. Finished OPT passes. (There is nothing left to do.)

25.30. Executing ICE40_WRAPCARRY pass (wrap carries).

25.31. Executing TECHMAP pass (map to technology primitives).

25.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

25.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

25.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=31\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
No more expansions possible.
<suppressed ~3631 debug messages>

25.32. Executing OPT pass (performing simple optimizations).

25.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1115 debug messages>

25.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1641 debug messages>
Removed a total of 547 cells.

25.32.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$8689 ($_DFF_P_) from module top.
Replaced 1 DFF cells.

25.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 461 unused cells and 672 unused wires.
<suppressed ~472 debug messages>

25.32.5. Rerunning OPT passes. (Removed registers in this run.)

25.32.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

25.32.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.32.8. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$11997 ($_DFF_P_) from module top.
Promoting init spec \processor.id_ex_reg.data_out [147] = 1'0 to constant driver in module top.
Promoting init spec \processor.mem_wb_reg.data_out [0] = 1'0 to constant driver in module top.
Promoting init spec \processor.mem_wb_reg.data_out [3] = 1'0 to constant driver in module top.
Promoted 3 init specs to constant drivers.
Replaced 1 DFF cells.

25.32.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.32.10. Rerunning OPT passes. (Removed registers in this run.)

25.32.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

25.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.32.13. Executing OPT_RMDFF pass (remove dff with constant values).

25.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 32 unused cells and 0 unused wires.
<suppressed ~32 debug messages>

25.32.15. Finished fast OPT passes.

25.33. Executing ICE40_OPT pass (performing simple optimizations).

25.33.1. Running ICE40 specific optimizations.

25.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~79 debug messages>

25.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.33.4. Executing OPT_RMDFF pass (remove dff with constant values).

25.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.33.6. Rerunning OPT passes. (Removed registers in this run.)

25.33.7. Running ICE40 specific optimizations.

25.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.33.10. Executing OPT_RMDFF pass (remove dff with constant values).

25.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.33.12. Finished OPT passes. (There is nothing left to do.)

25.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module top:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12237 to $_DFFE_PP_ for \processor.PC.inAddr [0] -> \processor.PC.outAddr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12238 to $_DFFE_PP_ for \processor.PC.inAddr [1] -> \processor.PC.outAddr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12239 to $_DFFE_PP_ for \processor.PC.inAddr [2] -> \processor.PC.outAddr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12240 to $_DFFE_PP_ for \processor.PC.inAddr [3] -> \processor.PC.outAddr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12241 to $_DFFE_PP_ for \processor.PC.inAddr [4] -> \processor.PC.outAddr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12242 to $_DFFE_PP_ for \processor.PC.inAddr [5] -> \processor.PC.outAddr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12243 to $_DFFE_PP_ for \processor.PC.inAddr [6] -> \processor.PC.outAddr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12244 to $_DFFE_PP_ for \processor.PC.inAddr [7] -> \processor.PC.outAddr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12245 to $_DFFE_PP_ for \processor.PC.inAddr [8] -> \processor.PC.outAddr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12246 to $_DFFE_PP_ for \processor.PC.inAddr [9] -> \processor.PC.outAddr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12247 to $_DFFE_PP_ for \processor.PC.inAddr [10] -> \processor.PC.outAddr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12248 to $_DFFE_PP_ for \processor.PC.inAddr [11] -> \processor.PC.outAddr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12249 to $_DFFE_PP_ for \processor.PC.inAddr [12] -> \processor.PC.outAddr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12250 to $_DFFE_PP_ for \processor.PC.inAddr [13] -> \processor.PC.outAddr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12251 to $_DFFE_PP_ for \processor.PC.inAddr [14] -> \processor.PC.outAddr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12252 to $_DFFE_PP_ for \processor.PC.inAddr [15] -> \processor.PC.outAddr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12253 to $_DFFE_PP_ for \processor.PC.inAddr [16] -> \processor.PC.outAddr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12254 to $_DFFE_PP_ for \processor.PC.inAddr [17] -> \processor.PC.outAddr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12255 to $_DFFE_PP_ for \processor.PC.inAddr [18] -> \processor.PC.outAddr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12256 to $_DFFE_PP_ for \processor.PC.inAddr [19] -> \processor.PC.outAddr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12257 to $_DFFE_PP_ for \processor.PC.inAddr [20] -> \processor.PC.outAddr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12258 to $_DFFE_PP_ for \processor.PC.inAddr [21] -> \processor.PC.outAddr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12259 to $_DFFE_PP_ for \processor.PC.inAddr [22] -> \processor.PC.outAddr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12260 to $_DFFE_PP_ for \processor.PC.inAddr [23] -> \processor.PC.outAddr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12261 to $_DFFE_PP_ for \processor.PC.inAddr [24] -> \processor.PC.outAddr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12262 to $_DFFE_PP_ for \processor.PC.inAddr [25] -> \processor.PC.outAddr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12263 to $_DFFE_PP_ for \processor.PC.inAddr [26] -> \processor.PC.outAddr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12264 to $_DFFE_PP_ for \processor.PC.inAddr [27] -> \processor.PC.outAddr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12265 to $_DFFE_PP_ for \processor.PC.inAddr [28] -> \processor.PC.outAddr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12266 to $_DFFE_PP_ for \processor.PC.inAddr [29] -> \processor.PC.outAddr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12267 to $_DFFE_PP_ for \processor.PC.inAddr [30] -> \processor.PC.outAddr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12268 to $_DFFE_PP_ for \processor.PC.inAddr [31] -> \processor.PC.outAddr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12279 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[70][0][0]$y$4466 [0] -> \processor.branch_predictor_FSM.bht[70] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12280 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[70][0][0]$y$4466 [1] -> \processor.branch_predictor_FSM.bht[70] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5651 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[141][0][0]$y$4904 [0] -> \processor.branch_predictor_FSM.bht[141] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5652 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[141][0][0]$y$4904 [1] -> \processor.branch_predictor_FSM.bht[141] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5653 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[142][0][0]$y$4910 [0] -> \processor.branch_predictor_FSM.bht[142] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5654 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[142][0][0]$y$4910 [1] -> \processor.branch_predictor_FSM.bht[142] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5655 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[12][0][0]$y$4090 [0] -> \processor.branch_predictor_FSM.bht[12] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5656 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[12][0][0]$y$4090 [1] -> \processor.branch_predictor_FSM.bht[12] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5657 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[30][0][0]$y$4210 [0] -> \processor.branch_predictor_FSM.bht[30] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5658 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[30][0][0]$y$4210 [1] -> \processor.branch_predictor_FSM.bht[30] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5659 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[26][0][0]$y$4186 [0] -> \processor.branch_predictor_FSM.bht[26] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5660 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[26][0][0]$y$4186 [1] -> \processor.branch_predictor_FSM.bht[26] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5661 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[187][0][0]$y$5186 [0] -> \processor.branch_predictor_FSM.bht[187] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5662 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[187][0][0]$y$5186 [1] -> \processor.branch_predictor_FSM.bht[187] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5663 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[188][0][0]$y$5192 [0] -> \processor.branch_predictor_FSM.bht[188] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5664 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[188][0][0]$y$5192 [1] -> \processor.branch_predictor_FSM.bht[188] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5665 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[189][0][0]$y$5198 [0] -> \processor.branch_predictor_FSM.bht[189] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5666 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[189][0][0]$y$5198 [1] -> \processor.branch_predictor_FSM.bht[189] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5667 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[145][0][0]$y$4930 [0] -> \processor.branch_predictor_FSM.bht[145] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5668 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[145][0][0]$y$4930 [1] -> \processor.branch_predictor_FSM.bht[145] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5669 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[34][0][0]$y$4240 [0] -> \processor.branch_predictor_FSM.bht[34] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5670 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[34][0][0]$y$4240 [1] -> \processor.branch_predictor_FSM.bht[34] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5671 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[62][0][0]$y$4412 [0] -> \processor.branch_predictor_FSM.bht[62] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5672 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[62][0][0]$y$4412 [1] -> \processor.branch_predictor_FSM.bht[62] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5673 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[21][0][0]$y$4156 [0] -> \processor.branch_predictor_FSM.bht[21] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5674 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[21][0][0]$y$4156 [1] -> \processor.branch_predictor_FSM.bht[21] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5675 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[25][0][0]$y$4180 [0] -> \processor.branch_predictor_FSM.bht[25] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5676 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[25][0][0]$y$4180 [1] -> \processor.branch_predictor_FSM.bht[25] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5677 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[252][0][0]$y$5586 [0] -> \processor.branch_predictor_FSM.bht[252] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5678 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[252][0][0]$y$5586 [1] -> \processor.branch_predictor_FSM.bht[252] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5679 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[250][0][0]$y$5574 [0] -> \processor.branch_predictor_FSM.bht[250] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5680 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[250][0][0]$y$5574 [1] -> \processor.branch_predictor_FSM.bht[250] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5779 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[253][0][0]$y$5592 [0] -> \processor.branch_predictor_FSM.bht[253] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5780 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[253][0][0]$y$5592 [1] -> \processor.branch_predictor_FSM.bht[253] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5787 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[251][0][0]$y$5580 [0] -> \processor.branch_predictor_FSM.bht[251] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5788 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[251][0][0]$y$5580 [1] -> \processor.branch_predictor_FSM.bht[251] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5795 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[60][0][0]$y$4400 [0] -> \processor.branch_predictor_FSM.bht[60] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5796 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[60][0][0]$y$4400 [1] -> \processor.branch_predictor_FSM.bht[60] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5797 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[249][0][0]$y$5568 [0] -> \processor.branch_predictor_FSM.bht[249] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5798 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[249][0][0]$y$5568 [1] -> \processor.branch_predictor_FSM.bht[249] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5799 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[248][0][0]$y$5562 [0] -> \processor.branch_predictor_FSM.bht[248] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5800 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[248][0][0]$y$5562 [1] -> \processor.branch_predictor_FSM.bht[248] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5993 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[144][0][0]$y$4924 [0] -> \processor.branch_predictor_FSM.bht[144] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5994 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[144][0][0]$y$4924 [1] -> \processor.branch_predictor_FSM.bht[144] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5995 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[247][0][0]$y$5556 [0] -> \processor.branch_predictor_FSM.bht[247] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5996 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[247][0][0]$y$5556 [1] -> \processor.branch_predictor_FSM.bht[247] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5997 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[244][0][0]$y$5538 [0] -> \processor.branch_predictor_FSM.bht[244] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5998 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[244][0][0]$y$5538 [1] -> \processor.branch_predictor_FSM.bht[244] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5999 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[246][0][0]$y$5550 [0] -> \processor.branch_predictor_FSM.bht[246] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6000 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[246][0][0]$y$5550 [1] -> \processor.branch_predictor_FSM.bht[246] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6001 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[245][0][0]$y$5544 [0] -> \processor.branch_predictor_FSM.bht[245] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6002 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[245][0][0]$y$5544 [1] -> \processor.branch_predictor_FSM.bht[245] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6013 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[254][0][0]$y$5598 [0] -> \processor.branch_predictor_FSM.bht[254] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6014 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[254][0][0]$y$5598 [1] -> \processor.branch_predictor_FSM.bht[254] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6025 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[255][0][0]$y$5604 [0] -> \processor.branch_predictor_FSM.bht[255] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6026 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[255][0][0]$y$5604 [1] -> \processor.branch_predictor_FSM.bht[255] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6031 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [0] -> \processor.branch_predictor_FSM.commit_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6032 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [1] -> \processor.branch_predictor_FSM.commit_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6033 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [2] -> \processor.branch_predictor_FSM.commit_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6034 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [3] -> \processor.branch_predictor_FSM.commit_index [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6035 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [4] -> \processor.branch_predictor_FSM.commit_index [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6036 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [5] -> \processor.branch_predictor_FSM.commit_index [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6037 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [6] -> \processor.branch_predictor_FSM.commit_index [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6038 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [7] -> \processor.branch_predictor_FSM.commit_index [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6049 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[214][0][0]$y$5354 [0] -> \processor.branch_predictor_FSM.bht[214] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6050 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[214][0][0]$y$5354 [1] -> \processor.branch_predictor_FSM.bht[214] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6051 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[215][0][0]$y$5360 [0] -> \processor.branch_predictor_FSM.bht[215] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6052 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[215][0][0]$y$5360 [1] -> \processor.branch_predictor_FSM.bht[215] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6053 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[223][0][0]$y$5408 [0] -> \processor.branch_predictor_FSM.bht[223] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6054 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[223][0][0]$y$5408 [1] -> \processor.branch_predictor_FSM.bht[223] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6055 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[224][0][0]$y$5416 [0] -> \processor.branch_predictor_FSM.bht[224] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6056 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[224][0][0]$y$5416 [1] -> \processor.branch_predictor_FSM.bht[224] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6057 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[219][0][0]$y$5384 [0] -> \processor.branch_predictor_FSM.bht[219] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6058 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[219][0][0]$y$5384 [1] -> \processor.branch_predictor_FSM.bht[219] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6059 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[217][0][0]$y$5372 [0] -> \processor.branch_predictor_FSM.bht[217] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6060 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[217][0][0]$y$5372 [1] -> \processor.branch_predictor_FSM.bht[217] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6061 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[207][0][0]$y$5310 [0] -> \processor.branch_predictor_FSM.bht[207] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6062 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[207][0][0]$y$5310 [1] -> \processor.branch_predictor_FSM.bht[207] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6063 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[206][0][0]$y$5304 [0] -> \processor.branch_predictor_FSM.bht[206] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6064 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[206][0][0]$y$5304 [1] -> \processor.branch_predictor_FSM.bht[206] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6065 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[205][0][0]$y$5298 [0] -> \processor.branch_predictor_FSM.bht[205] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6066 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[205][0][0]$y$5298 [1] -> \processor.branch_predictor_FSM.bht[205] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6067 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[213][0][0]$y$5348 [0] -> \processor.branch_predictor_FSM.bht[213] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6068 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[213][0][0]$y$5348 [1] -> \processor.branch_predictor_FSM.bht[213] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6069 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[225][0][0]$y$5422 [0] -> \processor.branch_predictor_FSM.bht[225] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6070 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[225][0][0]$y$5422 [1] -> \processor.branch_predictor_FSM.bht[225] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6071 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[218][0][0]$y$5378 [0] -> \processor.branch_predictor_FSM.bht[218] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6072 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[218][0][0]$y$5378 [1] -> \processor.branch_predictor_FSM.bht[218] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6073 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[209][0][0]$y$5324 [0] -> \processor.branch_predictor_FSM.bht[209] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6074 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[209][0][0]$y$5324 [1] -> \processor.branch_predictor_FSM.bht[209] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6075 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[208][0][0]$y$5318 [0] -> \processor.branch_predictor_FSM.bht[208] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6076 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[208][0][0]$y$5318 [1] -> \processor.branch_predictor_FSM.bht[208] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6077 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[210][0][0]$y$5330 [0] -> \processor.branch_predictor_FSM.bht[210] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6078 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[210][0][0]$y$5330 [1] -> \processor.branch_predictor_FSM.bht[210] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6079 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[211][0][0]$y$5336 [0] -> \processor.branch_predictor_FSM.bht[211] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6080 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[211][0][0]$y$5336 [1] -> \processor.branch_predictor_FSM.bht[211] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6081 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[212][0][0]$y$5342 [0] -> \processor.branch_predictor_FSM.bht[212] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6082 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[212][0][0]$y$5342 [1] -> \processor.branch_predictor_FSM.bht[212] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6083 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[220][0][0]$y$5390 [0] -> \processor.branch_predictor_FSM.bht[220] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6084 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[220][0][0]$y$5390 [1] -> \processor.branch_predictor_FSM.bht[220] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6085 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[226][0][0]$y$5428 [0] -> \processor.branch_predictor_FSM.bht[226] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6086 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[226][0][0]$y$5428 [1] -> \processor.branch_predictor_FSM.bht[226] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6087 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[222][0][0]$y$5402 [0] -> \processor.branch_predictor_FSM.bht[222] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6088 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[222][0][0]$y$5402 [1] -> \processor.branch_predictor_FSM.bht[222] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6089 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[227][0][0]$y$5434 [0] -> \processor.branch_predictor_FSM.bht[227] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6090 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[227][0][0]$y$5434 [1] -> \processor.branch_predictor_FSM.bht[227] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6091 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[216][0][0]$y$5366 [0] -> \processor.branch_predictor_FSM.bht[216] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6092 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[216][0][0]$y$5366 [1] -> \processor.branch_predictor_FSM.bht[216] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6093 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[221][0][0]$y$5396 [0] -> \processor.branch_predictor_FSM.bht[221] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6094 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[221][0][0]$y$5396 [1] -> \processor.branch_predictor_FSM.bht[221] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6095 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[238][0][0]$y$5500 [0] -> \processor.branch_predictor_FSM.bht[238] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6096 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[238][0][0]$y$5500 [1] -> \processor.branch_predictor_FSM.bht[238] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6097 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[232][0][0]$y$5464 [0] -> \processor.branch_predictor_FSM.bht[232] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6098 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[232][0][0]$y$5464 [1] -> \processor.branch_predictor_FSM.bht[232] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6099 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[239][0][0]$y$5506 [0] -> \processor.branch_predictor_FSM.bht[239] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6100 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[239][0][0]$y$5506 [1] -> \processor.branch_predictor_FSM.bht[239] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6101 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[59][0][0]$y$4394 [0] -> \processor.branch_predictor_FSM.bht[59] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6102 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[59][0][0]$y$4394 [1] -> \processor.branch_predictor_FSM.bht[59] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6103 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[47][0][0]$y$4318 [0] -> \processor.branch_predictor_FSM.bht[47] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6104 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[47][0][0]$y$4318 [1] -> \processor.branch_predictor_FSM.bht[47] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6105 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[45][0][0]$y$4306 [0] -> \processor.branch_predictor_FSM.bht[45] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6106 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[45][0][0]$y$4306 [1] -> \processor.branch_predictor_FSM.bht[45] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6107 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[48][0][0]$y$4328 [0] -> \processor.branch_predictor_FSM.bht[48] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6108 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[48][0][0]$y$4328 [1] -> \processor.branch_predictor_FSM.bht[48] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6109 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[143][0][0]$y$4916 [0] -> \processor.branch_predictor_FSM.bht[143] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6110 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[143][0][0]$y$4916 [1] -> \processor.branch_predictor_FSM.bht[143] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6111 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[235][0][0]$y$5482 [0] -> \processor.branch_predictor_FSM.bht[235] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6112 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[235][0][0]$y$5482 [1] -> \processor.branch_predictor_FSM.bht[235] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6113 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[29][0][0]$y$4204 [0] -> \processor.branch_predictor_FSM.bht[29] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6114 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[29][0][0]$y$4204 [1] -> \processor.branch_predictor_FSM.bht[29] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6115 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[54][0][0]$y$4364 [0] -> \processor.branch_predictor_FSM.bht[54] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6116 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[54][0][0]$y$4364 [1] -> \processor.branch_predictor_FSM.bht[54] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6117 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[233][0][0]$y$5470 [0] -> \processor.branch_predictor_FSM.bht[233] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6118 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[233][0][0]$y$5470 [1] -> \processor.branch_predictor_FSM.bht[233] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6119 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[229][0][0]$y$5446 [0] -> \processor.branch_predictor_FSM.bht[229] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6120 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[229][0][0]$y$5446 [1] -> \processor.branch_predictor_FSM.bht[229] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6121 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[230][0][0]$y$5452 [0] -> \processor.branch_predictor_FSM.bht[230] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6122 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[230][0][0]$y$5452 [1] -> \processor.branch_predictor_FSM.bht[230] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6123 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[231][0][0]$y$5458 [0] -> \processor.branch_predictor_FSM.bht[231] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6124 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[231][0][0]$y$5458 [1] -> \processor.branch_predictor_FSM.bht[231] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6125 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[236][0][0]$y$5488 [0] -> \processor.branch_predictor_FSM.bht[236] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6126 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[236][0][0]$y$5488 [1] -> \processor.branch_predictor_FSM.bht[236] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6127 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[57][0][0]$y$4382 [0] -> \processor.branch_predictor_FSM.bht[57] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6128 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[57][0][0]$y$4382 [1] -> \processor.branch_predictor_FSM.bht[57] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6129 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[234][0][0]$y$5476 [0] -> \processor.branch_predictor_FSM.bht[234] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6130 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[234][0][0]$y$5476 [1] -> \processor.branch_predictor_FSM.bht[234] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6131 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[58][0][0]$y$4388 [0] -> \processor.branch_predictor_FSM.bht[58] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6132 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[58][0][0]$y$4388 [1] -> \processor.branch_predictor_FSM.bht[58] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6133 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[241][0][0]$y$5520 [0] -> \processor.branch_predictor_FSM.bht[241] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6134 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[241][0][0]$y$5520 [1] -> \processor.branch_predictor_FSM.bht[241] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6135 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[242][0][0]$y$5526 [0] -> \processor.branch_predictor_FSM.bht[242] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6136 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[242][0][0]$y$5526 [1] -> \processor.branch_predictor_FSM.bht[242] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6137 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[243][0][0]$y$5532 [0] -> \processor.branch_predictor_FSM.bht[243] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6138 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[243][0][0]$y$5532 [1] -> \processor.branch_predictor_FSM.bht[243] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6139 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[240][0][0]$y$5514 [0] -> \processor.branch_predictor_FSM.bht[240] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6140 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[240][0][0]$y$5514 [1] -> \processor.branch_predictor_FSM.bht[240] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6141 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[237][0][0]$y$5494 [0] -> \processor.branch_predictor_FSM.bht[237] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6142 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[237][0][0]$y$5494 [1] -> \processor.branch_predictor_FSM.bht[237] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6143 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[204][0][0]$y$5292 [0] -> \processor.branch_predictor_FSM.bht[204] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6144 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[204][0][0]$y$5292 [1] -> \processor.branch_predictor_FSM.bht[204] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6145 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[228][0][0]$y$5440 [0] -> \processor.branch_predictor_FSM.bht[228] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6146 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[228][0][0]$y$5440 [1] -> \processor.branch_predictor_FSM.bht[228] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6147 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[55][0][0]$y$4370 [0] -> \processor.branch_predictor_FSM.bht[55] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6148 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[55][0][0]$y$4370 [1] -> \processor.branch_predictor_FSM.bht[55] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6149 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[56][0][0]$y$4376 [0] -> \processor.branch_predictor_FSM.bht[56] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6150 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[56][0][0]$y$4376 [1] -> \processor.branch_predictor_FSM.bht[56] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6151 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[169][0][0]$y$5076 [0] -> \processor.branch_predictor_FSM.bht[169] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6152 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[169][0][0]$y$5076 [1] -> \processor.branch_predictor_FSM.bht[169] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6153 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[3][0][0]$y$4008 [0] -> \processor.branch_predictor_FSM.bht[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6154 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[3][0][0]$y$4008 [1] -> \processor.branch_predictor_FSM.bht[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6155 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[171][0][0]$y$5088 [0] -> \processor.branch_predictor_FSM.bht[171] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6156 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[171][0][0]$y$5088 [1] -> \processor.branch_predictor_FSM.bht[171] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6157 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[165][0][0]$y$5052 [0] -> \processor.branch_predictor_FSM.bht[165] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6158 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[165][0][0]$y$5052 [1] -> \processor.branch_predictor_FSM.bht[165] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6159 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[172][0][0]$y$5094 [0] -> \processor.branch_predictor_FSM.bht[172] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6160 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[172][0][0]$y$5094 [1] -> \processor.branch_predictor_FSM.bht[172] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6161 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[203][0][0]$y$5286 [0] -> \processor.branch_predictor_FSM.bht[203] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6162 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[203][0][0]$y$5286 [1] -> \processor.branch_predictor_FSM.bht[203] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6163 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[7][0][0]$y$4044 [0] -> \processor.branch_predictor_FSM.bht[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6164 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[7][0][0]$y$4044 [1] -> \processor.branch_predictor_FSM.bht[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6165 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[4][0][0]$y$4020 [0] -> \processor.branch_predictor_FSM.bht[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6166 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[4][0][0]$y$4020 [1] -> \processor.branch_predictor_FSM.bht[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6167 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[166][0][0]$y$5058 [0] -> \processor.branch_predictor_FSM.bht[166] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6168 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[166][0][0]$y$5058 [1] -> \processor.branch_predictor_FSM.bht[166] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6169 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[1][0][0]$y$3986 [0] -> \processor.branch_predictor_FSM.bht[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6170 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[1][0][0]$y$3986 [1] -> \processor.branch_predictor_FSM.bht[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6171 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[173][0][0]$y$5100 [0] -> \processor.branch_predictor_FSM.bht[173] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6172 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[173][0][0]$y$5100 [1] -> \processor.branch_predictor_FSM.bht[173] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6173 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[170][0][0]$y$5082 [0] -> \processor.branch_predictor_FSM.bht[170] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6174 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[170][0][0]$y$5082 [1] -> \processor.branch_predictor_FSM.bht[170] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6175 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[0][0][0]$y$3974 [0] -> \processor.branch_predictor_FSM.bht[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6176 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[0][0][0]$y$3974 [1] -> \processor.branch_predictor_FSM.bht[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6177 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[167][0][0]$y$5064 [0] -> \processor.branch_predictor_FSM.bht[167] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6178 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[167][0][0]$y$5064 [1] -> \processor.branch_predictor_FSM.bht[167] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6179 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[202][0][0]$y$5280 [0] -> \processor.branch_predictor_FSM.bht[202] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6180 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[202][0][0]$y$5280 [1] -> \processor.branch_predictor_FSM.bht[202] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6181 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[14][0][0]$y$4106 [0] -> \processor.branch_predictor_FSM.bht[14] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6182 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[14][0][0]$y$4106 [1] -> \processor.branch_predictor_FSM.bht[14] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6183 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[174][0][0]$y$5106 [0] -> \processor.branch_predictor_FSM.bht[174] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6184 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[174][0][0]$y$5106 [1] -> \processor.branch_predictor_FSM.bht[174] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6185 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[195][0][0]$y$5238 [0] -> \processor.branch_predictor_FSM.bht[195] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6186 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[195][0][0]$y$5238 [1] -> \processor.branch_predictor_FSM.bht[195] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6187 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[196][0][0]$y$5244 [0] -> \processor.branch_predictor_FSM.bht[196] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6188 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[196][0][0]$y$5244 [1] -> \processor.branch_predictor_FSM.bht[196] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6189 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[197][0][0]$y$5250 [0] -> \processor.branch_predictor_FSM.bht[197] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6190 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[197][0][0]$y$5250 [1] -> \processor.branch_predictor_FSM.bht[197] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6191 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[10][0][0]$y$4072 [0] -> \processor.branch_predictor_FSM.bht[10] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6192 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[10][0][0]$y$4072 [1] -> \processor.branch_predictor_FSM.bht[10] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6193 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[175][0][0]$y$5112 [0] -> \processor.branch_predictor_FSM.bht[175] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6194 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[175][0][0]$y$5112 [1] -> \processor.branch_predictor_FSM.bht[175] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6195 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[6][0][0]$y$4036 [0] -> \processor.branch_predictor_FSM.bht[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6196 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[6][0][0]$y$4036 [1] -> \processor.branch_predictor_FSM.bht[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6197 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[176][0][0]$y$5120 [0] -> \processor.branch_predictor_FSM.bht[176] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6198 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[176][0][0]$y$5120 [1] -> \processor.branch_predictor_FSM.bht[176] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6199 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[18][0][0]$y$4138 [0] -> \processor.branch_predictor_FSM.bht[18] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6200 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[18][0][0]$y$4138 [1] -> \processor.branch_predictor_FSM.bht[18] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6201 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[182][0][0]$y$5156 [0] -> \processor.branch_predictor_FSM.bht[182] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6202 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[182][0][0]$y$5156 [1] -> \processor.branch_predictor_FSM.bht[182] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6203 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[17][0][0]$y$4132 [0] -> \processor.branch_predictor_FSM.bht[17] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6204 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[17][0][0]$y$4132 [1] -> \processor.branch_predictor_FSM.bht[17] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6205 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[181][0][0]$y$5150 [0] -> \processor.branch_predictor_FSM.bht[181] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6206 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[181][0][0]$y$5150 [1] -> \processor.branch_predictor_FSM.bht[181] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6207 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[177][0][0]$y$5126 [0] -> \processor.branch_predictor_FSM.bht[177] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6208 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[177][0][0]$y$5126 [1] -> \processor.branch_predictor_FSM.bht[177] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6209 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[2][0][0]$y$3998 [0] -> \processor.branch_predictor_FSM.bht[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6210 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[2][0][0]$y$3998 [1] -> \processor.branch_predictor_FSM.bht[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6211 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[198][0][0]$y$5256 [0] -> \processor.branch_predictor_FSM.bht[198] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6212 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[198][0][0]$y$5256 [1] -> \processor.branch_predictor_FSM.bht[198] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6213 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[8][0][0]$y$4056 [0] -> \processor.branch_predictor_FSM.bht[8] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6214 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[8][0][0]$y$4056 [1] -> \processor.branch_predictor_FSM.bht[8] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6215 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[199][0][0]$y$5262 [0] -> \processor.branch_predictor_FSM.bht[199] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6216 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[199][0][0]$y$5262 [1] -> \processor.branch_predictor_FSM.bht[199] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6217 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[200][0][0]$y$5268 [0] -> \processor.branch_predictor_FSM.bht[200] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6218 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[200][0][0]$y$5268 [1] -> \processor.branch_predictor_FSM.bht[200] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6219 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[201][0][0]$y$5274 [0] -> \processor.branch_predictor_FSM.bht[201] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6220 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[201][0][0]$y$5274 [1] -> \processor.branch_predictor_FSM.bht[201] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6221 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[19][0][0]$y$4144 [0] -> \processor.branch_predictor_FSM.bht[19] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6222 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[19][0][0]$y$4144 [1] -> \processor.branch_predictor_FSM.bht[19] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6223 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[13][0][0]$y$4098 [0] -> \processor.branch_predictor_FSM.bht[13] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6224 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[13][0][0]$y$4098 [1] -> \processor.branch_predictor_FSM.bht[13] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6225 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[22][0][0]$y$4162 [0] -> \processor.branch_predictor_FSM.bht[22] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6226 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[22][0][0]$y$4162 [1] -> \processor.branch_predictor_FSM.bht[22] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6227 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[179][0][0]$y$5138 [0] -> \processor.branch_predictor_FSM.bht[179] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6228 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[179][0][0]$y$5138 [1] -> \processor.branch_predictor_FSM.bht[179] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6229 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[15][0][0]$y$4114 [0] -> \processor.branch_predictor_FSM.bht[15] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6230 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[15][0][0]$y$4114 [1] -> \processor.branch_predictor_FSM.bht[15] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6231 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[194][0][0]$y$5232 [0] -> \processor.branch_predictor_FSM.bht[194] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6232 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[194][0][0]$y$5232 [1] -> \processor.branch_predictor_FSM.bht[194] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6233 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[180][0][0]$y$5144 [0] -> \processor.branch_predictor_FSM.bht[180] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6234 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[180][0][0]$y$5144 [1] -> \processor.branch_predictor_FSM.bht[180] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6255 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[50][0][0]$y$4340 [0] -> \processor.branch_predictor_FSM.bht[50] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6256 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[50][0][0]$y$4340 [1] -> \processor.branch_predictor_FSM.bht[50] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6257 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[33][0][0]$y$4234 [0] -> \processor.branch_predictor_FSM.bht[33] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6258 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[33][0][0]$y$4234 [1] -> \processor.branch_predictor_FSM.bht[33] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6259 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[32][0][0]$y$4228 [0] -> \processor.branch_predictor_FSM.bht[32] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6260 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[32][0][0]$y$4228 [1] -> \processor.branch_predictor_FSM.bht[32] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6261 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[28][0][0]$y$4198 [0] -> \processor.branch_predictor_FSM.bht[28] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6262 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[28][0][0]$y$4198 [1] -> \processor.branch_predictor_FSM.bht[28] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6263 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[43][0][0]$y$4294 [0] -> \processor.branch_predictor_FSM.bht[43] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6264 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[43][0][0]$y$4294 [1] -> \processor.branch_predictor_FSM.bht[43] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6265 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[46][0][0]$y$4312 [0] -> \processor.branch_predictor_FSM.bht[46] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6266 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[46][0][0]$y$4312 [1] -> \processor.branch_predictor_FSM.bht[46] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6267 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[53][0][0]$y$4358 [0] -> \processor.branch_predictor_FSM.bht[53] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6268 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[53][0][0]$y$4358 [1] -> \processor.branch_predictor_FSM.bht[53] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6269 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[51][0][0]$y$4346 [0] -> \processor.branch_predictor_FSM.bht[51] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6270 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[51][0][0]$y$4346 [1] -> \processor.branch_predictor_FSM.bht[51] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6271 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[52][0][0]$y$4352 [0] -> \processor.branch_predictor_FSM.bht[52] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6272 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[52][0][0]$y$4352 [1] -> \processor.branch_predictor_FSM.bht[52] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6273 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[39][0][0]$y$4270 [0] -> \processor.branch_predictor_FSM.bht[39] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6274 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[39][0][0]$y$4270 [1] -> \processor.branch_predictor_FSM.bht[39] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6275 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[44][0][0]$y$4300 [0] -> \processor.branch_predictor_FSM.bht[44] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6276 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[44][0][0]$y$4300 [1] -> \processor.branch_predictor_FSM.bht[44] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6277 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[24][0][0]$y$4174 [0] -> \processor.branch_predictor_FSM.bht[24] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6278 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[24][0][0]$y$4174 [1] -> \processor.branch_predictor_FSM.bht[24] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6279 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[42][0][0]$y$4288 [0] -> \processor.branch_predictor_FSM.bht[42] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6280 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[42][0][0]$y$4288 [1] -> \processor.branch_predictor_FSM.bht[42] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6281 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[41][0][0]$y$4282 [0] -> \processor.branch_predictor_FSM.bht[41] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6282 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[41][0][0]$y$4282 [1] -> \processor.branch_predictor_FSM.bht[41] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6284 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[49][0][0]$y$4334 [0] -> \processor.branch_predictor_FSM.bht[49] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6285 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[49][0][0]$y$4334 [1] -> \processor.branch_predictor_FSM.bht[49] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6288 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[190][0][0]$y$5204 [0] -> \processor.branch_predictor_FSM.bht[190] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6289 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[190][0][0]$y$5204 [1] -> \processor.branch_predictor_FSM.bht[190] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6290 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[11][0][0]$y$4080 [0] -> \processor.branch_predictor_FSM.bht[11] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6291 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[11][0][0]$y$4080 [1] -> \processor.branch_predictor_FSM.bht[11] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6292 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[191][0][0]$y$5210 [0] -> \processor.branch_predictor_FSM.bht[191] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6293 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[191][0][0]$y$5210 [1] -> \processor.branch_predictor_FSM.bht[191] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6294 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[192][0][0]$y$5220 [0] -> \processor.branch_predictor_FSM.bht[192] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6295 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[192][0][0]$y$5220 [1] -> \processor.branch_predictor_FSM.bht[192] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6296 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[193][0][0]$y$5226 [0] -> \processor.branch_predictor_FSM.bht[193] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6297 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[193][0][0]$y$5226 [1] -> \processor.branch_predictor_FSM.bht[193] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6328 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[20][0][0]$y$4150 [0] -> \processor.branch_predictor_FSM.bht[20] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6329 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[20][0][0]$y$4150 [1] -> \processor.branch_predictor_FSM.bht[20] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6332 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[9][0][0]$y$4064 [0] -> \processor.branch_predictor_FSM.bht[9] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6333 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[9][0][0]$y$4064 [1] -> \processor.branch_predictor_FSM.bht[9] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6354 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[178][0][0]$y$5132 [0] -> \processor.branch_predictor_FSM.bht[178] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6355 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[178][0][0]$y$5132 [1] -> \processor.branch_predictor_FSM.bht[178] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6364 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[37][0][0]$y$4258 [0] -> \processor.branch_predictor_FSM.bht[37] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6365 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[37][0][0]$y$4258 [1] -> \processor.branch_predictor_FSM.bht[37] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6366 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[35][0][0]$y$4246 [0] -> \processor.branch_predictor_FSM.bht[35] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6367 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[35][0][0]$y$4246 [1] -> \processor.branch_predictor_FSM.bht[35] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6368 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[23][0][0]$y$4168 [0] -> \processor.branch_predictor_FSM.bht[23] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6369 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[23][0][0]$y$4168 [1] -> \processor.branch_predictor_FSM.bht[23] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6370 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[183][0][0]$y$5162 [0] -> \processor.branch_predictor_FSM.bht[183] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6371 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[183][0][0]$y$5162 [1] -> \processor.branch_predictor_FSM.bht[183] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6372 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[184][0][0]$y$5168 [0] -> \processor.branch_predictor_FSM.bht[184] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6373 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[184][0][0]$y$5168 [1] -> \processor.branch_predictor_FSM.bht[184] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6374 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[185][0][0]$y$5174 [0] -> \processor.branch_predictor_FSM.bht[185] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6375 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[185][0][0]$y$5174 [1] -> \processor.branch_predictor_FSM.bht[185] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6376 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[186][0][0]$y$5180 [0] -> \processor.branch_predictor_FSM.bht[186] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6377 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[186][0][0]$y$5180 [1] -> \processor.branch_predictor_FSM.bht[186] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6382 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[31][0][0]$y$4216 [0] -> \processor.branch_predictor_FSM.bht[31] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6383 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[31][0][0]$y$4216 [1] -> \processor.branch_predictor_FSM.bht[31] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6384 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[40][0][0]$y$4276 [0] -> \processor.branch_predictor_FSM.bht[40] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6385 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[40][0][0]$y$4276 [1] -> \processor.branch_predictor_FSM.bht[40] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6386 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[16][0][0]$y$4126 [0] -> \processor.branch_predictor_FSM.bht[16] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6387 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[16][0][0]$y$4126 [1] -> \processor.branch_predictor_FSM.bht[16] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6388 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[36][0][0]$y$4252 [0] -> \processor.branch_predictor_FSM.bht[36] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6389 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[36][0][0]$y$4252 [1] -> \processor.branch_predictor_FSM.bht[36] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6390 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[163][0][0]$y$5040 [0] -> \processor.branch_predictor_FSM.bht[163] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6391 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[163][0][0]$y$5040 [1] -> \processor.branch_predictor_FSM.bht[163] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6394 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[68][0][0]$y$4454 [0] -> \processor.branch_predictor_FSM.bht[68] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6395 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[68][0][0]$y$4454 [1] -> \processor.branch_predictor_FSM.bht[68] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6398 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[128][0][0]$y$4826 [0] -> \processor.branch_predictor_FSM.bht[128] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6399 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[128][0][0]$y$4826 [1] -> \processor.branch_predictor_FSM.bht[128] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6491 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[139][0][0]$y$4892 [0] -> \processor.branch_predictor_FSM.bht[139] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6492 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[139][0][0]$y$4892 [1] -> \processor.branch_predictor_FSM.bht[139] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6500 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [0] -> \data_mem_inst.read_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6501 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [1] -> \data_mem_inst.read_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6502 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [2] -> \data_mem_inst.read_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6503 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [3] -> \data_mem_inst.read_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6504 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [4] -> \data_mem_inst.read_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6505 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [5] -> \data_mem_inst.read_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6506 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [6] -> \data_mem_inst.read_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6507 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [7] -> \data_mem_inst.read_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6508 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [8] -> \data_mem_inst.read_data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6509 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [9] -> \data_mem_inst.read_data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6510 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [10] -> \data_mem_inst.read_data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6511 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [11] -> \data_mem_inst.read_data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6512 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [12] -> \data_mem_inst.read_data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6513 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [13] -> \data_mem_inst.read_data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6514 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [14] -> \data_mem_inst.read_data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6515 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [15] -> \data_mem_inst.read_data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6516 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [16] -> \data_mem_inst.read_data [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6517 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [17] -> \data_mem_inst.read_data [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6518 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [18] -> \data_mem_inst.read_data [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6519 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [19] -> \data_mem_inst.read_data [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6520 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [20] -> \data_mem_inst.read_data [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6521 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [21] -> \data_mem_inst.read_data [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6522 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [22] -> \data_mem_inst.read_data [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6523 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [23] -> \data_mem_inst.read_data [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6524 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [24] -> \data_mem_inst.read_data [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6525 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [25] -> \data_mem_inst.read_data [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6526 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [26] -> \data_mem_inst.read_data [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6527 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [27] -> \data_mem_inst.read_data [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6528 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [28] -> \data_mem_inst.read_data [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6529 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [29] -> \data_mem_inst.read_data [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6530 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [30] -> \data_mem_inst.read_data [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6531 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [31] -> \data_mem_inst.read_data [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6532 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1171.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6988_Y -> \data_mem_inst.clk_stall.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6533 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [0] -> \data_mem_inst.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6534 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [1] -> \data_mem_inst.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6535 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [2] -> \data_mem_inst.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6536 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [3] -> \data_mem_inst.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6537 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [4] -> \data_mem_inst.state [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6538 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [5] -> \data_mem_inst.state [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6539 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [6] -> \data_mem_inst.state [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6540 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [7] -> \data_mem_inst.state [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6541 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [8] -> \data_mem_inst.state [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6542 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [9] -> \data_mem_inst.state [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6543 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [10] -> \data_mem_inst.state [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6544 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [11] -> \data_mem_inst.state [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6545 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [12] -> \data_mem_inst.state [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6546 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [13] -> \data_mem_inst.state [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6547 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [14] -> \data_mem_inst.state [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6548 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [15] -> \data_mem_inst.state [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6549 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [16] -> \data_mem_inst.state [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6550 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [17] -> \data_mem_inst.state [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6551 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [18] -> \data_mem_inst.state [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6552 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [19] -> \data_mem_inst.state [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6553 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [20] -> \data_mem_inst.state [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6554 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [21] -> \data_mem_inst.state [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6555 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [22] -> \data_mem_inst.state [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6556 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [23] -> \data_mem_inst.state [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6557 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [24] -> \data_mem_inst.state [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6558 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [25] -> \data_mem_inst.state [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6559 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [26] -> \data_mem_inst.state [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6560 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [27] -> \data_mem_inst.state [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6561 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [28] -> \data_mem_inst.state [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6562 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [29] -> \data_mem_inst.state [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6563 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [30] -> \data_mem_inst.state [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6564 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1159.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$6744_Y [31] -> \data_mem_inst.state [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6565 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[164][0][0]$y$5046 [0] -> \processor.branch_predictor_FSM.bht[164] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6566 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[164][0][0]$y$5046 [1] -> \processor.branch_predictor_FSM.bht[164] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6567 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\memread_buf[0:0] -> \data_mem_inst.memread_buf.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6568 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\memwrite_buf[0:0] -> \data_mem_inst.memwrite_buf.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6569 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [0] -> \data_mem_inst.write_data_buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6570 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [1] -> \data_mem_inst.write_data_buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6571 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [2] -> \data_mem_inst.write_data_buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6572 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [3] -> \data_mem_inst.write_data_buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6573 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [4] -> \data_mem_inst.write_data_buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6574 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [5] -> \data_mem_inst.write_data_buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6575 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [6] -> \data_mem_inst.write_data_buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6576 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [7] -> \data_mem_inst.write_data_buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6577 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [8] -> \data_mem_inst.write_data_buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6578 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [9] -> \data_mem_inst.write_data_buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6579 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [10] -> \data_mem_inst.write_data_buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6580 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [11] -> \data_mem_inst.write_data_buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6581 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [12] -> \data_mem_inst.write_data_buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6582 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [13] -> \data_mem_inst.write_data_buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6583 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [14] -> \data_mem_inst.write_data_buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6584 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [15] -> \data_mem_inst.write_data_buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6585 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [16] -> \data_mem_inst.write_data_buffer [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6586 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [17] -> \data_mem_inst.write_data_buffer [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6587 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [18] -> \data_mem_inst.write_data_buffer [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6588 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [19] -> \data_mem_inst.write_data_buffer [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6589 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [20] -> \data_mem_inst.write_data_buffer [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6590 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [21] -> \data_mem_inst.write_data_buffer [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6591 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [22] -> \data_mem_inst.write_data_buffer [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6592 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [23] -> \data_mem_inst.write_data_buffer [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6593 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [24] -> \data_mem_inst.write_data_buffer [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6594 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [25] -> \data_mem_inst.write_data_buffer [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6595 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [26] -> \data_mem_inst.write_data_buffer [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6596 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [27] -> \data_mem_inst.write_data_buffer [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6597 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [28] -> \data_mem_inst.write_data_buffer [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6598 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [29] -> \data_mem_inst.write_data_buffer [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6599 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [30] -> \data_mem_inst.write_data_buffer [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6600 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [31] -> \data_mem_inst.write_data_buffer [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6601 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [0] -> \data_mem_inst.addr_buf [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6602 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [1] -> \data_mem_inst.addr_buf [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6603 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [2] -> \data_mem_inst.addr_buf [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6604 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [3] -> \data_mem_inst.addr_buf [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6605 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [4] -> \data_mem_inst.addr_buf [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6606 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [5] -> \data_mem_inst.addr_buf [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6607 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [6] -> \data_mem_inst.addr_buf [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6608 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [7] -> \data_mem_inst.addr_buf [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6609 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [8] -> \data_mem_inst.addr_buf [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6610 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [9] -> \data_mem_inst.addr_buf [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6611 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [10] -> \data_mem_inst.addr_buf [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6634 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\sign_mask_buf[3:0] [1] -> \data_mem_inst.sign_mask_buf [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6635 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\sign_mask_buf[3:0] [2] -> \data_mem_inst.sign_mask_buf [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6636 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\sign_mask_buf[3:0] [3] -> \data_mem_inst.sign_mask_buf [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6637 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[71][0][0]$y$4472 [0] -> \processor.branch_predictor_FSM.bht[71] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6638 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[71][0][0]$y$4472 [1] -> \processor.branch_predictor_FSM.bht[71] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6639 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [0] -> \data_mem_inst.led_reg [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6640 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [1] -> \data_mem_inst.led_reg [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6641 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [2] -> \data_mem_inst.led_reg [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6642 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [3] -> \data_mem_inst.led_reg [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6643 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [4] -> \data_mem_inst.led_reg [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6644 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [5] -> \data_mem_inst.led_reg [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6645 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [6] -> \data_mem_inst.led_reg [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6646 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [7] -> \data_mem_inst.led_reg [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6671 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[137][0][0]$y$4880 [0] -> \processor.branch_predictor_FSM.bht[137] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6672 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[137][0][0]$y$4880 [1] -> \processor.branch_predictor_FSM.bht[137] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7140 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[136][0][0]$y$4874 [0] -> \processor.branch_predictor_FSM.bht[136] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7141 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[136][0][0]$y$4874 [1] -> \processor.branch_predictor_FSM.bht[136] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7546 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[150][0][0]$y$4960 [0] -> \processor.branch_predictor_FSM.bht[150] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7547 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[150][0][0]$y$4960 [1] -> \processor.branch_predictor_FSM.bht[150] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7645 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[67][0][0]$y$4448 [0] -> \processor.branch_predictor_FSM.bht[67] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7646 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[67][0][0]$y$4448 [1] -> \processor.branch_predictor_FSM.bht[67] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8186 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[129][0][0]$y$4832 [0] -> \processor.branch_predictor_FSM.bht[129] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8187 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[129][0][0]$y$4832 [1] -> \processor.branch_predictor_FSM.bht[129] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8188 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[66][0][0]$y$4442 [0] -> \processor.branch_predictor_FSM.bht[66] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8189 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[66][0][0]$y$4442 [1] -> \processor.branch_predictor_FSM.bht[66] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8190 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[64][0][0]$y$4430 [0] -> \processor.branch_predictor_FSM.bht[64] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8191 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[64][0][0]$y$4430 [1] -> \processor.branch_predictor_FSM.bht[64] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8192 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[61][0][0]$y$4406 [0] -> \processor.branch_predictor_FSM.bht[61] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8193 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[61][0][0]$y$4406 [1] -> \processor.branch_predictor_FSM.bht[61] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8197 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[65][0][0]$y$4436 [0] -> \processor.branch_predictor_FSM.bht[65] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8198 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[65][0][0]$y$4436 [1] -> \processor.branch_predictor_FSM.bht[65] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8200 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[72][0][0]$y$4478 [0] -> \processor.branch_predictor_FSM.bht[72] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8201 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[72][0][0]$y$4478 [1] -> \processor.branch_predictor_FSM.bht[72] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8202 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[69][0][0]$y$4460 [0] -> \processor.branch_predictor_FSM.bht[69] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8203 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[69][0][0]$y$4460 [1] -> \processor.branch_predictor_FSM.bht[69] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8204 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[135][0][0]$y$4868 [0] -> \processor.branch_predictor_FSM.bht[135] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8205 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[135][0][0]$y$4868 [1] -> \processor.branch_predictor_FSM.bht[135] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8206 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[146][0][0]$y$4936 [0] -> \processor.branch_predictor_FSM.bht[146] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8207 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[146][0][0]$y$4936 [1] -> \processor.branch_predictor_FSM.bht[146] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8208 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[74][0][0]$y$4490 [0] -> \processor.branch_predictor_FSM.bht[74] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8209 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[74][0][0]$y$4490 [1] -> \processor.branch_predictor_FSM.bht[74] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8210 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[162][0][0]$y$5034 [0] -> \processor.branch_predictor_FSM.bht[162] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8211 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[162][0][0]$y$5034 [1] -> \processor.branch_predictor_FSM.bht[162] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8212 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[75][0][0]$y$4496 [0] -> \processor.branch_predictor_FSM.bht[75] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8213 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[75][0][0]$y$4496 [1] -> \processor.branch_predictor_FSM.bht[75] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8214 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[73][0][0]$y$4484 [0] -> \processor.branch_predictor_FSM.bht[73] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8215 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[73][0][0]$y$4484 [1] -> \processor.branch_predictor_FSM.bht[73] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8216 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[76][0][0]$y$4502 [0] -> \processor.branch_predictor_FSM.bht[76] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8217 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[76][0][0]$y$4502 [1] -> \processor.branch_predictor_FSM.bht[76] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8218 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[38][0][0]$y$4264 [0] -> \processor.branch_predictor_FSM.bht[38] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8219 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[38][0][0]$y$4264 [1] -> \processor.branch_predictor_FSM.bht[38] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8220 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[78][0][0]$y$4514 [0] -> \processor.branch_predictor_FSM.bht[78] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8221 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[78][0][0]$y$4514 [1] -> \processor.branch_predictor_FSM.bht[78] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8222 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[79][0][0]$y$4520 [0] -> \processor.branch_predictor_FSM.bht[79] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8223 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[79][0][0]$y$4520 [1] -> \processor.branch_predictor_FSM.bht[79] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8224 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[77][0][0]$y$4508 [0] -> \processor.branch_predictor_FSM.bht[77] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8225 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[77][0][0]$y$4508 [1] -> \processor.branch_predictor_FSM.bht[77] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8226 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[80][0][0]$y$4528 [0] -> \processor.branch_predictor_FSM.bht[80] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8227 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[80][0][0]$y$4528 [1] -> \processor.branch_predictor_FSM.bht[80] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8228 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[82][0][0]$y$4540 [0] -> \processor.branch_predictor_FSM.bht[82] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8229 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[82][0][0]$y$4540 [1] -> \processor.branch_predictor_FSM.bht[82] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8230 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[161][0][0]$y$5028 [0] -> \processor.branch_predictor_FSM.bht[161] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8231 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[161][0][0]$y$5028 [1] -> \processor.branch_predictor_FSM.bht[161] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8232 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[83][0][0]$y$4546 [0] -> \processor.branch_predictor_FSM.bht[83] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8233 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[83][0][0]$y$4546 [1] -> \processor.branch_predictor_FSM.bht[83] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8234 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[81][0][0]$y$4534 [0] -> \processor.branch_predictor_FSM.bht[81] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8235 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[81][0][0]$y$4534 [1] -> \processor.branch_predictor_FSM.bht[81] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8236 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[84][0][0]$y$4552 [0] -> \processor.branch_predictor_FSM.bht[84] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8237 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[84][0][0]$y$4552 [1] -> \processor.branch_predictor_FSM.bht[84] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8238 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[134][0][0]$y$4862 [0] -> \processor.branch_predictor_FSM.bht[134] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8239 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[134][0][0]$y$4862 [1] -> \processor.branch_predictor_FSM.bht[134] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8240 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[147][0][0]$y$4942 [0] -> \processor.branch_predictor_FSM.bht[147] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8241 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[147][0][0]$y$4942 [1] -> \processor.branch_predictor_FSM.bht[147] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8242 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[86][0][0]$y$4564 [0] -> \processor.branch_predictor_FSM.bht[86] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8243 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[86][0][0]$y$4564 [1] -> \processor.branch_predictor_FSM.bht[86] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8244 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[160][0][0]$y$5022 [0] -> \processor.branch_predictor_FSM.bht[160] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8245 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[160][0][0]$y$5022 [1] -> \processor.branch_predictor_FSM.bht[160] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8246 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[87][0][0]$y$4570 [0] -> \processor.branch_predictor_FSM.bht[87] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8247 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[87][0][0]$y$4570 [1] -> \processor.branch_predictor_FSM.bht[87] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8248 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[85][0][0]$y$4558 [0] -> \processor.branch_predictor_FSM.bht[85] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8249 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[85][0][0]$y$4558 [1] -> \processor.branch_predictor_FSM.bht[85] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8250 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[88][0][0]$y$4576 [0] -> \processor.branch_predictor_FSM.bht[88] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8251 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[88][0][0]$y$4576 [1] -> \processor.branch_predictor_FSM.bht[88] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8252 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[27][0][0]$y$4192 [0] -> \processor.branch_predictor_FSM.bht[27] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8253 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[27][0][0]$y$4192 [1] -> \processor.branch_predictor_FSM.bht[27] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8254 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[90][0][0]$y$4588 [0] -> \processor.branch_predictor_FSM.bht[90] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8255 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[90][0][0]$y$4588 [1] -> \processor.branch_predictor_FSM.bht[90] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8256 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[91][0][0]$y$4594 [0] -> \processor.branch_predictor_FSM.bht[91] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8257 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[91][0][0]$y$4594 [1] -> \processor.branch_predictor_FSM.bht[91] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8258 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[89][0][0]$y$4582 [0] -> \processor.branch_predictor_FSM.bht[89] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8259 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[89][0][0]$y$4582 [1] -> \processor.branch_predictor_FSM.bht[89] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8260 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[92][0][0]$y$4600 [0] -> \processor.branch_predictor_FSM.bht[92] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8261 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[92][0][0]$y$4600 [1] -> \processor.branch_predictor_FSM.bht[92] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8262 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[94][0][0]$y$4612 [0] -> \processor.branch_predictor_FSM.bht[94] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8263 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[94][0][0]$y$4612 [1] -> \processor.branch_predictor_FSM.bht[94] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8264 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[159][0][0]$y$5014 [0] -> \processor.branch_predictor_FSM.bht[159] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8265 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[159][0][0]$y$5014 [1] -> \processor.branch_predictor_FSM.bht[159] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8266 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[95][0][0]$y$4618 [0] -> \processor.branch_predictor_FSM.bht[95] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8267 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[95][0][0]$y$4618 [1] -> \processor.branch_predictor_FSM.bht[95] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8268 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[93][0][0]$y$4606 [0] -> \processor.branch_predictor_FSM.bht[93] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8269 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[93][0][0]$y$4606 [1] -> \processor.branch_predictor_FSM.bht[93] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8270 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[96][0][0]$y$4626 [0] -> \processor.branch_predictor_FSM.bht[96] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8271 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[96][0][0]$y$4626 [1] -> \processor.branch_predictor_FSM.bht[96] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8272 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[131][0][0]$y$4844 [0] -> \processor.branch_predictor_FSM.bht[131] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8273 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[131][0][0]$y$4844 [1] -> \processor.branch_predictor_FSM.bht[131] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8274 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[148][0][0]$y$4948 [0] -> \processor.branch_predictor_FSM.bht[148] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8275 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[148][0][0]$y$4948 [1] -> \processor.branch_predictor_FSM.bht[148] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8276 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[98][0][0]$y$4638 [0] -> \processor.branch_predictor_FSM.bht[98] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8277 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[98][0][0]$y$4638 [1] -> \processor.branch_predictor_FSM.bht[98] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8278 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[158][0][0]$y$5008 [0] -> \processor.branch_predictor_FSM.bht[158] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8279 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[158][0][0]$y$5008 [1] -> \processor.branch_predictor_FSM.bht[158] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8280 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[99][0][0]$y$4644 [0] -> \processor.branch_predictor_FSM.bht[99] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8281 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[99][0][0]$y$4644 [1] -> \processor.branch_predictor_FSM.bht[99] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8282 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[97][0][0]$y$4632 [0] -> \processor.branch_predictor_FSM.bht[97] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8283 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[97][0][0]$y$4632 [1] -> \processor.branch_predictor_FSM.bht[97] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8284 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[100][0][0]$y$4650 [0] -> \processor.branch_predictor_FSM.bht[100] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8285 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[100][0][0]$y$4650 [1] -> \processor.branch_predictor_FSM.bht[100] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8286 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[102][0][0]$y$4662 [0] -> \processor.branch_predictor_FSM.bht[102] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8287 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[102][0][0]$y$4662 [1] -> \processor.branch_predictor_FSM.bht[102] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8288 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[103][0][0]$y$4668 [0] -> \processor.branch_predictor_FSM.bht[103] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8289 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[103][0][0]$y$4668 [1] -> \processor.branch_predictor_FSM.bht[103] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8290 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[101][0][0]$y$4656 [0] -> \processor.branch_predictor_FSM.bht[101] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8291 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[101][0][0]$y$4656 [1] -> \processor.branch_predictor_FSM.bht[101] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8292 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[5][0][0]$y$4028 [0] -> \processor.branch_predictor_FSM.bht[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8293 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[5][0][0]$y$4028 [1] -> \processor.branch_predictor_FSM.bht[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8295 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[106][0][0]$y$4686 [0] -> \processor.branch_predictor_FSM.bht[106] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8296 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[106][0][0]$y$4686 [1] -> \processor.branch_predictor_FSM.bht[106] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8297 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[105][0][0]$y$4680 [0] -> \processor.branch_predictor_FSM.bht[105] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8298 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[105][0][0]$y$4680 [1] -> \processor.branch_predictor_FSM.bht[105] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8299 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[107][0][0]$y$4692 [0] -> \processor.branch_predictor_FSM.bht[107] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8300 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[107][0][0]$y$4692 [1] -> \processor.branch_predictor_FSM.bht[107] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8301 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[133][0][0]$y$4856 [0] -> \processor.branch_predictor_FSM.bht[133] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8302 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[133][0][0]$y$4856 [1] -> \processor.branch_predictor_FSM.bht[133] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8303 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[110][0][0]$y$4710 [0] -> \processor.branch_predictor_FSM.bht[110] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8304 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[110][0][0]$y$4710 [1] -> \processor.branch_predictor_FSM.bht[110] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8305 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[109][0][0]$y$4704 [0] -> \processor.branch_predictor_FSM.bht[109] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8306 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[109][0][0]$y$4704 [1] -> \processor.branch_predictor_FSM.bht[109] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8307 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[111][0][0]$y$4716 [0] -> \processor.branch_predictor_FSM.bht[111] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8308 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[111][0][0]$y$4716 [1] -> \processor.branch_predictor_FSM.bht[111] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8309 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[104][0][0]$y$4674 [0] -> \processor.branch_predictor_FSM.bht[104] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8310 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[104][0][0]$y$4674 [1] -> \processor.branch_predictor_FSM.bht[104] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8311 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[114][0][0]$y$4736 [0] -> \processor.branch_predictor_FSM.bht[114] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8312 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[114][0][0]$y$4736 [1] -> \processor.branch_predictor_FSM.bht[114] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8313 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[113][0][0]$y$4730 [0] -> \processor.branch_predictor_FSM.bht[113] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8314 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[113][0][0]$y$4730 [1] -> \processor.branch_predictor_FSM.bht[113] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8315 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[115][0][0]$y$4742 [0] -> \processor.branch_predictor_FSM.bht[115] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8316 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[115][0][0]$y$4742 [1] -> \processor.branch_predictor_FSM.bht[115] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8317 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[108][0][0]$y$4698 [0] -> \processor.branch_predictor_FSM.bht[108] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8318 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[108][0][0]$y$4698 [1] -> \processor.branch_predictor_FSM.bht[108] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8319 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[112][0][0]$y$4724 [0] -> \processor.branch_predictor_FSM.bht[112] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8320 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[112][0][0]$y$4724 [1] -> \processor.branch_predictor_FSM.bht[112] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8321 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[116][0][0]$y$4748 [0] -> \processor.branch_predictor_FSM.bht[116] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8322 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[116][0][0]$y$4748 [1] -> \processor.branch_predictor_FSM.bht[116] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8323 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[118][0][0]$y$4760 [0] -> \processor.branch_predictor_FSM.bht[118] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8324 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[118][0][0]$y$4760 [1] -> \processor.branch_predictor_FSM.bht[118] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8325 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[157][0][0]$y$5002 [0] -> \processor.branch_predictor_FSM.bht[157] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8326 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[157][0][0]$y$5002 [1] -> \processor.branch_predictor_FSM.bht[157] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8327 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[119][0][0]$y$4766 [0] -> \processor.branch_predictor_FSM.bht[119] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8328 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[119][0][0]$y$4766 [1] -> \processor.branch_predictor_FSM.bht[119] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8329 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[117][0][0]$y$4754 [0] -> \processor.branch_predictor_FSM.bht[117] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8330 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[117][0][0]$y$4754 [1] -> \processor.branch_predictor_FSM.bht[117] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8331 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[120][0][0]$y$4772 [0] -> \processor.branch_predictor_FSM.bht[120] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8332 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[120][0][0]$y$4772 [1] -> \processor.branch_predictor_FSM.bht[120] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8333 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[121][0][0]$y$4778 [0] -> \processor.branch_predictor_FSM.bht[121] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8334 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[121][0][0]$y$4778 [1] -> \processor.branch_predictor_FSM.bht[121] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8335 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[156][0][0]$y$4996 [0] -> \processor.branch_predictor_FSM.bht[156] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8336 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[156][0][0]$y$4996 [1] -> \processor.branch_predictor_FSM.bht[156] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8337 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[149][0][0]$y$4954 [0] -> \processor.branch_predictor_FSM.bht[149] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8338 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[149][0][0]$y$4954 [1] -> \processor.branch_predictor_FSM.bht[149] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8339 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[140][0][0]$y$4898 [0] -> \processor.branch_predictor_FSM.bht[140] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8340 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[140][0][0]$y$4898 [1] -> \processor.branch_predictor_FSM.bht[140] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8341 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[154][0][0]$y$4984 [0] -> \processor.branch_predictor_FSM.bht[154] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8342 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[154][0][0]$y$4984 [1] -> \processor.branch_predictor_FSM.bht[154] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8343 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[155][0][0]$y$4990 [0] -> \processor.branch_predictor_FSM.bht[155] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8344 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[155][0][0]$y$4990 [1] -> \processor.branch_predictor_FSM.bht[155] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8345 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[122][0][0]$y$4784 [0] -> \processor.branch_predictor_FSM.bht[122] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8346 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[122][0][0]$y$4784 [1] -> \processor.branch_predictor_FSM.bht[122] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8347 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[123][0][0]$y$4790 [0] -> \processor.branch_predictor_FSM.bht[123] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8348 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[123][0][0]$y$4790 [1] -> \processor.branch_predictor_FSM.bht[123] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8349 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[124][0][0]$y$4796 [0] -> \processor.branch_predictor_FSM.bht[124] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8350 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[124][0][0]$y$4796 [1] -> \processor.branch_predictor_FSM.bht[124] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8351 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[125][0][0]$y$4802 [0] -> \processor.branch_predictor_FSM.bht[125] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8352 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[125][0][0]$y$4802 [1] -> \processor.branch_predictor_FSM.bht[125] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8353 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[126][0][0]$y$4808 [0] -> \processor.branch_predictor_FSM.bht[126] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8354 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[126][0][0]$y$4808 [1] -> \processor.branch_predictor_FSM.bht[126] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8355 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[151][0][0]$y$4966 [0] -> \processor.branch_predictor_FSM.bht[151] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8356 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[151][0][0]$y$4966 [1] -> \processor.branch_predictor_FSM.bht[151] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8357 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[138][0][0]$y$4886 [0] -> \processor.branch_predictor_FSM.bht[138] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8358 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[138][0][0]$y$4886 [1] -> \processor.branch_predictor_FSM.bht[138] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8359 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[152][0][0]$y$4972 [0] -> \processor.branch_predictor_FSM.bht[152] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8360 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[152][0][0]$y$4972 [1] -> \processor.branch_predictor_FSM.bht[152] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8361 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[153][0][0]$y$4978 [0] -> \processor.branch_predictor_FSM.bht[153] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8362 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[153][0][0]$y$4978 [1] -> \processor.branch_predictor_FSM.bht[153] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8379 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[127][0][0]$y$4814 [0] -> \processor.branch_predictor_FSM.bht[127] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8380 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[127][0][0]$y$4814 [1] -> \processor.branch_predictor_FSM.bht[127] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8498 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[130][0][0]$y$4838 [0] -> \processor.branch_predictor_FSM.bht[130] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8499 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[130][0][0]$y$4838 [1] -> \processor.branch_predictor_FSM.bht[130] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8503 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[63][0][0]$y$4418 [0] -> \processor.branch_predictor_FSM.bht[63] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8504 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[63][0][0]$y$4418 [1] -> \processor.branch_predictor_FSM.bht[63] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8605 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[168][0][0]$y$5070 [0] -> \processor.branch_predictor_FSM.bht[168] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8606 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[168][0][0]$y$5070 [1] -> \processor.branch_predictor_FSM.bht[168] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8607 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[132][0][0]$y$4850 [0] -> \processor.branch_predictor_FSM.bht[132] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8608 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[132][0][0]$y$4850 [1] -> \processor.branch_predictor_FSM.bht[132] [1].

25.35. Executing TECHMAP pass (map to technology primitives).

25.35.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

25.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
No more expansions possible.
<suppressed ~1097 debug messages>

25.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1442 debug messages>

25.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

25.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in top.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12280 (SB_DFFE): \processor.branch_predictor_FSM.bht[70] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6544 (SB_DFFE): \data_mem_inst.state [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8851 (SB_DFF): \processor.id_ex_reg.data_out [165] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8924 (SB_DFF): \processor.mem_wb_reg.data_out [72] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11999 (SB_DFF): \processor.ex_mem_reg.data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12000 (SB_DFF): \processor.ex_mem_reg.data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12001 (SB_DFF): \processor.ex_mem_reg.data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12002 (SB_DFF): \processor.ex_mem_reg.data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12003 (SB_DFF): \processor.ex_mem_reg.data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12004 (SB_DFF): \processor.ex_mem_reg.data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12005 (SB_DFF): \processor.ex_mem_reg.data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12006 (SB_DFF): \processor.ex_mem_reg.data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12007 (SB_DFF): \processor.ex_mem_reg.data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12008 (SB_DFF): \processor.ex_mem_reg.data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12009 (SB_DFF): \processor.ex_mem_reg.data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12010 (SB_DFF): \processor.ex_mem_reg.data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12011 (SB_DFF): \processor.ex_mem_reg.data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12012 (SB_DFF): \processor.ex_mem_reg.data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12013 (SB_DFF): \processor.ex_mem_reg.data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12014 (SB_DFF): \processor.ex_mem_reg.data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12015 (SB_DFF): \processor.ex_mem_reg.data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12016 (SB_DFF): \processor.ex_mem_reg.data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12017 (SB_DFF): \processor.ex_mem_reg.data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12018 (SB_DFF): \processor.ex_mem_reg.data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12019 (SB_DFF): \processor.ex_mem_reg.data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12020 (SB_DFF): \processor.ex_mem_reg.data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12021 (SB_DFF): \processor.ex_mem_reg.data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12022 (SB_DFF): \processor.ex_mem_reg.data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12023 (SB_DFF): \processor.ex_mem_reg.data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12024 (SB_DFF): \processor.ex_mem_reg.data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12025 (SB_DFF): \processor.ex_mem_reg.data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12026 (SB_DFF): \processor.ex_mem_reg.data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12027 (SB_DFF): \processor.ex_mem_reg.data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12028 (SB_DFF): \processor.ex_mem_reg.data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12029 (SB_DFF): \processor.ex_mem_reg.data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12030 (SB_DFF): \processor.ex_mem_reg.data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12031 (SB_DFF): \processor.ex_mem_reg.data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12032 (SB_DFF): \processor.ex_mem_reg.data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12033 (SB_DFF): \processor.ex_mem_reg.data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12034 (SB_DFF): \processor.ex_mem_reg.data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12035 (SB_DFF): \processor.ex_mem_reg.data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12036 (SB_DFF): \processor.ex_mem_reg.data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12037 (SB_DFF): \processor.ex_mem_reg.data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12038 (SB_DFF): \processor.ex_mem_reg.data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12039 (SB_DFF): \processor.ex_mem_reg.data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12040 (SB_DFF): \processor.ex_mem_reg.data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12041 (SB_DFF): \processor.ex_mem_reg.data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12042 (SB_DFF): \processor.ex_mem_reg.data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12043 (SB_DFF): \processor.ex_mem_reg.data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12044 (SB_DFF): \processor.ex_mem_reg.data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12045 (SB_DFF): \processor.ex_mem_reg.data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12046 (SB_DFF): \processor.ex_mem_reg.data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12047 (SB_DFF): \processor.ex_mem_reg.data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12048 (SB_DFF): \processor.ex_mem_reg.data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12049 (SB_DFF): \processor.ex_mem_reg.data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12050 (SB_DFF): \processor.ex_mem_reg.data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12051 (SB_DFF): \processor.ex_mem_reg.data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12052 (SB_DFF): \processor.ex_mem_reg.data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12053 (SB_DFF): \processor.ex_mem_reg.data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12054 (SB_DFF): \processor.ex_mem_reg.data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12055 (SB_DFF): \processor.ex_mem_reg.data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12056 (SB_DFF): \processor.ex_mem_reg.data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12057 (SB_DFF): \processor.ex_mem_reg.data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12058 (SB_DFF): \processor.ex_mem_reg.data_out [64] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12059 (SB_DFF): \processor.ex_mem_reg.data_out [65] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12060 (SB_DFF): \processor.ex_mem_reg.data_out [66] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12061 (SB_DFF): \processor.ex_mem_reg.data_out [67] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12062 (SB_DFF): \processor.ex_mem_reg.data_out [68] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12063 (SB_DFF): \processor.ex_mem_reg.data_out [69] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12064 (SB_DFF): \processor.ex_mem_reg.data_out [70] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8837 (SB_DFF): \processor.id_ex_reg.data_out [151] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8838 (SB_DFF): \processor.id_ex_reg.data_out [152] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8839 (SB_DFF): \processor.id_ex_reg.data_out [153] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8840 (SB_DFF): \processor.id_ex_reg.data_out [154] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8841 (SB_DFF): \processor.id_ex_reg.data_out [155] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7547 (SB_DFFE): \processor.branch_predictor_FSM.bht[150] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7582 (SB_DFF): \processor.if_id_reg.data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7583 (SB_DFF): \processor.if_id_reg.data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7584 (SB_DFF): \processor.if_id_reg.data_out [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7585 (SB_DFF): \processor.if_id_reg.data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7586 (SB_DFF): \processor.if_id_reg.data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7587 (SB_DFF): \processor.if_id_reg.data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7588 (SB_DFF): \processor.if_id_reg.data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7589 (SB_DFF): \processor.if_id_reg.data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7590 (SB_DFF): \processor.if_id_reg.data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7591 (SB_DFF): \processor.if_id_reg.data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7592 (SB_DFF): \processor.if_id_reg.data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7593 (SB_DFF): \processor.if_id_reg.data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7594 (SB_DFF): \processor.if_id_reg.data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7595 (SB_DFF): \processor.if_id_reg.data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7596 (SB_DFF): \processor.if_id_reg.data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7597 (SB_DFF): \processor.if_id_reg.data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7598 (SB_DFF): \processor.if_id_reg.data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7599 (SB_DFF): \processor.if_id_reg.data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7600 (SB_DFF): \processor.if_id_reg.data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7601 (SB_DFF): \processor.if_id_reg.data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7602 (SB_DFF): \processor.if_id_reg.data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7603 (SB_DFF): \processor.if_id_reg.data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7604 (SB_DFF): \processor.if_id_reg.data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7605 (SB_DFF): \processor.if_id_reg.data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7606 (SB_DFF): \processor.if_id_reg.data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7607 (SB_DFF): \processor.if_id_reg.data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7608 (SB_DFF): \processor.if_id_reg.data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7609 (SB_DFF): \processor.if_id_reg.data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7610 (SB_DFF): \processor.if_id_reg.data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7611 (SB_DFF): \processor.if_id_reg.data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12065 (SB_DFF): \processor.ex_mem_reg.data_out [71] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12279 (SB_DFFE): \processor.branch_predictor_FSM.bht[70] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5652 (SB_DFFE): \processor.branch_predictor_FSM.bht[141] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5654 (SB_DFFE): \processor.branch_predictor_FSM.bht[142] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5656 (SB_DFFE): \processor.branch_predictor_FSM.bht[12] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5653 (SB_DFFE): \processor.branch_predictor_FSM.bht[142] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5658 (SB_DFFE): \processor.branch_predictor_FSM.bht[30] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5655 (SB_DFFE): \processor.branch_predictor_FSM.bht[12] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5660 (SB_DFFE): \processor.branch_predictor_FSM.bht[26] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6539 (SB_DFFE): \data_mem_inst.state [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5662 (SB_DFFE): \processor.branch_predictor_FSM.bht[187] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5659 (SB_DFFE): \processor.branch_predictor_FSM.bht[26] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5664 (SB_DFFE): \processor.branch_predictor_FSM.bht[188] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5661 (SB_DFFE): \processor.branch_predictor_FSM.bht[187] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5666 (SB_DFFE): \processor.branch_predictor_FSM.bht[189] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5663 (SB_DFFE): \processor.branch_predictor_FSM.bht[188] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5668 (SB_DFFE): \processor.branch_predictor_FSM.bht[145] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5665 (SB_DFFE): \processor.branch_predictor_FSM.bht[189] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5670 (SB_DFFE): \processor.branch_predictor_FSM.bht[34] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5667 (SB_DFFE): \processor.branch_predictor_FSM.bht[145] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5672 (SB_DFFE): \processor.branch_predictor_FSM.bht[62] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5669 (SB_DFFE): \processor.branch_predictor_FSM.bht[34] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5674 (SB_DFFE): \processor.branch_predictor_FSM.bht[21] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6538 (SB_DFFE): \data_mem_inst.state [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5676 (SB_DFFE): \processor.branch_predictor_FSM.bht[25] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5673 (SB_DFFE): \processor.branch_predictor_FSM.bht[21] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5678 (SB_DFFE): \processor.branch_predictor_FSM.bht[252] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5675 (SB_DFFE): \processor.branch_predictor_FSM.bht[25] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5680 (SB_DFFE): \processor.branch_predictor_FSM.bht[250] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6536 (SB_DFFE): \data_mem_inst.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5780 (SB_DFFE): \processor.branch_predictor_FSM.bht[253] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6210 (SB_DFFE): \processor.branch_predictor_FSM.bht[2] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5788 (SB_DFFE): \processor.branch_predictor_FSM.bht[251] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6132 (SB_DFFE): \processor.branch_predictor_FSM.bht[58] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5796 (SB_DFFE): \processor.branch_predictor_FSM.bht[60] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6399 (SB_DFFE): \processor.branch_predictor_FSM.bht[128] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5798 (SB_DFFE): \processor.branch_predictor_FSM.bht[249] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6383 (SB_DFFE): \processor.branch_predictor_FSM.bht[31] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5800 (SB_DFFE): \processor.branch_predictor_FSM.bht[248] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5797 (SB_DFFE): \processor.branch_predictor_FSM.bht[249] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5994 (SB_DFFE): \processor.branch_predictor_FSM.bht[144] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5799 (SB_DFFE): \processor.branch_predictor_FSM.bht[248] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5996 (SB_DFFE): \processor.branch_predictor_FSM.bht[247] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5993 (SB_DFFE): \processor.branch_predictor_FSM.bht[144] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5998 (SB_DFFE): \processor.branch_predictor_FSM.bht[244] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5995 (SB_DFFE): \processor.branch_predictor_FSM.bht[247] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6000 (SB_DFFE): \processor.branch_predictor_FSM.bht[246] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5997 (SB_DFFE): \processor.branch_predictor_FSM.bht[244] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6002 (SB_DFFE): \processor.branch_predictor_FSM.bht[245] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5999 (SB_DFFE): \processor.branch_predictor_FSM.bht[246] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6014 (SB_DFFE): \processor.branch_predictor_FSM.bht[254] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6001 (SB_DFFE): \processor.branch_predictor_FSM.bht[245] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6026 (SB_DFFE): \processor.branch_predictor_FSM.bht[255] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6391 (SB_DFFE): \processor.branch_predictor_FSM.bht[163] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6389 (SB_DFFE): \processor.branch_predictor_FSM.bht[36] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6050 (SB_DFFE): \processor.branch_predictor_FSM.bht[214] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6387 (SB_DFFE): \processor.branch_predictor_FSM.bht[16] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11994 (SB_DFF): \processor.ex_mem_reg.data_out [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6492 (SB_DFFE): \processor.branch_predictor_FSM.bht[139] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7546 (SB_DFFE): \processor.branch_predictor_FSM.bht[150] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6051 (SB_DFFE): \processor.branch_predictor_FSM.bht[215] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6284 (SB_DFFE): \processor.branch_predictor_FSM.bht[49] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6053 (SB_DFFE): \processor.branch_predictor_FSM.bht[223] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6100 (SB_DFFE): \processor.branch_predictor_FSM.bht[239] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6055 (SB_DFFE): \processor.branch_predictor_FSM.bht[224] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6060 (SB_DFFE): \processor.branch_predictor_FSM.bht[217] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6057 (SB_DFFE): \processor.branch_predictor_FSM.bht[219] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6062 (SB_DFFE): \processor.branch_predictor_FSM.bht[207] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6059 (SB_DFFE): \processor.branch_predictor_FSM.bht[217] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6064 (SB_DFFE): \processor.branch_predictor_FSM.bht[206] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6061 (SB_DFFE): \processor.branch_predictor_FSM.bht[207] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6066 (SB_DFFE): \processor.branch_predictor_FSM.bht[205] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6063 (SB_DFFE): \processor.branch_predictor_FSM.bht[206] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6102 (SB_DFFE): \processor.branch_predictor_FSM.bht[59] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6065 (SB_DFFE): \processor.branch_predictor_FSM.bht[205] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6354 (SB_DFFE): \processor.branch_predictor_FSM.bht[178] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6067 (SB_DFFE): \processor.branch_predictor_FSM.bht[213] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6072 (SB_DFFE): \processor.branch_predictor_FSM.bht[218] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6069 (SB_DFFE): \processor.branch_predictor_FSM.bht[225] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6076 (SB_DFFE): \processor.branch_predictor_FSM.bht[208] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6071 (SB_DFFE): \processor.branch_predictor_FSM.bht[218] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6104 (SB_DFFE): \processor.branch_predictor_FSM.bht[47] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6073 (SB_DFFE): \processor.branch_predictor_FSM.bht[209] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6074 (SB_DFFE): \processor.branch_predictor_FSM.bht[209] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6075 (SB_DFFE): \processor.branch_predictor_FSM.bht[208] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6130 (SB_DFFE): \processor.branch_predictor_FSM.bht[234] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6077 (SB_DFFE): \processor.branch_predictor_FSM.bht[210] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6082 (SB_DFFE): \processor.branch_predictor_FSM.bht[212] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6079 (SB_DFFE): \processor.branch_predictor_FSM.bht[211] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6128 (SB_DFFE): \processor.branch_predictor_FSM.bht[57] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6081 (SB_DFFE): \processor.branch_predictor_FSM.bht[212] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6108 (SB_DFFE): \processor.branch_predictor_FSM.bht[48] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6083 (SB_DFFE): \processor.branch_predictor_FSM.bht[220] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6114 (SB_DFFE): \processor.branch_predictor_FSM.bht[29] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6085 (SB_DFFE): \processor.branch_predictor_FSM.bht[226] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6332 (SB_DFFE): \processor.branch_predictor_FSM.bht[9] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6087 (SB_DFFE): \processor.branch_predictor_FSM.bht[222] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6124 (SB_DFFE): \processor.branch_predictor_FSM.bht[231] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6089 (SB_DFFE): \processor.branch_predictor_FSM.bht[227] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6096 (SB_DFFE): \processor.branch_predictor_FSM.bht[238] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6091 (SB_DFFE): \processor.branch_predictor_FSM.bht[216] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6202 (SB_DFFE): \processor.branch_predictor_FSM.bht[182] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6093 (SB_DFFE): \processor.branch_predictor_FSM.bht[221] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6296 (SB_DFFE): \processor.branch_predictor_FSM.bht[193] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6095 (SB_DFFE): \processor.branch_predictor_FSM.bht[238] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6116 (SB_DFFE): \processor.branch_predictor_FSM.bht[54] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6097 (SB_DFFE): \processor.branch_predictor_FSM.bht[232] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6364 (SB_DFFE): \processor.branch_predictor_FSM.bht[37] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6099 (SB_DFFE): \processor.branch_predictor_FSM.bht[239] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6068 (SB_DFFE): \processor.branch_predictor_FSM.bht[213] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6101 (SB_DFFE): \processor.branch_predictor_FSM.bht[59] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6078 (SB_DFFE): \processor.branch_predictor_FSM.bht[210] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6103 (SB_DFFE): \processor.branch_predictor_FSM.bht[47] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6084 (SB_DFFE): \processor.branch_predictor_FSM.bht[220] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6105 (SB_DFFE): \processor.branch_predictor_FSM.bht[45] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6110 (SB_DFFE): \processor.branch_predictor_FSM.bht[143] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6112 (SB_DFFE): \processor.branch_predictor_FSM.bht[235] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6109 (SB_DFFE): \processor.branch_predictor_FSM.bht[143] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6086 (SB_DFFE): \processor.branch_predictor_FSM.bht[226] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6111 (SB_DFFE): \processor.branch_predictor_FSM.bht[235] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6098 (SB_DFFE): \processor.branch_predictor_FSM.bht[232] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6113 (SB_DFFE): \processor.branch_predictor_FSM.bht[29] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6088 (SB_DFFE): \processor.branch_predictor_FSM.bht[222] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6115 (SB_DFFE): \processor.branch_predictor_FSM.bht[54] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6120 (SB_DFFE): \processor.branch_predictor_FSM.bht[229] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6537 (SB_DFFE): \data_mem_inst.state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6328 (SB_DFFE): \processor.branch_predictor_FSM.bht[20] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6119 (SB_DFFE): \processor.branch_predictor_FSM.bht[229] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6090 (SB_DFFE): \processor.branch_predictor_FSM.bht[227] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6121 (SB_DFFE): \processor.branch_predictor_FSM.bht[230] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6092 (SB_DFFE): \processor.branch_predictor_FSM.bht[216] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6123 (SB_DFFE): \processor.branch_predictor_FSM.bht[231] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6218 (SB_DFFE): \processor.branch_predictor_FSM.bht[200] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6125 (SB_DFFE): \processor.branch_predictor_FSM.bht[236] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6106 (SB_DFFE): \processor.branch_predictor_FSM.bht[45] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6127 (SB_DFFE): \processor.branch_predictor_FSM.bht[57] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6080 (SB_DFFE): \processor.branch_predictor_FSM.bht[211] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6129 (SB_DFFE): \processor.branch_predictor_FSM.bht[234] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6134 (SB_DFFE): \processor.branch_predictor_FSM.bht[241] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6131 (SB_DFFE): \processor.branch_predictor_FSM.bht[58] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6136 (SB_DFFE): \processor.branch_predictor_FSM.bht[242] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6133 (SB_DFFE): \processor.branch_predictor_FSM.bht[241] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6138 (SB_DFFE): \processor.branch_predictor_FSM.bht[243] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6135 (SB_DFFE): \processor.branch_predictor_FSM.bht[242] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6140 (SB_DFFE): \processor.branch_predictor_FSM.bht[240] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6137 (SB_DFFE): \processor.branch_predictor_FSM.bht[243] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6395 (SB_DFFE): \processor.branch_predictor_FSM.bht[68] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6139 (SB_DFFE): \processor.branch_predictor_FSM.bht[240] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6255 (SB_DFFE): \processor.branch_predictor_FSM.bht[50] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6141 (SB_DFFE): \processor.branch_predictor_FSM.bht[237] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6172 (SB_DFFE): \processor.branch_predictor_FSM.bht[173] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6143 (SB_DFFE): \processor.branch_predictor_FSM.bht[204] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6176 (SB_DFFE): \processor.branch_predictor_FSM.bht[0] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6145 (SB_DFFE): \processor.branch_predictor_FSM.bht[228] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6170 (SB_DFFE): \processor.branch_predictor_FSM.bht[1] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6146 (SB_DFFE): \processor.branch_predictor_FSM.bht[228] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6149 (SB_DFFE): \processor.branch_predictor_FSM.bht[56] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6148 (SB_DFFE): \processor.branch_predictor_FSM.bht[55] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6151 (SB_DFFE): \processor.branch_predictor_FSM.bht[169] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6156 (SB_DFFE): \processor.branch_predictor_FSM.bht[171] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6153 (SB_DFFE): \processor.branch_predictor_FSM.bht[3] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6178 (SB_DFFE): \processor.branch_predictor_FSM.bht[167] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6155 (SB_DFFE): \processor.branch_predictor_FSM.bht[171] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6164 (SB_DFFE): \processor.branch_predictor_FSM.bht[7] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6144 (SB_DFFE): \processor.branch_predictor_FSM.bht[204] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6150 (SB_DFFE): \processor.branch_predictor_FSM.bht[56] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6161 (SB_DFFE): \processor.branch_predictor_FSM.bht[203] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6168 (SB_DFFE): \processor.branch_predictor_FSM.bht[166] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6163 (SB_DFFE): \processor.branch_predictor_FSM.bht[7] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6174 (SB_DFFE): \processor.branch_predictor_FSM.bht[170] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6182 (SB_DFFE): \processor.branch_predictor_FSM.bht[14] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6160 (SB_DFFE): \processor.branch_predictor_FSM.bht[172] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6169 (SB_DFFE): \processor.branch_predictor_FSM.bht[1] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6154 (SB_DFFE): \processor.branch_predictor_FSM.bht[3] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6171 (SB_DFFE): \processor.branch_predictor_FSM.bht[173] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6180 (SB_DFFE): \processor.branch_predictor_FSM.bht[202] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6158 (SB_DFFE): \processor.branch_predictor_FSM.bht[165] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6166 (SB_DFFE): \processor.branch_predictor_FSM.bht[4] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6162 (SB_DFFE): \processor.branch_predictor_FSM.bht[203] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6179 (SB_DFFE): \processor.branch_predictor_FSM.bht[202] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6233 (SB_DFFE): \processor.branch_predictor_FSM.bht[180] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6181 (SB_DFFE): \processor.branch_predictor_FSM.bht[14] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6204 (SB_DFFE): \processor.branch_predictor_FSM.bht[17] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6183 (SB_DFFE): \processor.branch_predictor_FSM.bht[174] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6375 (SB_DFFE): \processor.branch_predictor_FSM.bht[185] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6232 (SB_DFFE): \processor.branch_predictor_FSM.bht[194] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6187 (SB_DFFE): \processor.branch_predictor_FSM.bht[196] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6192 (SB_DFFE): \processor.branch_predictor_FSM.bht[10] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6189 (SB_DFFE): \processor.branch_predictor_FSM.bht[197] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6208 (SB_DFFE): \processor.branch_predictor_FSM.bht[177] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6191 (SB_DFFE): \processor.branch_predictor_FSM.bht[10] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6206 (SB_DFFE): \processor.branch_predictor_FSM.bht[181] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6193 (SB_DFFE): \processor.branch_predictor_FSM.bht[175] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6198 (SB_DFFE): \processor.branch_predictor_FSM.bht[176] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6200 (SB_DFFE): \processor.branch_predictor_FSM.bht[18] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6197 (SB_DFFE): \processor.branch_predictor_FSM.bht[176] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6094 (SB_DFFE): \processor.branch_predictor_FSM.bht[221] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6199 (SB_DFFE): \processor.branch_predictor_FSM.bht[18] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6377 (SB_DFFE): \processor.branch_predictor_FSM.bht[186] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6201 (SB_DFFE): \processor.branch_predictor_FSM.bht[182] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6369 (SB_DFFE): \processor.branch_predictor_FSM.bht[23] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6196 (SB_DFFE): \processor.branch_predictor_FSM.bht[6] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6205 (SB_DFFE): \processor.branch_predictor_FSM.bht[181] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6194 (SB_DFFE): \processor.branch_predictor_FSM.bht[175] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6207 (SB_DFFE): \processor.branch_predictor_FSM.bht[177] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6212 (SB_DFFE): \processor.branch_predictor_FSM.bht[198] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6214 (SB_DFFE): \processor.branch_predictor_FSM.bht[8] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6211 (SB_DFFE): \processor.branch_predictor_FSM.bht[198] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6268 (SB_DFFE): \processor.branch_predictor_FSM.bht[53] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6213 (SB_DFFE): \processor.branch_predictor_FSM.bht[8] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6373 (SB_DFFE): \processor.branch_predictor_FSM.bht[184] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6215 (SB_DFFE): \processor.branch_predictor_FSM.bht[199] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6220 (SB_DFFE): \processor.branch_predictor_FSM.bht[201] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6222 (SB_DFFE): \processor.branch_predictor_FSM.bht[19] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6219 (SB_DFFE): \processor.branch_predictor_FSM.bht[201] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6224 (SB_DFFE): \processor.branch_predictor_FSM.bht[13] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6221 (SB_DFFE): \processor.branch_predictor_FSM.bht[19] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6355 (SB_DFFE): \processor.branch_predictor_FSM.bht[178] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6223 (SB_DFFE): \processor.branch_predictor_FSM.bht[13] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6228 (SB_DFFE): \processor.branch_predictor_FSM.bht[179] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6225 (SB_DFFE): \processor.branch_predictor_FSM.bht[22] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6230 (SB_DFFE): \processor.branch_predictor_FSM.bht[15] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6227 (SB_DFFE): \processor.branch_predictor_FSM.bht[179] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6186 (SB_DFFE): \processor.branch_predictor_FSM.bht[195] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6229 (SB_DFFE): \processor.branch_predictor_FSM.bht[15] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6190 (SB_DFFE): \processor.branch_predictor_FSM.bht[197] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6231 (SB_DFFE): \processor.branch_predictor_FSM.bht[194] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6272 (SB_DFFE): \processor.branch_predictor_FSM.bht[52] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6152 (SB_DFFE): \processor.branch_predictor_FSM.bht[169] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6258 (SB_DFFE): \processor.branch_predictor_FSM.bht[33] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6142 (SB_DFFE): \processor.branch_predictor_FSM.bht[237] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6260 (SB_DFFE): \processor.branch_predictor_FSM.bht[32] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6257 (SB_DFFE): \processor.branch_predictor_FSM.bht[33] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6262 (SB_DFFE): \processor.branch_predictor_FSM.bht[28] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6259 (SB_DFFE): \processor.branch_predictor_FSM.bht[32] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6264 (SB_DFFE): \processor.branch_predictor_FSM.bht[43] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6261 (SB_DFFE): \processor.branch_predictor_FSM.bht[28] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6266 (SB_DFFE): \processor.branch_predictor_FSM.bht[46] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6329 (SB_DFFE): \processor.branch_predictor_FSM.bht[20] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6265 (SB_DFFE): \processor.branch_predictor_FSM.bht[46] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6270 (SB_DFFE): \processor.branch_predictor_FSM.bht[51] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6365 (SB_DFFE): \processor.branch_predictor_FSM.bht[37] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6274 (SB_DFFE): \processor.branch_predictor_FSM.bht[39] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6371 (SB_DFFE): \processor.branch_predictor_FSM.bht[183] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6126 (SB_DFFE): \processor.branch_predictor_FSM.bht[236] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6638 (SB_DFFE): \processor.branch_predictor_FSM.bht[71] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6367 (SB_DFFE): \processor.branch_predictor_FSM.bht[35] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6277 (SB_DFFE): \processor.branch_predictor_FSM.bht[24] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6184 (SB_DFFE): \processor.branch_predictor_FSM.bht[174] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6279 (SB_DFFE): \processor.branch_predictor_FSM.bht[42] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6289 (SB_DFFE): \processor.branch_predictor_FSM.bht[190] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6553 (SB_DFFE): \data_mem_inst.state [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6291 (SB_DFFE): \processor.branch_predictor_FSM.bht[11] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6054 (SB_DFFE): \processor.branch_predictor_FSM.bht[223] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6285 (SB_DFFE): \processor.branch_predictor_FSM.bht[49] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6288 (SB_DFFE): \processor.branch_predictor_FSM.bht[190] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6297 (SB_DFFE): \processor.branch_predictor_FSM.bht[193] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6290 (SB_DFFE): \processor.branch_predictor_FSM.bht[11] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6282 (SB_DFFE): \processor.branch_predictor_FSM.bht[41] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6292 (SB_DFFE): \processor.branch_predictor_FSM.bht[191] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6293 (SB_DFFE): \processor.branch_predictor_FSM.bht[191] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6294 (SB_DFFE): \processor.branch_predictor_FSM.bht[192] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5679 (SB_DFFE): \processor.branch_predictor_FSM.bht[250] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6122 (SB_DFFE): \processor.branch_predictor_FSM.bht[230] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6333 (SB_DFFE): \processor.branch_predictor_FSM.bht[9] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6118 (SB_DFFE): \processor.branch_predictor_FSM.bht[233] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6295 (SB_DFFE): \processor.branch_predictor_FSM.bht[192] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6070 (SB_DFFE): \processor.branch_predictor_FSM.bht[225] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6226 (SB_DFFE): \processor.branch_predictor_FSM.bht[22] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6058 (SB_DFFE): \processor.branch_predictor_FSM.bht[219] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6234 (SB_DFFE): \processor.branch_predictor_FSM.bht[180] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6056 (SB_DFFE): \processor.branch_predictor_FSM.bht[224] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6188 (SB_DFFE): \processor.branch_predictor_FSM.bht[196] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6366 (SB_DFFE): \processor.branch_predictor_FSM.bht[35] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6256 (SB_DFFE): \processor.branch_predictor_FSM.bht[50] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6368 (SB_DFFE): \processor.branch_predictor_FSM.bht[23] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6216 (SB_DFFE): \processor.branch_predictor_FSM.bht[199] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6370 (SB_DFFE): \processor.branch_predictor_FSM.bht[183] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6276 (SB_DFFE): \processor.branch_predictor_FSM.bht[44] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6372 (SB_DFFE): \processor.branch_predictor_FSM.bht[184] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6278 (SB_DFFE): \processor.branch_predictor_FSM.bht[24] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6374 (SB_DFFE): \processor.branch_predictor_FSM.bht[185] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6280 (SB_DFFE): \processor.branch_predictor_FSM.bht[42] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6376 (SB_DFFE): \processor.branch_predictor_FSM.bht[186] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6385 (SB_DFFE): \processor.branch_predictor_FSM.bht[40] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6382 (SB_DFFE): \processor.branch_predictor_FSM.bht[31] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5795 (SB_DFFE): \processor.branch_predictor_FSM.bht[60] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6384 (SB_DFFE): \processor.branch_predictor_FSM.bht[40] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6386 (SB_DFFE): \processor.branch_predictor_FSM.bht[16] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6025 (SB_DFFE): \processor.branch_predictor_FSM.bht[255] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6388 (SB_DFFE): \processor.branch_predictor_FSM.bht[36] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6013 (SB_DFFE): \processor.branch_predictor_FSM.bht[254] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6563 (SB_DFFE): \data_mem_inst.state [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5779 (SB_DFFE): \processor.branch_predictor_FSM.bht[253] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6394 (SB_DFFE): \processor.branch_predictor_FSM.bht[68] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5787 (SB_DFFE): \processor.branch_predictor_FSM.bht[251] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6049 (SB_DFFE): \processor.branch_predictor_FSM.bht[214] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6491 (SB_DFFE): \processor.branch_predictor_FSM.bht[139] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6209 (SB_DFFE): \processor.branch_predictor_FSM.bht[2] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6203 (SB_DFFE): \processor.branch_predictor_FSM.bht[17] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6672 (SB_DFFE): \processor.branch_predictor_FSM.bht[137] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6185 (SB_DFFE): \processor.branch_predictor_FSM.bht[195] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6173 (SB_DFFE): \processor.branch_predictor_FSM.bht[170] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6157 (SB_DFFE): \processor.branch_predictor_FSM.bht[165] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6175 (SB_DFFE): \processor.branch_predictor_FSM.bht[0] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6165 (SB_DFFE): \processor.branch_predictor_FSM.bht[4] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6167 (SB_DFFE): \processor.branch_predictor_FSM.bht[166] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6217 (SB_DFFE): \processor.branch_predictor_FSM.bht[200] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6177 (SB_DFFE): \processor.branch_predictor_FSM.bht[167] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6159 (SB_DFFE): \processor.branch_predictor_FSM.bht[172] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6535 (SB_DFFE): \data_mem_inst.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6052 (SB_DFFE): \processor.branch_predictor_FSM.bht[215] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8210 (SB_DFFE): \processor.branch_predictor_FSM.bht[162] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8244 (SB_DFFE): \processor.branch_predictor_FSM.bht[160] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8278 (SB_DFFE): \processor.branch_predictor_FSM.bht[158] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8337 (SB_DFFE): \processor.branch_predictor_FSM.bht[149] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8335 (SB_DFFE): \processor.branch_predictor_FSM.bht[156] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8345 (SB_DFFE): \processor.branch_predictor_FSM.bht[122] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6554 (SB_DFFE): \data_mem_inst.state [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8357 (SB_DFFE): \processor.branch_predictor_FSM.bht[138] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6540 (SB_DFFE): \data_mem_inst.state [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6543 (SB_DFFE): \data_mem_inst.state [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6549 (SB_DFFE): \data_mem_inst.state [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8254 (SB_DFFE): \processor.branch_predictor_FSM.bht[90] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6532 (SB_DFFE): \data_mem_inst.clk_stall = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8220 (SB_DFFE): \processor.branch_predictor_FSM.bht[78] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6398 (SB_DFFE): \processor.branch_predictor_FSM.bht[128] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5677 (SB_DFFE): \processor.branch_predictor_FSM.bht[252] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6117 (SB_DFFE): \processor.branch_predictor_FSM.bht[233] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5671 (SB_DFFE): \processor.branch_predictor_FSM.bht[62] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5657 (SB_DFFE): \processor.branch_predictor_FSM.bht[30] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6542 (SB_DFFE): \data_mem_inst.state [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8503 (SB_DFFE): \processor.branch_predictor_FSM.bht[63] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8686 (SB_DFF): \processor.id_ex_reg.data_out [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8190 (SB_DFFE): \processor.branch_predictor_FSM.bht[64] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8228 (SB_DFFE): \processor.branch_predictor_FSM.bht[82] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8262 (SB_DFFE): \processor.branch_predictor_FSM.bht[94] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8323 (SB_DFFE): \processor.branch_predictor_FSM.bht[118] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8286 (SB_DFFE): \processor.branch_predictor_FSM.bht[102] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6552 (SB_DFFE): \data_mem_inst.state [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6545 (SB_DFFE): \data_mem_inst.state [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7645 (SB_DFFE): \processor.branch_predictor_FSM.bht[67] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6281 (SB_DFFE): \processor.branch_predictor_FSM.bht[41] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8361 (SB_DFFE): \processor.branch_predictor_FSM.bht[153] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8353 (SB_DFFE): \processor.branch_predictor_FSM.bht[126] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6564 (SB_DFFE): \data_mem_inst.state [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8331 (SB_DFFE): \processor.branch_predictor_FSM.bht[120] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8327 (SB_DFFE): \processor.branch_predictor_FSM.bht[119] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6390 (SB_DFFE): \processor.branch_predictor_FSM.bht[163] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8333 (SB_DFFE): \processor.branch_predictor_FSM.bht[121] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6533 (SB_DFFE): \data_mem_inst.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8319 (SB_DFFE): \processor.branch_predictor_FSM.bht[112] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6565 (SB_DFFE): \processor.branch_predictor_FSM.bht[164] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8315 (SB_DFFE): \processor.branch_predictor_FSM.bht[115] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6559 (SB_DFFE): \data_mem_inst.state [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8311 (SB_DFFE): \processor.branch_predictor_FSM.bht[114] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8307 (SB_DFFE): \processor.branch_predictor_FSM.bht[111] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8301 (SB_DFFE): \processor.branch_predictor_FSM.bht[133] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8299 (SB_DFFE): \processor.branch_predictor_FSM.bht[107] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8347 (SB_DFFE): \processor.branch_predictor_FSM.bht[123] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8292 (SB_DFFE): \processor.branch_predictor_FSM.bht[5] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8288 (SB_DFFE): \processor.branch_predictor_FSM.bht[103] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6558 (SB_DFFE): \data_mem_inst.state [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8284 (SB_DFFE): \processor.branch_predictor_FSM.bht[100] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8349 (SB_DFFE): \processor.branch_predictor_FSM.bht[124] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8295 (SB_DFFE): \processor.branch_predictor_FSM.bht[106] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8270 (SB_DFFE): \processor.branch_predictor_FSM.bht[96] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8266 (SB_DFFE): \processor.branch_predictor_FSM.bht[95] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6557 (SB_DFFE): \data_mem_inst.state [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8260 (SB_DFFE): \processor.branch_predictor_FSM.bht[92] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8256 (SB_DFFE): \processor.branch_predictor_FSM.bht[91] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8280 (SB_DFFE): \processor.branch_predictor_FSM.bht[99] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8250 (SB_DFFE): \processor.branch_predictor_FSM.bht[88] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8351 (SB_DFFE): \processor.branch_predictor_FSM.bht[125] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8236 (SB_DFFE): \processor.branch_predictor_FSM.bht[84] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8232 (SB_DFFE): \processor.branch_predictor_FSM.bht[83] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6556 (SB_DFFE): \data_mem_inst.state [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8226 (SB_DFFE): \processor.branch_predictor_FSM.bht[80] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8222 (SB_DFFE): \processor.branch_predictor_FSM.bht[79] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8246 (SB_DFFE): \processor.branch_predictor_FSM.bht[87] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8214 (SB_DFFE): \processor.branch_predictor_FSM.bht[73] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6267 (SB_DFFE): \processor.branch_predictor_FSM.bht[53] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6271 (SB_DFFE): \processor.branch_predictor_FSM.bht[52] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6147 (SB_DFFE): \processor.branch_predictor_FSM.bht[55] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6275 (SB_DFFE): \processor.branch_predictor_FSM.bht[44] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6637 (SB_DFFE): \processor.branch_predictor_FSM.bht[71] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6107 (SB_DFFE): \processor.branch_predictor_FSM.bht[48] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6263 (SB_DFFE): \processor.branch_predictor_FSM.bht[43] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6551 (SB_DFFE): \data_mem_inst.state [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6269 (SB_DFFE): \processor.branch_predictor_FSM.bht[51] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6273 (SB_DFFE): \processor.branch_predictor_FSM.bht[39] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6195 (SB_DFFE): \processor.branch_predictor_FSM.bht[6] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6671 (SB_DFFE): \processor.branch_predictor_FSM.bht[137] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5651 (SB_DFFE): \processor.branch_predictor_FSM.bht[141] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7140 (SB_DFFE): \processor.branch_predictor_FSM.bht[136] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7141 (SB_DFFE): \processor.branch_predictor_FSM.bht[136] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12237 (SB_DFFE): \processor.PC.outAddr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12238 (SB_DFFE): \processor.PC.outAddr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12239 (SB_DFFE): \processor.PC.outAddr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12240 (SB_DFFE): \processor.PC.outAddr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12241 (SB_DFFE): \processor.PC.outAddr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12242 (SB_DFFE): \processor.PC.outAddr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12243 (SB_DFFE): \processor.PC.outAddr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12244 (SB_DFFE): \processor.PC.outAddr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12245 (SB_DFFE): \processor.PC.outAddr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12246 (SB_DFFE): \processor.PC.outAddr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12247 (SB_DFFE): \processor.PC.outAddr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12248 (SB_DFFE): \processor.PC.outAddr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12249 (SB_DFFE): \processor.PC.outAddr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12250 (SB_DFFE): \processor.PC.outAddr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12251 (SB_DFFE): \processor.PC.outAddr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12252 (SB_DFFE): \processor.PC.outAddr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12253 (SB_DFFE): \processor.PC.outAddr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12254 (SB_DFFE): \processor.PC.outAddr [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12255 (SB_DFFE): \processor.PC.outAddr [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12256 (SB_DFFE): \processor.PC.outAddr [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12257 (SB_DFFE): \processor.PC.outAddr [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12258 (SB_DFFE): \processor.PC.outAddr [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12259 (SB_DFFE): \processor.PC.outAddr [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12260 (SB_DFFE): \processor.PC.outAddr [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12261 (SB_DFFE): \processor.PC.outAddr [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12262 (SB_DFFE): \processor.PC.outAddr [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12263 (SB_DFFE): \processor.PC.outAddr [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12264 (SB_DFFE): \processor.PC.outAddr [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12265 (SB_DFFE): \processor.PC.outAddr [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12266 (SB_DFFE): \processor.PC.outAddr [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12267 (SB_DFFE): \processor.PC.outAddr [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12268 (SB_DFFE): \processor.PC.outAddr [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7612 (SB_DFF): \processor.if_id_reg.data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7613 (SB_DFF): \processor.if_id_reg.data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7614 (SB_DFF): \processor.if_id_reg.data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7615 (SB_DFF): \processor.if_id_reg.data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7616 (SB_DFF): \processor.if_id_reg.data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7617 (SB_DFF): \processor.if_id_reg.data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7618 (SB_DFF): \processor.if_id_reg.data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7619 (SB_DFF): \processor.if_id_reg.data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7621 (SB_DFF): \processor.if_id_reg.data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7622 (SB_DFF): \processor.if_id_reg.data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7623 (SB_DFF): \processor.if_id_reg.data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7624 (SB_DFF): \processor.if_id_reg.data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7625 (SB_DFF): \processor.if_id_reg.data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7626 (SB_DFF): \processor.if_id_reg.data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7627 (SB_DFF): \processor.if_id_reg.data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7628 (SB_DFF): \processor.if_id_reg.data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7629 (SB_DFF): \processor.if_id_reg.data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7630 (SB_DFF): \processor.if_id_reg.data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7631 (SB_DFF): \processor.if_id_reg.data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7632 (SB_DFF): \processor.if_id_reg.data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7633 (SB_DFF): \processor.if_id_reg.data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7634 (SB_DFF): \processor.if_id_reg.data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7635 (SB_DFF): \processor.if_id_reg.data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7636 (SB_DFF): \processor.if_id_reg.data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7637 (SB_DFF): \processor.if_id_reg.data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7638 (SB_DFF): \processor.if_id_reg.data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7639 (SB_DFF): \processor.if_id_reg.data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7640 (SB_DFF): \processor.if_id_reg.data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7641 (SB_DFF): \processor.if_id_reg.data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7642 (SB_DFF): \processor.if_id_reg.data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7643 (SB_DFF): \processor.if_id_reg.data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7581 (SB_DFF): \processor.if_id_reg.data_out [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7644 (SB_DFF): \processor.if_id_reg.data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6550 (SB_DFFE): \data_mem_inst.state [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7646 (SB_DFFE): \processor.branch_predictor_FSM.bht[67] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8186 (SB_DFFE): \processor.branch_predictor_FSM.bht[129] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8187 (SB_DFFE): \processor.branch_predictor_FSM.bht[129] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8188 (SB_DFFE): \processor.branch_predictor_FSM.bht[66] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8189 (SB_DFFE): \processor.branch_predictor_FSM.bht[66] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8191 (SB_DFFE): \processor.branch_predictor_FSM.bht[64] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8193 (SB_DFFE): \processor.branch_predictor_FSM.bht[61] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8197 (SB_DFFE): \processor.branch_predictor_FSM.bht[65] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8211 (SB_DFFE): \processor.branch_predictor_FSM.bht[162] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8198 (SB_DFFE): \processor.branch_predictor_FSM.bht[65] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8200 (SB_DFFE): \processor.branch_predictor_FSM.bht[72] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8201 (SB_DFFE): \processor.branch_predictor_FSM.bht[72] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8202 (SB_DFFE): \processor.branch_predictor_FSM.bht[69] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8203 (SB_DFFE): \processor.branch_predictor_FSM.bht[69] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8204 (SB_DFFE): \processor.branch_predictor_FSM.bht[135] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8205 (SB_DFFE): \processor.branch_predictor_FSM.bht[135] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8206 (SB_DFFE): \processor.branch_predictor_FSM.bht[146] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8207 (SB_DFFE): \processor.branch_predictor_FSM.bht[146] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8208 (SB_DFFE): \processor.branch_predictor_FSM.bht[74] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8192 (SB_DFFE): \processor.branch_predictor_FSM.bht[61] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8209 (SB_DFFE): \processor.branch_predictor_FSM.bht[74] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8212 (SB_DFFE): \processor.branch_predictor_FSM.bht[75] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8213 (SB_DFFE): \processor.branch_predictor_FSM.bht[75] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8215 (SB_DFFE): \processor.branch_predictor_FSM.bht[73] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8216 (SB_DFFE): \processor.branch_predictor_FSM.bht[76] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8217 (SB_DFFE): \processor.branch_predictor_FSM.bht[76] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8218 (SB_DFFE): \processor.branch_predictor_FSM.bht[38] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8219 (SB_DFFE): \processor.branch_predictor_FSM.bht[38] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6534 (SB_DFFE): \data_mem_inst.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8221 (SB_DFFE): \processor.branch_predictor_FSM.bht[78] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8223 (SB_DFFE): \processor.branch_predictor_FSM.bht[79] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8224 (SB_DFFE): \processor.branch_predictor_FSM.bht[77] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8225 (SB_DFFE): \processor.branch_predictor_FSM.bht[77] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8227 (SB_DFFE): \processor.branch_predictor_FSM.bht[80] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6546 (SB_DFFE): \data_mem_inst.state [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8229 (SB_DFFE): \processor.branch_predictor_FSM.bht[82] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8230 (SB_DFFE): \processor.branch_predictor_FSM.bht[161] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8231 (SB_DFFE): \processor.branch_predictor_FSM.bht[161] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8233 (SB_DFFE): \processor.branch_predictor_FSM.bht[83] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8234 (SB_DFFE): \processor.branch_predictor_FSM.bht[81] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8235 (SB_DFFE): \processor.branch_predictor_FSM.bht[81] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8237 (SB_DFFE): \processor.branch_predictor_FSM.bht[84] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8238 (SB_DFFE): \processor.branch_predictor_FSM.bht[134] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8239 (SB_DFFE): \processor.branch_predictor_FSM.bht[134] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8240 (SB_DFFE): \processor.branch_predictor_FSM.bht[147] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8241 (SB_DFFE): \processor.branch_predictor_FSM.bht[147] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8242 (SB_DFFE): \processor.branch_predictor_FSM.bht[86] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8243 (SB_DFFE): \processor.branch_predictor_FSM.bht[86] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8245 (SB_DFFE): \processor.branch_predictor_FSM.bht[160] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8247 (SB_DFFE): \processor.branch_predictor_FSM.bht[87] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8248 (SB_DFFE): \processor.branch_predictor_FSM.bht[85] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8249 (SB_DFFE): \processor.branch_predictor_FSM.bht[85] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8251 (SB_DFFE): \processor.branch_predictor_FSM.bht[88] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8252 (SB_DFFE): \processor.branch_predictor_FSM.bht[27] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8253 (SB_DFFE): \processor.branch_predictor_FSM.bht[27] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8255 (SB_DFFE): \processor.branch_predictor_FSM.bht[90] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8257 (SB_DFFE): \processor.branch_predictor_FSM.bht[91] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8258 (SB_DFFE): \processor.branch_predictor_FSM.bht[89] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8259 (SB_DFFE): \processor.branch_predictor_FSM.bht[89] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8261 (SB_DFFE): \processor.branch_predictor_FSM.bht[92] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6547 (SB_DFFE): \data_mem_inst.state [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8263 (SB_DFFE): \processor.branch_predictor_FSM.bht[94] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8264 (SB_DFFE): \processor.branch_predictor_FSM.bht[159] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8265 (SB_DFFE): \processor.branch_predictor_FSM.bht[159] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8267 (SB_DFFE): \processor.branch_predictor_FSM.bht[95] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8268 (SB_DFFE): \processor.branch_predictor_FSM.bht[93] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8269 (SB_DFFE): \processor.branch_predictor_FSM.bht[93] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8271 (SB_DFFE): \processor.branch_predictor_FSM.bht[96] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8272 (SB_DFFE): \processor.branch_predictor_FSM.bht[131] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8273 (SB_DFFE): \processor.branch_predictor_FSM.bht[131] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8274 (SB_DFFE): \processor.branch_predictor_FSM.bht[148] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8275 (SB_DFFE): \processor.branch_predictor_FSM.bht[148] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8276 (SB_DFFE): \processor.branch_predictor_FSM.bht[98] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8277 (SB_DFFE): \processor.branch_predictor_FSM.bht[98] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8279 (SB_DFFE): \processor.branch_predictor_FSM.bht[158] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8281 (SB_DFFE): \processor.branch_predictor_FSM.bht[99] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8282 (SB_DFFE): \processor.branch_predictor_FSM.bht[97] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8283 (SB_DFFE): \processor.branch_predictor_FSM.bht[97] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8285 (SB_DFFE): \processor.branch_predictor_FSM.bht[100] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8287 (SB_DFFE): \processor.branch_predictor_FSM.bht[102] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8289 (SB_DFFE): \processor.branch_predictor_FSM.bht[103] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8290 (SB_DFFE): \processor.branch_predictor_FSM.bht[101] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8291 (SB_DFFE): \processor.branch_predictor_FSM.bht[101] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8293 (SB_DFFE): \processor.branch_predictor_FSM.bht[5] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8296 (SB_DFFE): \processor.branch_predictor_FSM.bht[106] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8297 (SB_DFFE): \processor.branch_predictor_FSM.bht[105] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8298 (SB_DFFE): \processor.branch_predictor_FSM.bht[105] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8300 (SB_DFFE): \processor.branch_predictor_FSM.bht[107] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8302 (SB_DFFE): \processor.branch_predictor_FSM.bht[133] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8303 (SB_DFFE): \processor.branch_predictor_FSM.bht[110] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8304 (SB_DFFE): \processor.branch_predictor_FSM.bht[110] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8305 (SB_DFFE): \processor.branch_predictor_FSM.bht[109] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8306 (SB_DFFE): \processor.branch_predictor_FSM.bht[109] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8308 (SB_DFFE): \processor.branch_predictor_FSM.bht[111] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8309 (SB_DFFE): \processor.branch_predictor_FSM.bht[104] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8310 (SB_DFFE): \processor.branch_predictor_FSM.bht[104] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8312 (SB_DFFE): \processor.branch_predictor_FSM.bht[114] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8313 (SB_DFFE): \processor.branch_predictor_FSM.bht[113] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8314 (SB_DFFE): \processor.branch_predictor_FSM.bht[113] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8316 (SB_DFFE): \processor.branch_predictor_FSM.bht[115] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8317 (SB_DFFE): \processor.branch_predictor_FSM.bht[108] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8318 (SB_DFFE): \processor.branch_predictor_FSM.bht[108] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6566 (SB_DFFE): \processor.branch_predictor_FSM.bht[164] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8320 (SB_DFFE): \processor.branch_predictor_FSM.bht[112] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8321 (SB_DFFE): \processor.branch_predictor_FSM.bht[116] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8322 (SB_DFFE): \processor.branch_predictor_FSM.bht[116] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6548 (SB_DFFE): \data_mem_inst.state [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8324 (SB_DFFE): \processor.branch_predictor_FSM.bht[118] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8325 (SB_DFFE): \processor.branch_predictor_FSM.bht[157] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8326 (SB_DFFE): \processor.branch_predictor_FSM.bht[157] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6562 (SB_DFFE): \data_mem_inst.state [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8328 (SB_DFFE): \processor.branch_predictor_FSM.bht[119] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8329 (SB_DFFE): \processor.branch_predictor_FSM.bht[117] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8330 (SB_DFFE): \processor.branch_predictor_FSM.bht[117] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6561 (SB_DFFE): \data_mem_inst.state [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8332 (SB_DFFE): \processor.branch_predictor_FSM.bht[120] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6560 (SB_DFFE): \data_mem_inst.state [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8334 (SB_DFFE): \processor.branch_predictor_FSM.bht[121] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8336 (SB_DFFE): \processor.branch_predictor_FSM.bht[156] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8338 (SB_DFFE): \processor.branch_predictor_FSM.bht[149] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8339 (SB_DFFE): \processor.branch_predictor_FSM.bht[140] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8340 (SB_DFFE): \processor.branch_predictor_FSM.bht[140] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8341 (SB_DFFE): \processor.branch_predictor_FSM.bht[154] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8342 (SB_DFFE): \processor.branch_predictor_FSM.bht[154] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8343 (SB_DFFE): \processor.branch_predictor_FSM.bht[155] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8344 (SB_DFFE): \processor.branch_predictor_FSM.bht[155] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8346 (SB_DFFE): \processor.branch_predictor_FSM.bht[122] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8348 (SB_DFFE): \processor.branch_predictor_FSM.bht[123] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8350 (SB_DFFE): \processor.branch_predictor_FSM.bht[124] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8352 (SB_DFFE): \processor.branch_predictor_FSM.bht[125] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6555 (SB_DFFE): \data_mem_inst.state [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8354 (SB_DFFE): \processor.branch_predictor_FSM.bht[126] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8355 (SB_DFFE): \processor.branch_predictor_FSM.bht[151] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8356 (SB_DFFE): \processor.branch_predictor_FSM.bht[151] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8358 (SB_DFFE): \processor.branch_predictor_FSM.bht[138] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8359 (SB_DFFE): \processor.branch_predictor_FSM.bht[152] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8360 (SB_DFFE): \processor.branch_predictor_FSM.bht[152] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11998 (SB_DFF): \processor.ex_mem_reg.data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8376 (SB_DFFN): \processor.branch_predictor_FSM.branch_mem_sig_reg = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8362 (SB_DFFE): \processor.branch_predictor_FSM.bht[153] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8379 (SB_DFFE): \processor.branch_predictor_FSM.bht[127] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8380 (SB_DFFE): \processor.branch_predictor_FSM.bht[127] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8498 (SB_DFFE): \processor.branch_predictor_FSM.bht[130] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8499 (SB_DFFE): \processor.branch_predictor_FSM.bht[130] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6541 (SB_DFFE): \data_mem_inst.state [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8504 (SB_DFFE): \processor.branch_predictor_FSM.bht[63] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12098 (SB_DFF): \processor.ex_mem_reg.data_out [104] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12099 (SB_DFF): \processor.ex_mem_reg.data_out [105] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12100 (SB_DFF): \processor.ex_mem_reg.data_out [106] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12101 (SB_DFF): \processor.ex_mem_reg.data_out [107] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12102 (SB_DFF): \processor.ex_mem_reg.data_out [108] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11996 (SB_DFF): \processor.ex_mem_reg.data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8605 (SB_DFFE): \processor.branch_predictor_FSM.bht[168] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8606 (SB_DFFE): \processor.branch_predictor_FSM.bht[168] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8607 (SB_DFFE): \processor.branch_predictor_FSM.bht[132] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8608 (SB_DFFE): \processor.branch_predictor_FSM.bht[132] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8687 (SB_DFF): \processor.id_ex_reg.data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8688 (SB_DFF): \processor.id_ex_reg.data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8690 (SB_DFF): \processor.id_ex_reg.data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8691 (SB_DFF): \processor.id_ex_reg.data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8692 (SB_DFF): \processor.id_ex_reg.data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8693 (SB_DFF): \processor.id_ex_reg.data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8694 (SB_DFF): \processor.id_ex_reg.data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8695 (SB_DFF): \processor.id_ex_reg.data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8696 (SB_DFF): \processor.id_ex_reg.data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8697 (SB_DFF): \processor.id_ex_reg.data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8698 (SB_DFF): \processor.id_ex_reg.data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8699 (SB_DFF): \processor.id_ex_reg.data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8700 (SB_DFF): \processor.id_ex_reg.data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8701 (SB_DFF): \processor.id_ex_reg.data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8702 (SB_DFF): \processor.id_ex_reg.data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8703 (SB_DFF): \processor.id_ex_reg.data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8704 (SB_DFF): \processor.id_ex_reg.data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8705 (SB_DFF): \processor.id_ex_reg.data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8706 (SB_DFF): \processor.id_ex_reg.data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8707 (SB_DFF): \processor.id_ex_reg.data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8708 (SB_DFF): \processor.id_ex_reg.data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8709 (SB_DFF): \processor.id_ex_reg.data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8710 (SB_DFF): \processor.id_ex_reg.data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8711 (SB_DFF): \processor.id_ex_reg.data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8712 (SB_DFF): \processor.id_ex_reg.data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8713 (SB_DFF): \processor.id_ex_reg.data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8714 (SB_DFF): \processor.id_ex_reg.data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8715 (SB_DFF): \processor.id_ex_reg.data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8716 (SB_DFF): \processor.id_ex_reg.data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8717 (SB_DFF): \processor.id_ex_reg.data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8718 (SB_DFF): \processor.id_ex_reg.data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8719 (SB_DFF): \processor.id_ex_reg.data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8720 (SB_DFF): \processor.id_ex_reg.data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8721 (SB_DFF): \processor.id_ex_reg.data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8722 (SB_DFF): \processor.id_ex_reg.data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8723 (SB_DFF): \processor.id_ex_reg.data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8724 (SB_DFF): \processor.id_ex_reg.data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8725 (SB_DFF): \processor.id_ex_reg.data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8726 (SB_DFF): \processor.id_ex_reg.data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8727 (SB_DFF): \processor.id_ex_reg.data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8728 (SB_DFF): \processor.id_ex_reg.data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8729 (SB_DFF): \processor.id_ex_reg.data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8730 (SB_DFF): \processor.id_ex_reg.data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8731 (SB_DFF): \processor.id_ex_reg.data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8732 (SB_DFF): \processor.id_ex_reg.data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8733 (SB_DFF): \processor.id_ex_reg.data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8734 (SB_DFF): \processor.id_ex_reg.data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8735 (SB_DFF): \processor.id_ex_reg.data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8736 (SB_DFF): \processor.id_ex_reg.data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8737 (SB_DFF): \processor.id_ex_reg.data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8738 (SB_DFF): \processor.id_ex_reg.data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8739 (SB_DFF): \processor.id_ex_reg.data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8740 (SB_DFF): \processor.id_ex_reg.data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8741 (SB_DFF): \processor.id_ex_reg.data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8742 (SB_DFF): \processor.id_ex_reg.data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8743 (SB_DFF): \processor.id_ex_reg.data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8744 (SB_DFF): \processor.id_ex_reg.data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8745 (SB_DFF): \processor.id_ex_reg.data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8746 (SB_DFF): \processor.id_ex_reg.data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8747 (SB_DFF): \processor.id_ex_reg.data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8748 (SB_DFF): \processor.id_ex_reg.data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8749 (SB_DFF): \processor.id_ex_reg.data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8750 (SB_DFF): \processor.id_ex_reg.data_out [64] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8751 (SB_DFF): \processor.id_ex_reg.data_out [65] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8752 (SB_DFF): \processor.id_ex_reg.data_out [66] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8753 (SB_DFF): \processor.id_ex_reg.data_out [67] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8754 (SB_DFF): \processor.id_ex_reg.data_out [68] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8755 (SB_DFF): \processor.id_ex_reg.data_out [69] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8756 (SB_DFF): \processor.id_ex_reg.data_out [70] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8757 (SB_DFF): \processor.id_ex_reg.data_out [71] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8758 (SB_DFF): \processor.id_ex_reg.data_out [72] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8759 (SB_DFF): \processor.id_ex_reg.data_out [73] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8760 (SB_DFF): \processor.id_ex_reg.data_out [74] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8761 (SB_DFF): \processor.id_ex_reg.data_out [75] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8762 (SB_DFF): \processor.id_ex_reg.data_out [76] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8763 (SB_DFF): \processor.id_ex_reg.data_out [77] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8764 (SB_DFF): \processor.id_ex_reg.data_out [78] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8765 (SB_DFF): \processor.id_ex_reg.data_out [79] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8766 (SB_DFF): \processor.id_ex_reg.data_out [80] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8767 (SB_DFF): \processor.id_ex_reg.data_out [81] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8768 (SB_DFF): \processor.id_ex_reg.data_out [82] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8769 (SB_DFF): \processor.id_ex_reg.data_out [83] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8770 (SB_DFF): \processor.id_ex_reg.data_out [84] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8771 (SB_DFF): \processor.id_ex_reg.data_out [85] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8772 (SB_DFF): \processor.id_ex_reg.data_out [86] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8773 (SB_DFF): \processor.id_ex_reg.data_out [87] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8774 (SB_DFF): \processor.id_ex_reg.data_out [88] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8775 (SB_DFF): \processor.id_ex_reg.data_out [89] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8776 (SB_DFF): \processor.id_ex_reg.data_out [90] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8777 (SB_DFF): \processor.id_ex_reg.data_out [91] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8778 (SB_DFF): \processor.id_ex_reg.data_out [92] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8779 (SB_DFF): \processor.id_ex_reg.data_out [93] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8780 (SB_DFF): \processor.id_ex_reg.data_out [94] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8781 (SB_DFF): \processor.id_ex_reg.data_out [95] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8782 (SB_DFF): \processor.id_ex_reg.data_out [96] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8783 (SB_DFF): \processor.id_ex_reg.data_out [97] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8784 (SB_DFF): \processor.id_ex_reg.data_out [98] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8785 (SB_DFF): \processor.id_ex_reg.data_out [99] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8786 (SB_DFF): \processor.id_ex_reg.data_out [100] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8787 (SB_DFF): \processor.id_ex_reg.data_out [101] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8788 (SB_DFF): \processor.id_ex_reg.data_out [102] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8789 (SB_DFF): \processor.id_ex_reg.data_out [103] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8790 (SB_DFF): \processor.id_ex_reg.data_out [104] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8791 (SB_DFF): \processor.id_ex_reg.data_out [105] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8792 (SB_DFF): \processor.id_ex_reg.data_out [106] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8793 (SB_DFF): \processor.id_ex_reg.data_out [107] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8794 (SB_DFF): \processor.id_ex_reg.data_out [108] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8795 (SB_DFF): \processor.id_ex_reg.data_out [109] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8796 (SB_DFF): \processor.id_ex_reg.data_out [110] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8797 (SB_DFF): \processor.id_ex_reg.data_out [111] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8798 (SB_DFF): \processor.id_ex_reg.data_out [112] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8799 (SB_DFF): \processor.id_ex_reg.data_out [113] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8800 (SB_DFF): \processor.id_ex_reg.data_out [114] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8801 (SB_DFF): \processor.id_ex_reg.data_out [115] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8802 (SB_DFF): \processor.id_ex_reg.data_out [116] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8803 (SB_DFF): \processor.id_ex_reg.data_out [117] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8804 (SB_DFF): \processor.id_ex_reg.data_out [118] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8805 (SB_DFF): \processor.id_ex_reg.data_out [119] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8806 (SB_DFF): \processor.id_ex_reg.data_out [120] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8807 (SB_DFF): \processor.id_ex_reg.data_out [121] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8808 (SB_DFF): \processor.id_ex_reg.data_out [122] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8809 (SB_DFF): \processor.id_ex_reg.data_out [123] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8810 (SB_DFF): \processor.id_ex_reg.data_out [124] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8811 (SB_DFF): \processor.id_ex_reg.data_out [125] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8812 (SB_DFF): \processor.id_ex_reg.data_out [126] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8813 (SB_DFF): \processor.id_ex_reg.data_out [127] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8814 (SB_DFF): \processor.id_ex_reg.data_out [128] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8815 (SB_DFF): \processor.id_ex_reg.data_out [129] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8816 (SB_DFF): \processor.id_ex_reg.data_out [130] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8817 (SB_DFF): \processor.id_ex_reg.data_out [131] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8818 (SB_DFF): \processor.id_ex_reg.data_out [132] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8819 (SB_DFF): \processor.id_ex_reg.data_out [133] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8820 (SB_DFF): \processor.id_ex_reg.data_out [134] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8821 (SB_DFF): \processor.id_ex_reg.data_out [135] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8822 (SB_DFF): \processor.id_ex_reg.data_out [136] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8823 (SB_DFF): \processor.id_ex_reg.data_out [137] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8824 (SB_DFF): \processor.id_ex_reg.data_out [138] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8825 (SB_DFF): \processor.id_ex_reg.data_out [139] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8826 (SB_DFF): \processor.id_ex_reg.data_out [140] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8827 (SB_DFF): \processor.id_ex_reg.data_out [141] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8828 (SB_DFF): \processor.id_ex_reg.data_out [142] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8829 (SB_DFF): \processor.id_ex_reg.data_out [143] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8830 (SB_DFF): \processor.id_ex_reg.data_out [144] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8831 (SB_DFF): \processor.id_ex_reg.data_out [145] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8832 (SB_DFF): \processor.id_ex_reg.data_out [146] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8834 (SB_DFF): \processor.id_ex_reg.data_out [148] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8835 (SB_DFF): \processor.id_ex_reg.data_out [149] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7620 (SB_DFF): \processor.if_id_reg.data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8836 (SB_DFF): \processor.id_ex_reg.data_out [150] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8842 (SB_DFF): \processor.id_ex_reg.data_out [156] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8843 (SB_DFF): \processor.id_ex_reg.data_out [157] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8844 (SB_DFF): \processor.id_ex_reg.data_out [158] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8845 (SB_DFF): \processor.id_ex_reg.data_out [159] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8846 (SB_DFF): \processor.id_ex_reg.data_out [160] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8847 (SB_DFF): \processor.id_ex_reg.data_out [161] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8848 (SB_DFF): \processor.id_ex_reg.data_out [162] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8849 (SB_DFF): \processor.id_ex_reg.data_out [163] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8850 (SB_DFF): \processor.id_ex_reg.data_out [164] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11995 (SB_DFF): \processor.ex_mem_reg.data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8853 (SB_DFF): \processor.mem_wb_reg.data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8854 (SB_DFF): \processor.mem_wb_reg.data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8856 (SB_DFF): \processor.mem_wb_reg.data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8857 (SB_DFF): \processor.mem_wb_reg.data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8858 (SB_DFF): \processor.mem_wb_reg.data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8859 (SB_DFF): \processor.mem_wb_reg.data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8860 (SB_DFF): \processor.mem_wb_reg.data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8861 (SB_DFF): \processor.mem_wb_reg.data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8862 (SB_DFF): \processor.mem_wb_reg.data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8863 (SB_DFF): \processor.mem_wb_reg.data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8864 (SB_DFF): \processor.mem_wb_reg.data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8865 (SB_DFF): \processor.mem_wb_reg.data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8866 (SB_DFF): \processor.mem_wb_reg.data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8867 (SB_DFF): \processor.mem_wb_reg.data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8868 (SB_DFF): \processor.mem_wb_reg.data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8869 (SB_DFF): \processor.mem_wb_reg.data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8870 (SB_DFF): \processor.mem_wb_reg.data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8871 (SB_DFF): \processor.mem_wb_reg.data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8872 (SB_DFF): \processor.mem_wb_reg.data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8873 (SB_DFF): \processor.mem_wb_reg.data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8874 (SB_DFF): \processor.mem_wb_reg.data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8875 (SB_DFF): \processor.mem_wb_reg.data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8876 (SB_DFF): \processor.mem_wb_reg.data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8877 (SB_DFF): \processor.mem_wb_reg.data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8878 (SB_DFF): \processor.mem_wb_reg.data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8879 (SB_DFF): \processor.mem_wb_reg.data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8880 (SB_DFF): \processor.mem_wb_reg.data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8881 (SB_DFF): \processor.mem_wb_reg.data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8882 (SB_DFF): \processor.mem_wb_reg.data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8883 (SB_DFF): \processor.mem_wb_reg.data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8884 (SB_DFF): \processor.mem_wb_reg.data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8885 (SB_DFF): \processor.mem_wb_reg.data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8886 (SB_DFF): \processor.mem_wb_reg.data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8887 (SB_DFF): \processor.mem_wb_reg.data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8888 (SB_DFF): \processor.mem_wb_reg.data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8889 (SB_DFF): \processor.mem_wb_reg.data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8890 (SB_DFF): \processor.mem_wb_reg.data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8891 (SB_DFF): \processor.mem_wb_reg.data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8892 (SB_DFF): \processor.mem_wb_reg.data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8893 (SB_DFF): \processor.mem_wb_reg.data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8894 (SB_DFF): \processor.mem_wb_reg.data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8895 (SB_DFF): \processor.mem_wb_reg.data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8896 (SB_DFF): \processor.mem_wb_reg.data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8897 (SB_DFF): \processor.mem_wb_reg.data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8898 (SB_DFF): \processor.mem_wb_reg.data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8899 (SB_DFF): \processor.mem_wb_reg.data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8900 (SB_DFF): \processor.mem_wb_reg.data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8901 (SB_DFF): \processor.mem_wb_reg.data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8902 (SB_DFF): \processor.mem_wb_reg.data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8903 (SB_DFF): \processor.mem_wb_reg.data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8904 (SB_DFF): \processor.mem_wb_reg.data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8905 (SB_DFF): \processor.mem_wb_reg.data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8906 (SB_DFF): \processor.mem_wb_reg.data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8907 (SB_DFF): \processor.mem_wb_reg.data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8908 (SB_DFF): \processor.mem_wb_reg.data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8909 (SB_DFF): \processor.mem_wb_reg.data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8910 (SB_DFF): \processor.mem_wb_reg.data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8911 (SB_DFF): \processor.mem_wb_reg.data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8912 (SB_DFF): \processor.mem_wb_reg.data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8913 (SB_DFF): \processor.mem_wb_reg.data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8914 (SB_DFF): \processor.mem_wb_reg.data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8915 (SB_DFF): \processor.mem_wb_reg.data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8916 (SB_DFF): \processor.mem_wb_reg.data_out [64] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8917 (SB_DFF): \processor.mem_wb_reg.data_out [65] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8918 (SB_DFF): \processor.mem_wb_reg.data_out [66] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8919 (SB_DFF): \processor.mem_wb_reg.data_out [67] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8920 (SB_DFF): \processor.mem_wb_reg.data_out [68] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8921 (SB_DFF): \processor.mem_wb_reg.data_out [69] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8922 (SB_DFF): \processor.mem_wb_reg.data_out [70] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8923 (SB_DFF): \processor.mem_wb_reg.data_out [71] = 0

25.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in top.
  Merging $auto$simplemap.cc:277:simplemap_mux$11960 (A=\processor.id_ex_reg.data_out [7], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$11999 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11961 (A=\processor.id_ex_reg.data_out [8], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$12000 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11953 (A=\processor.id_ex_reg.data_out [0], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$11994 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8005 (A=\processor.control_unit.Jump, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8686 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11958 (A=\processor.id_ex_reg.data_out [5], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$6567 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$11957 (A=\processor.id_ex_reg.data_out [4], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$6568 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7510 (A=\inst_mem.out [0], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7613 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7511 (A=\inst_mem.out [1], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7614 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7512 (A=\inst_mem.out [2], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7615 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7513 (A=\inst_mem.out [3], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7616 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7514 (A=\inst_mem.out [4], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7617 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7515 (A=\inst_mem.out [5], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7618 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7530 (A=\inst_mem.out [20], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8560 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7516 (A=\inst_mem.out [6], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7619 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7518 (A=\inst_mem.out [8], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7621 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7519 (A=\inst_mem.out [9], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7622 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7520 (A=\inst_mem.out [10], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7623 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7521 (A=\inst_mem.out [11], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7624 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7522 (A=\inst_mem.out [12], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7625 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7523 (A=\inst_mem.out [13], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7626 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7524 (A=\inst_mem.out [14], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7627 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7525 (A=\inst_mem.out [15], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7628 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7526 (A=\inst_mem.out [16], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7629 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7527 (A=\inst_mem.out [17], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7630 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7528 (A=\inst_mem.out [18], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7631 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7529 (A=\inst_mem.out [19], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7632 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7530 (A=\inst_mem.out [20], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7633 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7531 (A=\inst_mem.out [21], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7634 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7532 (A=\inst_mem.out [22], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7635 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7533 (A=\inst_mem.out [23], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7636 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7534 (A=\inst_mem.out [24], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7637 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7535 (A=\inst_mem.out [25], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7638 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7536 (A=\inst_mem.out [26], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7639 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7537 (A=\inst_mem.out [27], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7640 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7538 (A=\inst_mem.out [28], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7641 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7539 (A=\inst_mem.out [29], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7642 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7540 (A=\inst_mem.out [30], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7643 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7541 (A=\inst_mem.out [31], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7644 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11959 (A=\processor.id_ex_reg.data_out [6], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$11998 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7526 (A=\inst_mem.out [16], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8556 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7527 (A=\inst_mem.out [17], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8557 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7528 (A=\inst_mem.out [18], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8558 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7525 (A=\inst_mem.out [15], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8555 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7529 (A=\inst_mem.out [19], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8559 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7531 (A=\inst_mem.out [21], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8561 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7532 (A=\inst_mem.out [22], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8562 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7533 (A=\inst_mem.out [23], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8563 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11955 (A=\processor.id_ex_reg.data_out [2], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$11996 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8006 (A=\processor.control_unit.MemtoReg, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8687 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8007 (A=\processor.control_unit.RegWrite, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8688 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8008 (A=\processor.control_unit.MemWrite, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8690 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8009 (A=\processor.control_unit.MemRead, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8691 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8010 (A=\processor.control_unit.Branch, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8692 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8011 (A=\processor.control_unit.Auipc, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8694 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8012 (A=\processor.control_unit.Lui, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8695 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8013 (A=\processor.control_unit.ALUSrc, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8696 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8014 (A=\processor.control_unit.Jalr, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8697 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14568 (A=1'1, B=$techmap$techmap\processor.alu_control.$procmux$1347.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$7822_Y, S=$techmap$techmap\processor.alu_control.$procmux$1347.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$7813_Y) into $auto$simplemap.cc:420:simplemap_dff$8826 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14569 (A=1'1, B=$techmap$techmap\processor.alu_control.$procmux$1347.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$7823_Y, S=$techmap$techmap\processor.alu_control.$procmux$1347.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$7813_Y) into $auto$simplemap.cc:420:simplemap_dff$8827 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14570 (A=1'1, B=$techmap$techmap\processor.alu_control.$procmux$1347.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$7824_Y, S=$techmap$techmap\processor.alu_control.$procmux$1347.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$7813_Y) into $auto$simplemap.cc:420:simplemap_dff$8828 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14571 (A=1'1, B=$techmap$techmap\processor.alu_control.$procmux$1347.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$7825_Y, S=$techmap$techmap\processor.alu_control.$procmux$1347.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$7813_Y) into $auto$simplemap.cc:420:simplemap_dff$8829 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14572 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$14474 [2], S=$techmap$techmap\processor.alu_control.$procmux$1347.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$7813_Y) into $auto$simplemap.cc:420:simplemap_dff$8830 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14573 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$14465 [2], S=$techmap$techmap\processor.alu_control.$procmux$1347.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$7813_Y) into $auto$simplemap.cc:420:simplemap_dff$8831 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14574 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$14456 [2], S=$techmap$techmap\processor.alu_control.$procmux$1347.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$7813_Y) into $auto$simplemap.cc:420:simplemap_dff$8832 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7517 (A=\inst_mem.out [7], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$7620 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7534 (A=\inst_mem.out [24], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8564 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$11954 (A=\processor.id_ex_reg.data_out [1], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$11995 (SB_DFF).

25.40. Executing ICE40_OPT pass (performing simple optimizations).

25.40.1. Running ICE40 specific optimizations.

25.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~27 debug messages>

25.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~633 debug messages>
Removed a total of 211 cells.

25.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

25.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 44 unused cells and 5755 unused wires.
<suppressed ~45 debug messages>

25.40.6. Rerunning OPT passes. (Removed registers in this run.)

25.40.7. Running ICE40 specific optimizations.

25.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~44 debug messages>

25.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

25.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.40.12. Rerunning OPT passes. (Removed registers in this run.)

25.40.13. Running ICE40 specific optimizations.

25.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

25.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.40.18. Finished OPT passes. (There is nothing left to do.)

25.41. Executing TECHMAP pass (map to technology primitives).

25.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

25.41.2. Continuing TECHMAP pass.
No more expansions possible.

25.42. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_FF_'.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Successfully finished Verilog frontend.

25.43. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

25.44. Executing ABC9 pass.

25.44.1. Executing ABC9_OPS pass (helper functions for ABC9).

25.44.2. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module top.
Found 0 SCCs.

25.44.3. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2096 debug messages>

25.44.4. Executing ABC9_OPS pass (helper functions for ABC9).

25.44.5. Executing ABC9_OPS pass (helper functions for ABC9).

25.44.6. Executing FLATTEN pass (flatten design).
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
Using template SB_CARRY for cells of type SB_CARRY.
<suppressed ~7 debug messages>
No more expansions possible.

25.44.7. Executing TECHMAP pass (map to technology primitives).

25.44.7.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

25.44.7.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
No more expansions possible.
<suppressed ~8 debug messages>

25.44.8. Executing OPT pass (performing simple optimizations).

25.44.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top$holes.
<suppressed ~4 debug messages>

25.44.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top$holes'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

25.44.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top$holes..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

25.44.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top$holes.
Performed a total of 0 changes.

25.44.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top$holes'.
Removed a total of 0 cells.

25.44.8.6. Executing OPT_RMDFF pass (remove dff with constant values).

25.44.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top$holes..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

25.44.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top$holes.

25.44.8.9. Rerunning OPT passes. (Maybe there is more to do..)

25.44.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top$holes..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

25.44.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top$holes.
Performed a total of 0 changes.

25.44.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top$holes'.
Removed a total of 0 cells.

25.44.8.13. Executing OPT_RMDFF pass (remove dff with constant values).

25.44.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top$holes..

25.44.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top$holes.

25.44.8.16. Finished OPT passes. (There is nothing left to do.)

25.44.9. Executing AIGMAP pass (map logic to AIG).
Module top: replaced 3334 cells with 20917 new cells, skipped 4308 cells.
  replaced 3 cell types:
     807 $_OR_
      71 $_XOR_
    2456 $_MUX_
  not replaced 14 cell types:
     163 $_NOT_
     873 $_AND_
      61 SB_DFFSR
     671 SB_DFFE
     358 SB_DFF
       8 SB_RAM40_4KNR
       2 SB_MAC16
       1 SB_HFOSC
       8 SB_RAM40_4K
       1 SB_DFFN
       2 SB_DFFESR
       4 SB_DFFSS
      64 $__ICE40_CARRY_WRAPPER
    2092 $__ABC9_DELAY
Module top$holes: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

25.44.9.1. Executing ABC9_OPS pass (helper functions for ABC9).

25.44.9.2. Executing ABC9_OPS pass (helper functions for ABC9).

25.44.9.3. Executing XAIGER backend.
<suppressed ~1366 debug messages>
Extracted 9261 AND gates and 26039 wires from module `top' to a netlist network with 1290 inputs and 2461 outputs.

25.44.9.4. Executing ABC9_EXE pass (technology mapping using ABC9).

25.44.9.5. Executing ABC9.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   1290/   2461  and =    7820  lev =   42 (5.23)  mem = 0.22 MB  box = 2156  bb = 2092
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   1290/   2461  and =   10665  lev =   53 (4.22)  mem = 0.25 MB  ch = 1438  box = 2156  bb = 2092
ABC: + &if -W 250 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =   10665.  Ch =  1240.  Total mem =    2.62 MB. Peak cut mem =    0.12 MB.
ABC: P:  Del = 10702.00.  Ar =    2875.0.  Edge =    10020.  Cut =    66002.  T =     0.02 sec
ABC: P:  Del = 10702.00.  Ar =    2766.0.  Edge =    10234.  Cut =    63127.  T =     0.02 sec
ABC: P:  Del = 10702.00.  Ar =    2624.0.  Edge =     8505.  Cut =    67642.  T =     0.01 sec
ABC: F:  Del = 10702.00.  Ar =    2499.0.  Edge =     8093.  Cut =    65302.  T =     0.01 sec
ABC: A:  Del = 10702.00.  Ar =    2373.0.  Edge =     7692.  Cut =    64403.  T =     0.02 sec
ABC: A:  Del = 10702.00.  Ar =    2365.0.  Edge =     7680.  Cut =    64772.  T =     0.02 sec
ABC: Total time =     0.10 sec
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =   1290/   2461  and =    6931  lev =   37 (4.86)  mem = 0.21 MB  box = 2156  bb = 2092
ABC: Mapping (K=4)  :  lut =   2363  edge =    7661  lev =   17 (2.37)  levB =   43  mem = 0.11 MB
ABC: LUT = 2363 : 2=420 17.8 %  3=951 40.2 %  4=992 42.0 %  Ave = 3.24
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 2.72 seconds, total: 2.72 seconds

25.44.9.6. Executing AIGER frontend.
<suppressed ~7515 debug messages>
Removed 10017 unused cells and 19200 unused wires.

25.44.9.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     2364
ABC RESULTS:   $__ICE40_CARRY_WRAPPER cells:       64
ABC RESULTS:           input signals:      298
ABC RESULTS:          output signals:     1561
Removing temp directory.

25.45. Executing ICE40_WRAPCARRY pass (wrap carries).

25.46. Executing TECHMAP pass (map to technology primitives).

25.46.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

25.46.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 229 unused cells and 29067 unused wires.

25.47. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     2431
  1-LUT                1
  2-LUT              421
  3-LUT             1017
  4-LUT              992

Eliminating LUTs.
Number of LUTs:     2431
  1-LUT                1
  2-LUT              421
  3-LUT             1017
  4-LUT              992

Combining LUTs.
Number of LUTs:     2426
  1-LUT                1
  2-LUT              416
  3-LUT             1012
  4-LUT              997

Eliminated 0 LUTs.
Combined 5 LUTs.
<suppressed ~14228 debug messages>

25.48. Executing TECHMAP pass (map to technology primitives).

25.48.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

25.48.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000001001000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000010000100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000010110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110010101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000100100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100100001000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101111111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001101011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001000100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111001110110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111111011101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010100010101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111011111100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001010001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001011101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100011111110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101110100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110001000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101010101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100001001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101111011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010010001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110111111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100000101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101101111111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000101010100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100010000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001001010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000010011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000110010101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001001000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001101011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110111111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010100000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010011000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000001010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010100011111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001000010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001000000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110110101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011100100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000110010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001100000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001000010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000001001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101000001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000000100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000101011011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000000000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010110101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010111001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010000010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010001010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100100011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100101101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000001000101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101011100010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000101010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001111011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111101000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001110110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011100010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
No more expansions possible.
<suppressed ~5650 debug messages>
Removed 0 unused cells and 4857 unused wires.

25.49. Executing AUTONAME pass.
Renamed 29245 objects in module top (57 iterations).
<suppressed ~6051 debug messages>

25.50. Executing HIERARCHY pass (managing design hierarchy).

25.50.1. Analyzing design hierarchy..
Top module:  \top

25.50.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

25.51. Printing statistics.

=== top ===

   Number of wires:               2890
   Number of wire bits:           7135
   Number of public wires:        2890
   Number of public wire bits:    7135
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3604
     SB_CARRY                       62
     SB_DFF                        358
     SB_DFFE                       671
     SB_DFFESR                       2
     SB_DFFN                         1
     SB_DFFSR                       61
     SB_DFFSS                        4
     SB_HFOSC                        1
     SB_LUT4                      2426
     SB_MAC16                        2
     SB_RAM40_4K                     8
     SB_RAM40_4KNR                   8

25.52. Executing CHECK pass (checking for obvious problems).
checking module top..
Warning: Wire top.processor.immediate_generator.imm has an unprocessed 'init' attribute.
found and reported 1 problems.

26. Printing statistics.

=== top ===

   Number of wires:               2890
   Number of wire bits:           7135
   Number of public wires:        2890
   Number of public wire bits:    7135
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3604
     SB_CARRY                       62
     SB_DFF                        358
     SB_DFFE                       671
     SB_DFFESR                       2
     SB_DFFN                         1
     SB_DFFSR                       61
     SB_DFFSS                        4
     SB_HFOSC                        1
     SB_LUT4                      2426
     SB_MAC16                        2
     SB_RAM40_4K                     8
     SB_RAM40_4KNR                   8

27. Executing JSON backend.

Warnings: 6 unique messages, 6 total
End of script. Logfile hash: d6833454a6, CPU: user 6.91s system 0.47s, MEM: 252.90 MB peak
Yosys 0.9+2406 (git sha1 UNKNOWN, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 18% 8x techmap (1 sec), 15% 33x opt_expr (1 sec), ...
