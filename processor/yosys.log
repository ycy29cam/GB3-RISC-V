
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+2406 (git sha1 UNKNOWN, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `/gb3-resources/processor/yscripts/new_sail.ys' --

1. Executing Verilog-2005 frontend: verilog/CSR.v
Parsing Verilog input from `verilog/CSR.v' to AST representation.
Generating RTLIL representation for module `\csr_file'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: verilog/RAM.v
Parsing Verilog input from `verilog/RAM.v' to AST representation.
Generating RTLIL representation for module `\RAM'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: verilog/adder.v
Parsing Verilog input from `verilog/adder.v' to AST representation.
Generating RTLIL representation for module `\dsp_adder'.
Generating RTLIL representation for module `\dsp_subtractor'.
Generating RTLIL representation for module `\dsp_addsub'.
Generating RTLIL representation for module `\adder'.
Generating RTLIL representation for module `\full_adder'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: verilog/alu.v
Parsing Verilog input from `verilog/alu.v' to AST representation.
Generating RTLIL representation for module `\alu'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: verilog/alu_control.v
Parsing Verilog input from `verilog/alu_control.v' to AST representation.
Generating RTLIL representation for module `\ALUControl'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: verilog/branch_decide.v
Parsing Verilog input from `verilog/branch_decide.v' to AST representation.
Generating RTLIL representation for module `\branch_decision'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: verilog/branch_predictor.v
Parsing Verilog input from `verilog/branch_predictor.v' to AST representation.
Generating RTLIL representation for module `\branch_predictor'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: verilog/control_unit.v
Parsing Verilog input from `verilog/control_unit.v' to AST representation.
Generating RTLIL representation for module `\control'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: verilog/cpu.v
Parsing Verilog input from `verilog/cpu.v' to AST representation.
Generating RTLIL representation for module `\cpu'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: verilog/dataMem_mask_gen.v
Parsing Verilog input from `verilog/dataMem_mask_gen.v' to AST representation.
Generating RTLIL representation for module `\sign_mask_gen'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: verilog/data_mem.v
Parsing Verilog input from `verilog/data_mem.v' to AST representation.
Generating RTLIL representation for module `\data_mem'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: verilog/dsp_adder.v
Parsing Verilog input from `verilog/dsp_adder.v' to AST representation.
Generating RTLIL representation for module `\adder_dsp'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: verilog/forwarding_unit.v
Parsing Verilog input from `verilog/forwarding_unit.v' to AST representation.
Generating RTLIL representation for module `\ForwardingUnit'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: verilog/imm_gen.v
Parsing Verilog input from `verilog/imm_gen.v' to AST representation.
Generating RTLIL representation for module `\imm_gen'.
Note: Assuming pure combinatorial block at verilog/imm_gen.v:54.2-72.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: verilog/instruction_mem.v
Parsing Verilog input from `verilog/instruction_mem.v' to AST representation.
Generating RTLIL representation for module `\instruction_memory'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: verilog/mux2to1.v
Parsing Verilog input from `verilog/mux2to1.v' to AST representation.
Generating RTLIL representation for module `\mux2to1'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: verilog/pipeline_registers.v
Parsing Verilog input from `verilog/pipeline_registers.v' to AST representation.
Generating RTLIL representation for module `\if_id'.
Generating RTLIL representation for module `\id_ex'.
Generating RTLIL representation for module `\ex_mem'.
Generating RTLIL representation for module `\mem_wb'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: verilog/program_counter.v
Parsing Verilog input from `verilog/program_counter.v' to AST representation.
Generating RTLIL representation for module `\program_counter'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: verilog/register_file.v
Parsing Verilog input from `verilog/register_file.v' to AST representation.
Generating RTLIL representation for module `\regfile'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: toplevel.v
Parsing Verilog input from `toplevel.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

21. Executing HIERARCHY pass (managing design hierarchy).

21.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \instruction_memory
Used module:     \cpu
Used module:         \mux2to1
Used module:         \branch_predictor
Used module:         \ForwardingUnit
Used module:         \mem_wb
Used module:         \branch_decision
Used module:         \ex_mem
Used module:         \alu
Used module:             \full_adder
Used module:         \dsp_adder
Used module:             \adder_dsp
Used module:         \id_ex
Used module:         \sign_mask_gen
Used module:         \ALUControl
Used module:         \imm_gen
Used module:         \regfile
Used module:         \control
Used module:         \if_id
Used module:         \program_counter
Parameter 1 (\WIDTH) = 9

21.2. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2to1'.
Parameter 1 (\WIDTH) = 9
Generating RTLIL representation for module `$paramod\mux2to1\WIDTH=9'.
Parameter 1 (\WIDTH) = 11

21.3. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2to1'.
Parameter 1 (\WIDTH) = 11
Generating RTLIL representation for module `$paramod\mux2to1\WIDTH=11'.

21.4. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \instruction_memory
Used module:     \cpu
Used module:         \mux2to1
Used module:         \branch_predictor
Used module:         \ForwardingUnit
Used module:         \mem_wb
Used module:         \branch_decision
Used module:         \ex_mem
Used module:         \alu
Used module:             \full_adder
Used module:         \dsp_adder
Used module:             \adder_dsp
Used module:         $paramod\mux2to1\WIDTH=9
Used module:         \id_ex
Used module:         \sign_mask_gen
Used module:         \ALUControl
Used module:         \imm_gen
Used module:         \regfile
Used module:         $paramod\mux2to1\WIDTH=11
Used module:         \control
Used module:         \if_id
Used module:         \program_counter

21.5. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \instruction_memory
Used module:     \cpu
Used module:         \mux2to1
Used module:         \branch_predictor
Used module:         \ForwardingUnit
Used module:         \mem_wb
Used module:         \branch_decision
Used module:         \ex_mem
Used module:         \alu
Used module:             \full_adder
Used module:         \dsp_adder
Used module:             \adder_dsp
Used module:         $paramod\mux2to1\WIDTH=9
Used module:         \id_ex
Used module:         \sign_mask_gen
Used module:         \ALUControl
Used module:         \imm_gen
Used module:         \regfile
Used module:         $paramod\mux2to1\WIDTH=11
Used module:         \control
Used module:         \if_id
Used module:         \program_counter
Removing unused module `\adder'.
Removing unused module `\dsp_addsub'.
Removing unused module `\dsp_subtractor'.
Removing unused module `\RAM'.
Removing unused module `\csr_file'.
Removed 5 unused modules.
Warning: Resizing cell port cpu.mem_wb_reg.data_out from 85 bits to 117 bits.
Warning: Resizing cell port cpu.mem_wb_reg.data_in from 85 bits to 117 bits.
Warning: Resizing cell port cpu.ex_mem_reg.data_out from 121 bits to 155 bits.
Warning: Resizing cell port cpu.ex_mem_reg.data_in from 121 bits to 155 bits.

22. Executing PROC pass (convert processes to netlists).

22.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `instruction_memory.$proc$verilog/instruction_mem.v:0$1070'.
Removing empty process `regfile.$proc$verilog/register_file.v:0$1105'.
Cleaned up 0 empty switches.

22.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$verilog/imm_gen.v:54$1065 in module imm_gen.
Marked 1 switch rules as full_case in process $proc$verilog/data_mem.v:240$1030 in module data_mem.
Marked 1 switch rules as full_case in process $proc$verilog/branch_predictor.v:172$617 in module branch_predictor.
Marked 1 switch rules as full_case in process $proc$verilog/branch_predictor.v:162$613 in module branch_predictor.
Removed 5 dead cases from process $proc$verilog/alu_control.v:82$86 in module ALUControl.
Marked 10 switch rules as full_case in process $proc$verilog/alu_control.v:82$86 in module ALUControl.
Removed a total of 5 dead cases.

22.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 30 assignments to connections.

22.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\mem_wb.$proc$verilog/pipeline_registers.v:0$1079'.
  Set init value: \data_out = 117'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\ex_mem.$proc$verilog/pipeline_registers.v:0$1077'.
  Set init value: \data_out = 155'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\id_ex.$proc$verilog/pipeline_registers.v:0$1075'.
  Set init value: \data_out = 178'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\if_id.$proc$verilog/pipeline_registers.v:0$1073'.
  Set init value: \data_out = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\imm_gen.$proc$verilog/imm_gen.v:0$1066'.
  Set init value: \imm = 0
Found init rule in `\data_mem.$proc$verilog/data_mem.v:0$1044'.
  Set init value: \clk_stall = 1'0
Found init rule in `\data_mem.$proc$verilog/data_mem.v:60$1043'.
  Set init value: \state = 0
Found init rule in `\branch_predictor.$proc$verilog/branch_predictor.v:0$895'.
  Set init value: \branch_mem_sig_reg = 1'0
Found init rule in `\ALUControl.$proc$verilog/alu_control.v:0$87'.
  Set init value: \ALUCtl = 7'0000000
Found init rule in `\program_counter.$proc$verilog/program_counter.v:0$1081'.
  Set init value: \outAddr = 0

22.5. Executing PROC_ARST pass (detect async resets in processes).

22.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\mem_wb.$proc$verilog/pipeline_registers.v:0$1079'.
Creating decoders for process `\mem_wb.$proc$verilog/pipeline_registers.v:145$1078'.
Creating decoders for process `\ex_mem.$proc$verilog/pipeline_registers.v:0$1077'.
Creating decoders for process `\ex_mem.$proc$verilog/pipeline_registers.v:118$1076'.
Creating decoders for process `\id_ex.$proc$verilog/pipeline_registers.v:0$1075'.
Creating decoders for process `\id_ex.$proc$verilog/pipeline_registers.v:91$1074'.
Creating decoders for process `\if_id.$proc$verilog/pipeline_registers.v:0$1073'.
Creating decoders for process `\if_id.$proc$verilog/pipeline_registers.v:64$1072'.
Creating decoders for process `\imm_gen.$proc$verilog/imm_gen.v:0$1066'.
Creating decoders for process `\imm_gen.$proc$verilog/imm_gen.v:54$1065'.
     1/1: $1\imm[31:0]
Creating decoders for process `\data_mem.$proc$verilog/data_mem.v:0$1044'.
Creating decoders for process `\data_mem.$proc$verilog/data_mem.v:60$1043'.
Creating decoders for process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
     1/12: $0$memwr$\data_block$verilog/data_mem.v:283$961_EN[31:0]$1033
     2/12: $0$memwr$\data_block$verilog/data_mem.v:283$961_DATA[31:0]$1032
     3/12: $0$memwr$\data_block$verilog/data_mem.v:283$961_ADDR[31:0]$1031
     4/12: $0\sign_mask_buf[3:0]
     5/12: $0\addr_buf[31:0]
     6/12: $0\write_data_buffer[31:0]
     7/12: $0\memwrite_buf[0:0]
     8/12: $0\memread_buf[0:0]
     9/12: $0\word_buf[31:0]
    10/12: $0\state[31:0]
    11/12: $0\clk_stall[0:0]
    12/12: $0\read_data[31:0]
Creating decoders for process `\data_mem.$proc$verilog/data_mem.v:231$1026'.
     1/1: $0\led_reg[31:0]
Creating decoders for process `\branch_predictor.$proc$verilog/branch_predictor.v:0$895'.
Creating decoders for process `\branch_predictor.$proc$verilog/branch_predictor.v:0$634'.
Creating decoders for process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
     1/6: $0$memwr$\bht$verilog/branch_predictor.v:176$610_EN[1:0]$620
     2/6: $0$memwr$\bht$verilog/branch_predictor.v:176$610_DATA[1:0]$619
     3/6: $0$memwr$\bht$verilog/branch_predictor.v:176$610_ADDR[7:0]$618
     4/6: $0$memwr$\bht$verilog/branch_predictor.v:179$611_EN[1:0]$623
     5/6: $0$memwr$\bht$verilog/branch_predictor.v:179$611_DATA[1:0]$622
     6/6: $0$memwr$\bht$verilog/branch_predictor.v:179$611_ADDR[7:0]$621
Creating decoders for process `\branch_predictor.$proc$verilog/branch_predictor.v:162$613'.
     1/3: $1$mem2bits$\bht$verilog/branch_predictor.v:165$352[1:0]$615
     2/3: $0\predicted_taken_reg[0:0]
     3/3: $0\commit_index[7:0]
Creating decoders for process `\branch_predictor.$proc$verilog/branch_predictor.v:155$612'.
Creating decoders for process `\ALUControl.$proc$verilog/alu_control.v:0$87'.
Creating decoders for process `\ALUControl.$proc$verilog/alu_control.v:82$86'.
     1/10: $10\ALUCtl[6:0]
     2/10: $9\ALUCtl[6:0]
     3/10: $8\ALUCtl[6:0]
     4/10: $7\ALUCtl[6:0]
     5/10: $6\ALUCtl[6:0]
     6/10: $5\ALUCtl[6:0]
     7/10: $4\ALUCtl[6:0]
     8/10: $3\ALUCtl[6:0]
     9/10: $2\ALUCtl[6:0]
    10/10: $1\ALUCtl[6:0]
Creating decoders for process `\top.$proc$toplevel.v:52$1108'.
Creating decoders for process `\top.$proc$toplevel.v:51$1107'.
Creating decoders for process `\regfile.$proc$verilog/register_file.v:95$1084'.
     1/3: $0$memwr$\regfile$verilog/register_file.v:97$1083_EN[31:0]$1087
     2/3: $0$memwr$\regfile$verilog/register_file.v:97$1083_DATA[31:0]$1086
     3/3: $0$memwr$\regfile$verilog/register_file.v:97$1083_ADDR[4:0]$1085
Creating decoders for process `\program_counter.$proc$verilog/program_counter.v:0$1081'.
Creating decoders for process `\program_counter.$proc$verilog/program_counter.v:65$1080'.

22.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\imm_gen.\imm' from process `\imm_gen.$proc$verilog/imm_gen.v:54$1065'.
No latch inferred for signal `\branch_predictor.\i' from process `\branch_predictor.$proc$verilog/branch_predictor.v:0$895'.
No latch inferred for signal `\branch_predictor.$mem2bits$\bht$verilog/branch_predictor.v:205$353' from process `\branch_predictor.$proc$verilog/branch_predictor.v:0$634'.
No latch inferred for signal `\ALUControl.\ALUCtl' from process `\ALUControl.$proc$verilog/alu_control.v:82$86'.
No latch inferred for signal `\top.\CLKHF_POWERUP' from process `\top.$proc$toplevel.v:52$1108'.
No latch inferred for signal `\top.\ENCLKHF' from process `\top.$proc$toplevel.v:51$1107'.

22.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\mem_wb.\data_out' using process `\mem_wb.$proc$verilog/pipeline_registers.v:145$1078'.
  created $dff cell `$procdff$1359' with positive edge clock.
Creating register for signal `\ex_mem.\data_out' using process `\ex_mem.$proc$verilog/pipeline_registers.v:118$1076'.
  created $dff cell `$procdff$1360' with positive edge clock.
Creating register for signal `\id_ex.\data_out' using process `\id_ex.$proc$verilog/pipeline_registers.v:91$1074'.
  created $dff cell `$procdff$1361' with positive edge clock.
Creating register for signal `\if_id.\data_out' using process `\if_id.$proc$verilog/pipeline_registers.v:64$1072'.
  created $dff cell `$procdff$1362' with positive edge clock.
Creating register for signal `\data_mem.\read_data' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1363' with positive edge clock.
Creating register for signal `\data_mem.\clk_stall' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1364' with positive edge clock.
Creating register for signal `\data_mem.\state' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1365' with positive edge clock.
Creating register for signal `\data_mem.\word_buf' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1366' with positive edge clock.
Creating register for signal `\data_mem.\memread_buf' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1367' with positive edge clock.
Creating register for signal `\data_mem.\memwrite_buf' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1368' with positive edge clock.
Creating register for signal `\data_mem.\write_data_buffer' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1369' with positive edge clock.
Creating register for signal `\data_mem.\addr_buf' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1370' with positive edge clock.
Creating register for signal `\data_mem.\sign_mask_buf' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1371' with positive edge clock.
Creating register for signal `\data_mem.$memwr$\data_block$verilog/data_mem.v:283$961_ADDR' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1372' with positive edge clock.
Creating register for signal `\data_mem.$memwr$\data_block$verilog/data_mem.v:283$961_DATA' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1373' with positive edge clock.
Creating register for signal `\data_mem.$memwr$\data_block$verilog/data_mem.v:283$961_EN' using process `\data_mem.$proc$verilog/data_mem.v:240$1030'.
  created $dff cell `$procdff$1374' with positive edge clock.
Creating register for signal `\data_mem.\led_reg' using process `\data_mem.$proc$verilog/data_mem.v:231$1026'.
  created $dff cell `$procdff$1375' with positive edge clock.
Creating register for signal `\branch_predictor.$memwr$\bht$verilog/branch_predictor.v:176$610_ADDR' using process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
  created $dff cell `$procdff$1376' with positive edge clock.
Creating register for signal `\branch_predictor.$memwr$\bht$verilog/branch_predictor.v:176$610_DATA' using process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
  created $dff cell `$procdff$1377' with positive edge clock.
Creating register for signal `\branch_predictor.$memwr$\bht$verilog/branch_predictor.v:176$610_EN' using process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
  created $dff cell `$procdff$1378' with positive edge clock.
Creating register for signal `\branch_predictor.$memwr$\bht$verilog/branch_predictor.v:179$611_ADDR' using process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
  created $dff cell `$procdff$1379' with positive edge clock.
Creating register for signal `\branch_predictor.$memwr$\bht$verilog/branch_predictor.v:179$611_DATA' using process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
  created $dff cell `$procdff$1380' with positive edge clock.
Creating register for signal `\branch_predictor.$memwr$\bht$verilog/branch_predictor.v:179$611_EN' using process `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
  created $dff cell `$procdff$1381' with positive edge clock.
Creating register for signal `\branch_predictor.\commit_index' using process `\branch_predictor.$proc$verilog/branch_predictor.v:162$613'.
  created $dff cell `$procdff$1382' with positive edge clock.
Creating register for signal `\branch_predictor.\predicted_taken_reg' using process `\branch_predictor.$proc$verilog/branch_predictor.v:162$613'.
  created $dff cell `$procdff$1383' with positive edge clock.
Creating register for signal `\branch_predictor.$mem2bits$\bht$verilog/branch_predictor.v:165$352' using process `\branch_predictor.$proc$verilog/branch_predictor.v:162$613'.
  created $dff cell `$procdff$1384' with positive edge clock.
Creating register for signal `\branch_predictor.\branch_mem_sig_reg' using process `\branch_predictor.$proc$verilog/branch_predictor.v:155$612'.
  created $dff cell `$procdff$1385' with negative edge clock.
Creating register for signal `\regfile.\rdAddrA_buf' using process `\regfile.$proc$verilog/register_file.v:95$1084'.
  created $dff cell `$procdff$1386' with positive edge clock.
Creating register for signal `\regfile.\rdAddrB_buf' using process `\regfile.$proc$verilog/register_file.v:95$1084'.
  created $dff cell `$procdff$1387' with positive edge clock.
Creating register for signal `\regfile.\regDatA' using process `\regfile.$proc$verilog/register_file.v:95$1084'.
  created $dff cell `$procdff$1388' with positive edge clock.
Creating register for signal `\regfile.\regDatB' using process `\regfile.$proc$verilog/register_file.v:95$1084'.
  created $dff cell `$procdff$1389' with positive edge clock.
Creating register for signal `\regfile.\wrAddr_buf' using process `\regfile.$proc$verilog/register_file.v:95$1084'.
  created $dff cell `$procdff$1390' with positive edge clock.
Creating register for signal `\regfile.\wrData_buf' using process `\regfile.$proc$verilog/register_file.v:95$1084'.
  created $dff cell `$procdff$1391' with positive edge clock.
Creating register for signal `\regfile.\write_buf' using process `\regfile.$proc$verilog/register_file.v:95$1084'.
  created $dff cell `$procdff$1392' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile$verilog/register_file.v:97$1083_ADDR' using process `\regfile.$proc$verilog/register_file.v:95$1084'.
  created $dff cell `$procdff$1393' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile$verilog/register_file.v:97$1083_DATA' using process `\regfile.$proc$verilog/register_file.v:95$1084'.
  created $dff cell `$procdff$1394' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile$verilog/register_file.v:97$1083_EN' using process `\regfile.$proc$verilog/register_file.v:95$1084'.
  created $dff cell `$procdff$1395' with positive edge clock.
Creating register for signal `\program_counter.\outAddr' using process `\program_counter.$proc$verilog/program_counter.v:65$1080'.
  created $dff cell `$procdff$1396' with positive edge clock.

22.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `mem_wb.$proc$verilog/pipeline_registers.v:0$1079'.
Removing empty process `mem_wb.$proc$verilog/pipeline_registers.v:145$1078'.
Removing empty process `ex_mem.$proc$verilog/pipeline_registers.v:0$1077'.
Removing empty process `ex_mem.$proc$verilog/pipeline_registers.v:118$1076'.
Removing empty process `id_ex.$proc$verilog/pipeline_registers.v:0$1075'.
Removing empty process `id_ex.$proc$verilog/pipeline_registers.v:91$1074'.
Removing empty process `if_id.$proc$verilog/pipeline_registers.v:0$1073'.
Removing empty process `if_id.$proc$verilog/pipeline_registers.v:64$1072'.
Removing empty process `imm_gen.$proc$verilog/imm_gen.v:0$1066'.
Found and cleaned up 1 empty switch in `\imm_gen.$proc$verilog/imm_gen.v:54$1065'.
Removing empty process `imm_gen.$proc$verilog/imm_gen.v:54$1065'.
Removing empty process `data_mem.$proc$verilog/data_mem.v:0$1044'.
Removing empty process `data_mem.$proc$verilog/data_mem.v:60$1043'.
Found and cleaned up 4 empty switches in `\data_mem.$proc$verilog/data_mem.v:240$1030'.
Removing empty process `data_mem.$proc$verilog/data_mem.v:240$1030'.
Found and cleaned up 1 empty switch in `\data_mem.$proc$verilog/data_mem.v:231$1026'.
Removing empty process `data_mem.$proc$verilog/data_mem.v:231$1026'.
Removing empty process `branch_predictor.$proc$verilog/branch_predictor.v:0$895'.
Removing empty process `branch_predictor.$proc$verilog/branch_predictor.v:0$634'.
Found and cleaned up 4 empty switches in `\branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
Removing empty process `branch_predictor.$proc$verilog/branch_predictor.v:172$617'.
Found and cleaned up 1 empty switch in `\branch_predictor.$proc$verilog/branch_predictor.v:162$613'.
Removing empty process `branch_predictor.$proc$verilog/branch_predictor.v:162$613'.
Removing empty process `branch_predictor.$proc$verilog/branch_predictor.v:155$612'.
Removing empty process `ALUControl.$proc$verilog/alu_control.v:0$87'.
Found and cleaned up 10 empty switches in `\ALUControl.$proc$verilog/alu_control.v:82$86'.
Removing empty process `ALUControl.$proc$verilog/alu_control.v:82$86'.
Removing empty process `top.$proc$toplevel.v:52$1108'.
Removing empty process `top.$proc$toplevel.v:51$1107'.
Found and cleaned up 1 empty switch in `\regfile.$proc$verilog/register_file.v:95$1084'.
Removing empty process `regfile.$proc$verilog/register_file.v:95$1084'.
Removing empty process `program_counter.$proc$verilog/program_counter.v:0$1081'.
Removing empty process `program_counter.$proc$verilog/program_counter.v:65$1080'.
Cleaned up 22 empty switches.

23. Executing OPT pass (performing simple optimizations).

23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mem_wb.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module mux2to1.
Optimizing module instruction_memory.
<suppressed ~1 debug messages>
Optimizing module imm_gen.
Optimizing module ForwardingUnit.
<suppressed ~4 debug messages>
Optimizing module adder_dsp.
Optimizing module data_mem.
<suppressed ~24 debug messages>
Optimizing module sign_mask_gen.
Optimizing module cpu.
Optimizing module control.
Optimizing module branch_predictor.
<suppressed ~1 debug messages>
Optimizing module branch_decision.
Optimizing module ALUControl.
<suppressed ~9 debug messages>
Optimizing module alu.
<suppressed ~3 debug messages>
Optimizing module full_adder.
Optimizing module $paramod\mux2to1\WIDTH=11.
Optimizing module $paramod\mux2to1\WIDTH=9.
Optimizing module top.
Optimizing module dsp_adder.
Optimizing module regfile.
<suppressed ~4 debug messages>
Optimizing module program_counter.

23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\instruction_memory'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\ForwardingUnit'.
<suppressed ~9 debug messages>
Finding identical cells in module `\adder_dsp'.
Finding identical cells in module `\data_mem'.
<suppressed ~72 debug messages>
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\control'.
<suppressed ~60 debug messages>
Finding identical cells in module `\branch_predictor'.
<suppressed ~12 debug messages>
Finding identical cells in module `\branch_decision'.
<suppressed ~6 debug messages>
Finding identical cells in module `\ALUControl'.
<suppressed ~108 debug messages>
Finding identical cells in module `\alu'.
<suppressed ~6 debug messages>
Finding identical cells in module `\full_adder'.
Finding identical cells in module `$paramod\mux2to1\WIDTH=11'.
Finding identical cells in module `$paramod\mux2to1\WIDTH=9'.
Finding identical cells in module `\top'.
Finding identical cells in module `\dsp_adder'.
Finding identical cells in module `\regfile'.
<suppressed ~3 debug messages>
Finding identical cells in module `\program_counter'.
Removed a total of 92 cells.

23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mem_wb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ex_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \id_ex..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \if_id..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux2to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \instruction_memory..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ForwardingUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder_dsp..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sign_mask_gen..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branch_predictor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1222.
    dead port 2/2 on $mux $procmux$1222.
Running muxtree optimizer on module \branch_decision..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ALUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1286.
    dead port 2/2 on $mux $procmux$1325.
    dead port 2/2 on $mux $procmux$1284.
    dead port 2/2 on $mux $procmux$1276.
    dead port 2/2 on $mux $procmux$1311.
    dead port 2/2 on $mux $procmux$1263.
    dead port 2/2 on $mux $procmux$1261.
    dead port 2/2 on $mux $procmux$1341.
    dead port 2/2 on $mux $procmux$1247.
    dead port 2/2 on $mux $procmux$1300.
    dead port 2/2 on $mux $procmux$1245.
    dead port 2/2 on $mux $procmux$1236.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \full_adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mux2to1\WIDTH=11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2to1\WIDTH=9..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dsp_adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \program_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 14 multiplexer ports.
<suppressed ~49 debug messages>

23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mem_wb.
  Optimizing cells in module \ex_mem.
  Optimizing cells in module \id_ex.
  Optimizing cells in module \if_id.
  Optimizing cells in module \mux2to1.
  Optimizing cells in module \instruction_memory.
  Optimizing cells in module \imm_gen.
    New ctrl vector for $pmux cell $procmux$1114: { $procmux$1120_CMP $procmux$1119_CMP $auto$opt_reduce.cc:134:opt_mux$1398 $procmux$1116_CMP $procmux$1115_CMP }
  Optimizing cells in module \imm_gen.
  Optimizing cells in module \ForwardingUnit.
  Optimizing cells in module \adder_dsp.
  Optimizing cells in module \data_mem.
    Consolidated identical input bits for $mux cell $procmux$1121:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$1121_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1121_Y [0]
      New connections: $procmux$1121_Y [31:1] = { $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] $procmux$1121_Y [0] }
    New ctrl vector for $pmux cell $procmux$1156: { $procmux$1167_CMP $procmux$1164_CMP $auto$opt_reduce.cc:134:opt_mux$1400 }
    New ctrl vector for $pmux cell $procmux$1168: { $procmux$1167_CMP $auto$opt_reduce.cc:134:opt_mux$1402 }
  Optimizing cells in module \data_mem.
  Optimizing cells in module \sign_mask_gen.
  Optimizing cells in module \cpu.
  Optimizing cells in module \control.
  Optimizing cells in module \branch_predictor.
    Consolidated identical input bits for $mux cell $procmux$1200:
      Old ports: A=2'00, B=2'11, Y=$procmux$1200_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1200_Y [0]
      New connections: $procmux$1200_Y [1] = $procmux$1200_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1180:
      Old ports: A=2'00, B=2'11, Y=$procmux$1180_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1180_Y [0]
      New connections: $procmux$1180_Y [1] = $procmux$1180_Y [0]
  Optimizing cells in module \branch_predictor.
    Consolidated identical input bits for $mux cell $procmux$1203:
      Old ports: A=$procmux$1200_Y, B=2'00, Y=$procmux$1203_Y
      New ports: A=$procmux$1200_Y [0], B=1'0, Y=$procmux$1203_Y [0]
      New connections: $procmux$1203_Y [1] = $procmux$1203_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1182:
      Old ports: A=2'00, B=$procmux$1180_Y, Y=$procmux$1182_Y
      New ports: A=1'0, B=$procmux$1180_Y [0], Y=$procmux$1182_Y [0]
      New connections: $procmux$1182_Y [1] = $procmux$1182_Y [0]
  Optimizing cells in module \branch_predictor.
    Consolidated identical input bits for $mux cell $procmux$1205:
      Old ports: A=2'00, B=$procmux$1203_Y, Y=$procmux$1205_Y
      New ports: A=1'0, B=$procmux$1203_Y [0], Y=$procmux$1205_Y [0]
      New connections: $procmux$1205_Y [1] = $procmux$1205_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1184:
      Old ports: A=2'00, B=$procmux$1182_Y, Y=$procmux$1184_Y
      New ports: A=1'0, B=$procmux$1182_Y [0], Y=$procmux$1184_Y [0]
      New connections: $procmux$1184_Y [1] = $procmux$1184_Y [0]
  Optimizing cells in module \branch_predictor.
  Optimizing cells in module \branch_decision.
  Optimizing cells in module \ALUControl.
    New ctrl vector for $pmux cell $procmux$1319: $auto$opt_reduce.cc:134:opt_mux$1404
    New ctrl vector for $pmux cell $procmux$1267: { $procmux$1340_CMP $procmux$1339_CMP $auto$opt_reduce.cc:134:opt_mux$1406 $procmux$1338_CMP $procmux$1337_CMP $procmux$1336_CMP $procmux$1335_CMP }
    New ctrl vector for $pmux cell $procmux$1344: { $auto$opt_reduce.cc:134:opt_mux$1408 $procmux$1350_CMP $procmux$1349_CMP $procmux$1348_CMP $procmux$1347_CMP $procmux$1346_CMP $procmux$1345_CMP }
    New ctrl vector for $pmux cell $procmux$1291: { $procmux$1340_CMP $auto$opt_reduce.cc:134:opt_mux$1410 $procmux$1338_CMP $procmux$1336_CMP $procmux$1335_CMP $procmux$1339_CMP $procmux$1337_CMP }
    New ctrl vector for $pmux cell $procmux$1307: $auto$opt_reduce.cc:134:opt_mux$1412
  Optimizing cells in module \ALUControl.
  Optimizing cells in module \alu.
  Optimizing cells in module \full_adder.
  Optimizing cells in module $paramod\mux2to1\WIDTH=11.
  Optimizing cells in module $paramod\mux2to1\WIDTH=9.
  Optimizing cells in module \top.
  Optimizing cells in module \dsp_adder.
  Optimizing cells in module \regfile.
    Consolidated identical input bits for $mux cell $procmux$1353:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$1353_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1353_Y [0]
      New connections: $procmux$1353_Y [31:1] = { $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] $procmux$1353_Y [0] }
  Optimizing cells in module \regfile.
  Optimizing cells in module \program_counter.
Performed a total of 16 changes.

23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\instruction_memory'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder_dsp'.
Finding identical cells in module `\data_mem'.
<suppressed ~3 debug messages>
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\control'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\ALUControl'.
<suppressed ~6 debug messages>
Finding identical cells in module `\alu'.
Finding identical cells in module `\full_adder'.
Finding identical cells in module `$paramod\mux2to1\WIDTH=11'.
Finding identical cells in module `$paramod\mux2to1\WIDTH=9'.
Finding identical cells in module `\top'.
Finding identical cells in module `\dsp_adder'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\program_counter'.
Removed a total of 3 cells.

23.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1384 ($dff) from module branch_predictor.
Replaced 1 DFF cells.

23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \instruction_memory..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder_dsp..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \full_adder..
Finding unused cells or wires in module $paramod\mux2to1\WIDTH=11..
Finding unused cells or wires in module $paramod\mux2to1\WIDTH=9..
Finding unused cells or wires in module \top..
Finding unused cells or wires in module \dsp_adder..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \program_counter..
Removed 2 unused cells and 330 unused wires.
<suppressed ~26 debug messages>

23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\WIDTH=11.
Optimizing module $paramod\mux2to1\WIDTH=9.
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder_dsp.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module data_mem.
Optimizing module dsp_adder.
Optimizing module ex_mem.
Optimizing module full_adder.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module instruction_memory.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

23.9. Rerunning OPT passes. (Maybe there is more to do..)

23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2to1\WIDTH=11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2to1\WIDTH=9..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ALUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ForwardingUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder_dsp..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \branch_decision..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branch_predictor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dsp_adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ex_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \full_adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \id_ex..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \if_id..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \instruction_memory..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mem_wb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux2to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \program_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sign_mask_gen..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2to1\WIDTH=11.
  Optimizing cells in module $paramod\mux2to1\WIDTH=9.
  Optimizing cells in module \ALUControl.
  Optimizing cells in module \ForwardingUnit.
  Optimizing cells in module \adder_dsp.
  Optimizing cells in module \alu.
  Optimizing cells in module \branch_decision.
  Optimizing cells in module \branch_predictor.
  Optimizing cells in module \control.
  Optimizing cells in module \cpu.
  Optimizing cells in module \data_mem.
  Optimizing cells in module \dsp_adder.
  Optimizing cells in module \ex_mem.
  Optimizing cells in module \full_adder.
  Optimizing cells in module \id_ex.
  Optimizing cells in module \if_id.
  Optimizing cells in module \imm_gen.
  Optimizing cells in module \instruction_memory.
  Optimizing cells in module \mem_wb.
  Optimizing cells in module \mux2to1.
  Optimizing cells in module \program_counter.
  Optimizing cells in module \regfile.
  Optimizing cells in module \sign_mask_gen.
  Optimizing cells in module \top.
Performed a total of 0 changes.

23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2to1\WIDTH=11'.
Finding identical cells in module `$paramod\mux2to1\WIDTH=9'.
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder_dsp'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\dsp_adder'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\full_adder'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\instruction_memory'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.13. Executing OPT_RMDFF pass (remove dff with constant values).

23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2to1\WIDTH=11..
Finding unused cells or wires in module $paramod\mux2to1\WIDTH=9..
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder_dsp..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \dsp_adder..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \full_adder..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \instruction_memory..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..

23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2to1\WIDTH=11.
Optimizing module $paramod\mux2to1\WIDTH=9.
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder_dsp.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module data_mem.
Optimizing module dsp_adder.
Optimizing module ex_mem.
Optimizing module full_adder.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module instruction_memory.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

23.16. Finished OPT passes. (There is nothing left to do.)

24. Printing statistics.

=== $paramod\mux2to1\WIDTH=11 ===

   Number of wires:                  4
   Number of wire bits:             34
   Number of public wires:           4
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $mux                            1

=== $paramod\mux2to1\WIDTH=9 ===

   Number of wires:                  4
   Number of wire bits:             28
   Number of public wires:           4
   Number of public wire bits:      28
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $mux                            1

=== ALUControl ===

   Number of wires:                 35
   Number of wire bits:             98
   Number of public wires:           3
   Number of public wire bits:      18
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 33
     $eq                            18
     $logic_not                      1
     $mux                            2
     $not                            1
     $pmux                           7
     $reduce_or                      4

=== ForwardingUnit ===

   Number of wires:                 23
   Number of wire bits:             39
   Number of public wires:          10
   Number of public wire bits:      26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 17
     $eq                             4
     $logic_and                      6
     $mux                            4
     $ne                             1
     $reduce_bool                    2

=== adder_dsp ===

   Number of wires:                  4
   Number of wire bits:             97
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     SB_MAC16                        1

=== alu ===

   Number of wires:                 78
   Number of wire bits:           1262
   Number of public wires:          46
   Number of public wire bits:     610
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 74
     $add                            1
     $and                           10
     $eq                            17
     $logic_not                      2
     $logic_or                       1
     $mux                           14
     $not                            5
     $or                            18
     $reduce_bool                    1
     $shl                            1
     $shr                            1
     $sshr                           1
     $xor                            1
     full_adder                      1

=== branch_decision ===

   Number of wires:                 10
   Number of wire bits:             10
   Number of public wires:           7
   Number of public wire bits:       7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $and                            3
     $logic_not                      2
     $or                             1

=== branch_predictor ===

   Number of wires:                 43
   Number of wire bits:            264
   Number of public wires:          12
   Number of public wire bits:     150
   Number of memories:               1
   Number of memory bits:          512
   Number of processes:              0
   Number of cells:                293
     $add                            2
     $and                            1
     $dff                            8
     $meminit                      256
     $memrd                          2
     $memwr                          2
     $mux                           19
     $ne                             1
     $reduce_bool                    1
     $sub                            1

=== control ===

   Number of wires:                 36
   Number of wire bits:             42
   Number of public wires:          12
   Number of public wire bits:      18
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 35
     $and                           23
     $not                            7
     $or                             5

=== cpu ===

   Number of wires:                 73
   Number of wire bits:           1642
   Number of public wires:          69
   Number of public wire bits:    1574
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 40
     $or                             4
     $paramod\mux2to1\WIDTH=11       1
     $paramod\mux2to1\WIDTH=9        1
     ALUControl                      1
     ForwardingUnit                  1
     alu                             1
     branch_decision                 1
     branch_predictor                1
     control                         1
     dsp_adder                       2
     ex_mem                          1
     id_ex                           1
     if_id                           1
     imm_gen                         1
     mem_wb                          1
     mux2to1                        18
     program_counter                 1
     regfile                         1
     sign_mask_gen                   1

=== data_mem ===

   Number of wires:                 97
   Number of wire bits:           1480
   Number of public wires:          48
   Number of public wire bits:     715
   Number of memories:               1
   Number of memory bits:         8512
   Number of processes:              0
   Number of cells:                 83
     $and                           13
     $dff                           13
     $eq                             4
     $logic_and                      1
     $logic_not                      1
     $logic_or                       1
     $memrd                          1
     $memwr                          1
     $mux                           37
     $not                            4
     $or                             3
     $pmux                           2
     $reduce_or                      1
     $sub                            1

=== dsp_adder ===

   Number of wires:                  4
   Number of wire bits:            128
   Number of public wires:           4
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     adder_dsp                       1

=== ex_mem ===

   Number of wires:                  3
   Number of wire bits:            311
   Number of public wires:           3
   Number of public wire bits:     311
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $dff                            1

=== full_adder ===

   Number of wires:                  5
   Number of wire bits:            129
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $add                            2

=== id_ex ===

   Number of wires:                  3
   Number of wire bits:            357
   Number of public wires:           3
   Number of public wire bits:     357
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $dff                            1

=== if_id ===

   Number of wires:                  3
   Number of wire bits:            129
   Number of public wires:           3
   Number of public wire bits:     129
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $dff                            1

=== imm_gen ===

   Number of wires:                  9
   Number of wire bits:             71
   Number of public wires:           2
   Number of public wire bits:      64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  8
     $eq                             6
     $pmux                           1
     $reduce_or                      1

=== instruction_memory ===

   Number of wires:                  2
   Number of wire bits:             64
   Number of public wires:           2
   Number of public wire bits:      64
   Number of memories:               1
   Number of memory bits:         5696
   Number of processes:              0
   Number of cells:                  2
     $meminit                        1
     $memrd                          1

=== mem_wb ===

   Number of wires:                  3
   Number of wire bits:            235
   Number of public wires:           3
   Number of public wire bits:     235
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $dff                            1

=== mux2to1 ===

   Number of wires:                  4
   Number of wire bits:             97
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $mux                            1

=== program_counter ===

   Number of wires:                  3
   Number of wire bits:             65
   Number of public wires:           3
   Number of public wire bits:      65
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $dff                            1

=== regfile ===

   Number of wires:                 32
   Number of wire bits:            436
   Number of public wires:          15
   Number of public wire bits:     225
   Number of memories:               1
   Number of memory bits:         1024
   Number of processes:              0
   Number of cells:                 28
     $and                            4
     $dff                           10
     $eq                             2
     $logic_and                      1
     $meminit                        1
     $memrd                          2
     $memwr                          1
     $mux                            5
     $reduce_bool                    2

=== sign_mask_gen ===

   Number of wires:                  4
   Number of wire bits:              9
   Number of public wires:           2
   Number of public wire bits:       7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $and                            2
     $not                            3
     $xor                            1

=== top ===

   Number of wires:                 14
   Number of wire bits:            179
   Number of public wires:          14
   Number of public wire bits:     179
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $mux                            1
     SB_HFOSC                        1
     cpu                             1
     data_mem                        1
     instruction_memory              1

=== design hierarchy ===

   top                               1
     cpu                             1
       $paramod\mux2to1\WIDTH=11      1
       $paramod\mux2to1\WIDTH=9      1
       ALUControl                    1
       ForwardingUnit                1
       alu                           1
         full_adder                  1
       branch_decision               1
       branch_predictor              1
       control                       1
       dsp_adder                     2
         adder_dsp                   1
       ex_mem                        1
       id_ex                         1
       if_id                         1
       imm_gen                       1
       mem_wb                        1
       mux2to1                      18
       program_counter               1
       regfile                       1
       sign_mask_gen                 1
     data_mem                        1
     instruction_memory              1

   Number of wires:                572
   Number of wire bits:           9080
   Number of public wires:         357
   Number of public wire bits:    7109
   Number of memories:               4
   Number of memory bits:        15744
   Number of processes:              0
   Number of cells:                619
     $add                            5
     $and                           56
     $dff                           36
     $eq                            51
     $logic_and                      8
     $logic_not                      6
     $logic_or                       2
     $meminit                      258
     $memrd                          6
     $memwr                          4
     $mux                          102
     $ne                             2
     $not                           20
     $or                            31
     $pmux                          10
     $reduce_bool                    6
     $reduce_or                      6
     $shl                            1
     $shr                            1
     $sshr                           1
     $sub                            2
     $xor                            2
     SB_HFOSC                        1
     SB_MAC16                        2

25. Executing SYNTH_ICE40 pass.

25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

25.2. Executing HIERARCHY pass (managing design hierarchy).

25.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \instruction_memory
Used module:     \cpu
Used module:         \program_counter
Used module:         \dsp_adder
Used module:             \adder_dsp
Used module:         \mux2to1
Used module:         \ALUControl
Used module:         \alu
Used module:             \full_adder
Used module:         \branch_decision
Used module:         \branch_predictor
Used module:         $paramod\mux2to1\WIDTH=11
Used module:         \control
Used module:         $paramod\mux2to1\WIDTH=9
Used module:         \ex_mem
Used module:         \ForwardingUnit
Used module:         \id_ex
Used module:         \if_id
Used module:         \imm_gen
Used module:         \mem_wb
Used module:         \regfile
Used module:         \sign_mask_gen

25.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \instruction_memory
Used module:     \cpu
Used module:         \program_counter
Used module:         \dsp_adder
Used module:             \adder_dsp
Used module:         \mux2to1
Used module:         \ALUControl
Used module:         \alu
Used module:             \full_adder
Used module:         \branch_decision
Used module:         \branch_predictor
Used module:         $paramod\mux2to1\WIDTH=11
Used module:         \control
Used module:         $paramod\mux2to1\WIDTH=9
Used module:         \ex_mem
Used module:         \ForwardingUnit
Used module:         \id_ex
Used module:         \if_id
Used module:         \imm_gen
Used module:         \mem_wb
Used module:         \regfile
Used module:         \sign_mask_gen
Removed 0 unused modules.

25.3. Executing PROC pass (convert processes to netlists).

25.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

25.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

25.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

25.3.4. Executing PROC_INIT pass (extract init attributes).

25.3.5. Executing PROC_ARST pass (detect async resets in processes).

25.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

25.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

25.3.8. Executing PROC_DFF pass (convert process syncs to FFs).

25.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

25.4. Executing FLATTEN pass (flatten design).
Using template instruction_memory for cells of type instruction_memory.
Using template data_mem for cells of type data_mem.
Using template cpu for cells of type cpu.
Using template mux2to1 for cells of type mux2to1.
Using template if_id for cells of type if_id.
Using template ALUControl for cells of type ALUControl.
Using template control for cells of type control.
Using template $paramod\mux2to1\WIDTH=11 for cells of type $paramod\mux2to1\WIDTH=11.
Using template imm_gen for cells of type imm_gen.
Using template branch_predictor for cells of type branch_predictor.
Using template regfile for cells of type regfile.
Using template sign_mask_gen for cells of type sign_mask_gen.
Using template id_ex for cells of type id_ex.
Using template mem_wb for cells of type mem_wb.
Using template ForwardingUnit for cells of type ForwardingUnit.
Using template dsp_adder for cells of type dsp_adder.
Using template alu for cells of type alu.
Using template $paramod\mux2to1\WIDTH=9 for cells of type $paramod\mux2to1\WIDTH=9.
Using template ex_mem for cells of type ex_mem.
Using template branch_decision for cells of type branch_decision.
Using template program_counter for cells of type program_counter.
Using template adder_dsp for cells of type adder_dsp.
Using template full_adder for cells of type full_adder.
<suppressed ~42 debug messages>
No more expansions possible.
Deleting now unused module $paramod\mux2to1\WIDTH=11.
Deleting now unused module $paramod\mux2to1\WIDTH=9.
Deleting now unused module ALUControl.
Deleting now unused module ForwardingUnit.
Deleting now unused module adder_dsp.
Deleting now unused module alu.
Deleting now unused module branch_decision.
Deleting now unused module branch_predictor.
Deleting now unused module control.
Deleting now unused module cpu.
Deleting now unused module data_mem.
Deleting now unused module dsp_adder.
Deleting now unused module ex_mem.
Deleting now unused module full_adder.
Deleting now unused module id_ex.
Deleting now unused module if_id.
Deleting now unused module imm_gen.
Deleting now unused module instruction_memory.
Deleting now unused module mem_wb.
Deleting now unused module mux2to1.
Deleting now unused module program_counter.
Deleting now unused module regfile.
Deleting now unused module sign_mask_gen.

25.5. Executing TRIBUF pass.

25.6. Executing DEMINOUT pass (demote inout ports to input or output).

25.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

25.9. Executing CHECK pass (checking for obvious problems).
checking module top..
found and reported 0 problems.

25.10. Executing OPT pass (performing simple optimizations).

25.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

25.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

25.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

25.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

25.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

25.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.10.9. Rerunning OPT passes. (Maybe there is more to do..)

25.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

25.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

25.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

25.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.10.16. Finished OPT passes. (There is nothing left to do.)

25.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 23 address bits (of 32) from memory read port top.$techmap\data_mem_inst.$memrd$\data_block$verilog/data_mem.v:261$1037 (data_mem_inst.data_block).
Removed top 23 address bits (of 32) from memory write port top.$techmap\data_mem_inst.$memwr$\data_block$verilog/data_mem.v:0$1042 (data_mem_inst.data_block).
Removed top 24 address bits (of 32) from memory init port top.$techmap\inst_mem.$meminit$\instruction_memory$verilog/instruction_mem.v:0$1069 (inst_mem.instruction_memory).
Removed top 24 address bits (of 32) from memory read port top.$techmap\inst_mem.$memrd$\instruction_memory$verilog/instruction_mem.v:67$1067 (inst_mem.instruction_memory).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$637 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$638 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$639 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$640 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$641 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$642 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$643 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$644 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$645 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$646 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$647 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$648 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$649 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$650 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$651 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$652 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$653 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$654 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$655 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$656 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$657 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$658 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$659 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$660 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$661 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$662 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$663 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$664 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$665 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$666 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$667 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$668 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$669 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$670 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$671 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$672 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$673 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$674 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$675 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$676 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$677 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$678 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$679 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$680 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$681 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$682 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$683 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$684 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$685 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$686 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$687 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$688 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$689 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$690 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$691 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$692 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$693 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$694 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$695 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$696 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$697 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$698 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$699 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$700 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$701 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$702 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$703 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$704 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$705 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$706 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$707 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$708 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$709 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$710 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$711 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$712 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$713 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$714 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$715 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$716 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$717 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$718 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$719 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$720 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$721 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$722 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$723 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$724 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$725 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$726 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$727 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$728 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$729 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$730 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$731 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$732 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$733 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$734 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$735 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$736 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$737 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$738 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$739 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$740 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$741 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$742 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$743 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$744 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$745 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$746 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$747 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$748 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$749 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$750 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$751 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$752 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$753 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$754 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$755 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$756 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$757 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$758 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$759 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$760 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$761 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$762 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$763 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$764 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$765 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$766 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$767 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$768 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$769 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$770 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$771 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$772 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$773 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$774 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$775 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$776 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$777 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$778 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$779 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$780 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$781 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$782 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$783 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$784 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$785 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$786 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$787 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$788 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$789 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$790 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$791 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$792 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$793 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$794 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$795 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$796 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$797 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$798 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$799 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$800 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$801 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$802 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$803 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$804 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$805 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$806 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$807 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$808 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$809 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$810 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$811 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$812 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$813 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$814 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$815 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$816 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$817 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$818 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$819 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$820 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$821 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$822 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$823 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$824 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$825 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$826 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$827 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$828 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$829 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$830 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$831 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$832 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$833 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$834 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$835 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$836 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$837 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$838 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$839 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$840 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$841 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$842 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$843 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$844 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$845 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$846 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$847 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$848 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$849 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$850 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$851 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$852 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$853 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$854 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$855 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$856 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$857 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$858 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$859 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$860 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$861 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$862 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$863 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$864 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$865 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$866 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$867 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$868 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$869 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$870 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$871 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$872 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$873 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$874 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$875 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$876 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$877 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$878 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$879 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$880 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$881 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$882 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$883 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$884 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$885 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$886 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$887 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$888 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$889 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$890 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$891 (processor.branch_predictor_FSM.bht).
Removed top 24 address bits (of 32) from memory init port top.$techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$892 (processor.branch_predictor_FSM.bht).
Removed top 27 address bits (of 32) from memory init port top.$techmap\processor.register_files.$meminit$\regfile$verilog/register_file.v:0$1103 (processor.register_files.regfile).
Removed top 18 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$eq$verilog/data_mem.v:232$1028 ($eq).
Removed top 23 bits (of 32) from FF cell top.$techmap\data_mem_inst.$procdff$1372 ($dff).
Removed top 31 bits (of 32) from FF cell top.$techmap\data_mem_inst.$procdff$1374 ($dff).
Removed cell top.$techmap\data_mem_inst.$procmux$1123 ($mux).
Removed cell top.$techmap\data_mem_inst.$procmux$1125 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$procmux$1164_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$procmux$1169_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$procmux$1170_CMP0 ($eq).
Removed top 19 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:283$1041 ($sub).
Removed top 23 bits (of 32) from port Y of cell top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:283$1041 ($sub).
Removed top 1 bits (of 10) from port A of cell top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:283$1041 ($sub).
Removed top 12 bits (of 13) from port B of cell top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:283$1041 ($sub).
Removed top 4 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$1232 ($pmux).
Removed top 1 bits (of 2) from port B of cell top.$techmap\processor.alu_control.$procmux$1235_CMP0 ($eq).
Removed top 4 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$1258 ($pmux).
Removed top 4 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$1281 ($pmux).
Removed top 3 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$1291 ($pmux).
Removed top 1 bits (of 3) from port B of cell top.$techmap\processor.alu_control.$procmux$1297_CMP0 ($eq).
Removed top 3 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$1307 ($mux).
Removed top 3 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$1319 ($mux).
Removed top 1 bits (of 3) from port B of cell top.$techmap\processor.alu_control.$procmux$1322_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$techmap\processor.alu_control.$procmux$1339_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$1346_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$1347_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$1348_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$1349_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$1351_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$1352_CMP0 ($eq).
Removed top 1 bits (of 32) from mux cell top.$techmap\processor.immediate_generator.$procmux$1114 ($pmux).
Removed top 3 bits (of 4) from port B of cell top.$techmap\processor.immediate_generator.$procmux$1117_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.immediate_generator.$procmux$1118_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.immediate_generator.$procmux$1119_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:176$627 ($add).
Removed top 1 bits (of 2) from FF cell top.$techmap\processor.branch_predictor_FSM.$procdff$1378 ($dff).
Removed top 1 bits (of 2) from FF cell top.$techmap\processor.branch_predictor_FSM.$procdff$1381 ($dff).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1187 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1189 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1191 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1194 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1196 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1198 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1207 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1210 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1212 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1214 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1217 ($mux).
Removed cell top.$techmap\processor.branch_predictor_FSM.$procmux$1219 ($mux).
Removed top 1 bits (of 2) from port B of cell top.$techmap\processor.branch_predictor_FSM.$sub$verilog/branch_predictor.v:179$631 ($sub).
Removed top 31 bits (of 32) from FF cell top.$techmap\processor.register_files.$procdff$1395 ($dff).
Removed cell top.$techmap\processor.register_files.$procmux$1355 ($mux).
Removed cell top.$techmap\processor.register_files.$procmux$1357 ($mux).
Removed top 44 bits (of 117) from FF cell top.$techmap\processor.mem_wb_reg.$procdff$1359 ($dff).
Removed top 3 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:198$12 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:199$13 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:200$14 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:201$15 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:202$16 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:203$17 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:204$18 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:258$65 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:259$66 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\processor.alu_main.$eq$verilog/alu.v:260$67 ($eq).
Removed top 31 bits (of 32) from mux cell top.$techmap\processor.alu_main.$ternary$verilog/alu.v:241$32 ($mux).
Removed top 31 bits (of 32) from mux cell top.$techmap\processor.alu_main.$ternary$verilog/alu.v:241$33 ($mux).
Removed top 46 bits (of 155) from FF cell top.$techmap\processor.ex_mem_reg.$procdff$1360 ($dff).
Removed top 12 bits (of 178) from FF cell top.$techmap\processor.id_ex_reg.$procdff$1361 ($dff).
Removed top 23 bits (of 32) from wire top.$techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:283$961_ADDR[31:0]$1031.
Removed top 23 bits (of 32) from wire top.$techmap\data_mem_inst.$memwr$\data_block$verilog/data_mem.v:283$961_ADDR.
Removed top 23 bits (of 32) from wire top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:261$1038_Y.
Removed top 4 bits (of 7) from wire top.$techmap\processor.alu_control.$10\ALUCtl[6:0].
Removed top 3 bits (of 7) from wire top.$techmap\processor.alu_control.$3\ALUCtl[6:0].
Removed top 3 bits (of 7) from wire top.$techmap\processor.alu_control.$4\ALUCtl[6:0].
Removed top 3 bits (of 7) from wire top.$techmap\processor.alu_control.$5\ALUCtl[6:0].
Removed top 4 bits (of 7) from wire top.$techmap\processor.alu_control.$6\ALUCtl[6:0].
Removed top 31 bits (of 32) from wire top.$techmap\processor.alu_main.$ternary$verilog/alu.v:241$32_Y.
Removed top 31 bits (of 32) from wire top.processor.alu_main.w_slt.
Removed top 12 bits (of 121) from wire top.processor.ex_mem_out.
Removed top 46 bits (of 155) from wire top.processor.ex_mem_reg.data_in.
Removed top 12 bits (of 178) from wire top.processor.id_ex_out.
Removed top 12 bits (of 85) from wire top.processor.mem_wb_out.
Removed top 44 bits (of 117) from wire top.processor.mem_wb_reg.data_in.

25.12. Executing PEEPOPT pass (run peephole optimizers).

25.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 31 unused wires.
<suppressed ~1 debug messages>

25.14. Executing SHARE pass (SAT-based resource sharing).
Found 5 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\processor.alu_main.$sshr$verilog/alu.v:243$36 ($sshr):
    Found 1 activation_patterns using ctrl signal \processor.alu_main.op_sra.
    No candidates found.
  Analyzing resource sharing options for $techmap\processor.alu_main.$shr$verilog/alu.v:242$34 ($shr):
    Found 1 activation_patterns using ctrl signal \processor.alu_main.op_srl.
    No candidates found.
  Analyzing resource sharing options for $techmap\processor.alu_main.$shl$verilog/alu.v:244$38 ($shl):
    Found 1 activation_patterns using ctrl signal \processor.alu_main.op_sll.
    No candidates found.
  Analyzing resource sharing options for $techmap\inst_mem.$memrd$\instruction_memory$verilog/instruction_mem.v:67$1067 ($memrd):
    Found 1 activation_patterns using ctrl signal \processor.inst_mux.select.
    No candidates found.
  Analyzing resource sharing options for $techmap\data_mem_inst.$memrd$\data_block$verilog/data_mem.v:261$1037 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\data_mem_inst.$procmux$1155_CMP.
    No candidates found.

25.15. Executing TECHMAP pass (map to technology primitives).

25.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

25.15.2. Continuing TECHMAP pass.
No more expansions possible.

25.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

25.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

25.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $techmap\processor.alu_main.$add$verilog/alu.v:256$60 ($add).
  creating $macc model for $techmap\processor.alu_main.alu_full_adder.$add$verilog/adder.v:66$10 ($add).
  creating $macc model for $techmap\processor.alu_main.alu_full_adder.$add$verilog/adder.v:66$9 ($add).
  creating $macc model for $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:176$627 ($add).
  creating $macc model for $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:201$632 ($add).
  creating $macc model for $techmap\processor.branch_predictor_FSM.$sub$verilog/branch_predictor.v:179$631 ($sub).
  merging $macc model for $techmap\processor.alu_main.alu_full_adder.$add$verilog/adder.v:66$9 into $techmap\processor.alu_main.alu_full_adder.$add$verilog/adder.v:66$10.
  creating $alu model for $macc $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:201$632.
  creating $alu model for $macc $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:176$627.
  creating $alu model for $macc $techmap\processor.branch_predictor_FSM.$sub$verilog/branch_predictor.v:179$631.
  creating $alu model for $macc $techmap\processor.alu_main.alu_full_adder.$add$verilog/adder.v:66$10.
  creating $alu model for $macc $techmap\processor.alu_main.$add$verilog/alu.v:256$60.
  creating $alu cell for $techmap\processor.alu_main.$add$verilog/alu.v:256$60: $auto$alumacc.cc:485:replace_alu$1768
  creating $alu cell for $techmap\processor.alu_main.alu_full_adder.$add$verilog/adder.v:66$10: $auto$alumacc.cc:485:replace_alu$1771
  creating $alu cell for $techmap\processor.branch_predictor_FSM.$sub$verilog/branch_predictor.v:179$631: $auto$alumacc.cc:485:replace_alu$1774
  creating $alu cell for $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:176$627: $auto$alumacc.cc:485:replace_alu$1777
  creating $alu cell for $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:201$632: $auto$alumacc.cc:485:replace_alu$1780
  created 5 $alu and 0 $macc cells.

25.19. Executing OPT pass (performing simple optimizations).

25.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

25.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

25.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

25.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.19.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \processor.id_ex_reg.data_out [177:166] = 12'xxxxxxxxxxxx to constant driver in module top.
Promoting init spec \processor.mem_wb_reg.data_out [84:73] = 12'xxxxxxxxxxxx to constant driver in module top.
Promoting init spec \processor.ex_mem_reg.data_out [120:109] = 12'xxxxxxxxxxxx to constant driver in module top.
Promoted 3 init specs to constant drivers.

25.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

25.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.19.9. Rerunning OPT passes. (Maybe there is more to do..)

25.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

25.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

25.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

25.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.19.16. Finished OPT passes. (There is nothing left to do.)

25.20. Executing FSM pass (extract and optimize FSM).

25.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.data_mem_inst.state as FSM state register:
    Register has an initialization value.

25.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

25.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

25.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

25.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

25.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

25.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

25.21. Executing OPT pass (performing simple optimizations).

25.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

25.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.21.5. Finished fast OPT passes.

25.22. Executing MEMORY pass.

25.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

25.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\data_mem_inst.$memwr$\data_block$verilog/data_mem.v:0$1042' in module `\top': merged $dff to cell.
Checking cell `$techmap\processor.branch_predictor_FSM.$memwr$\bht$verilog/branch_predictor.v:0$893' in module `\top': merged $dff to cell.
Checking cell `$techmap\processor.branch_predictor_FSM.$memwr$\bht$verilog/branch_predictor.v:0$894' in module `\top': merged $dff to cell.
Checking cell `$techmap\processor.register_files.$memwr$\regfile$verilog/register_file.v:0$1104' in module `\top': merged $dff to cell.
Checking cell `$techmap\data_mem_inst.$memrd$\data_block$verilog/data_mem.v:261$1037' in module `\top': merged data $dff with rd enable to cell.
Checking cell `$techmap\inst_mem.$memrd$\instruction_memory$verilog/instruction_mem.v:67$1067' in module `\top': no (compatible) $dff found.
Checking cell `$techmap\processor.branch_predictor_FSM.$memrd$\bht$verilog/branch_predictor.v:179$630' in module `\top': merged address $dff to cell.
Checking cell `$techmap\processor.branch_predictor_FSM.$memrd$\bht$verilog/branch_predictor.v:205$636' in module `\top': no (compatible) $dff found.
Checking cell `$techmap\processor.register_files.$memrd$\regfile$verilog/register_file.v:104$1091' in module `\top': merged data $dff to cell.
Checking cell `$techmap\processor.register_files.$memrd$\regfile$verilog/register_file.v:105$1092' in module `\top': merged data $dff to cell.

25.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 14 unused cells and 17 unused wires.
<suppressed ~15 debug messages>

25.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory top.processor.branch_predictor_FSM.bht by address:
  New clock domain: posedge \clk_proc
    Port 0 ($techmap\processor.branch_predictor_FSM.$memwr$\bht$verilog/branch_predictor.v:0$893) has addr \processor.branch_predictor_FSM.commit_index.
      Active bits: 11
    Port 1 ($techmap\processor.branch_predictor_FSM.$memwr$\bht$verilog/branch_predictor.v:0$894) has addr \processor.branch_predictor_FSM.commit_index.
      Active bits: 11
      Merging port 0 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11

25.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\data_mem_inst.data_block' in module `\top':
  $techmap\data_mem_inst.$memwr$\data_block$verilog/data_mem.v:0$1042 ($memwr)
  $techmap\data_mem_inst.$memrd$\data_block$verilog/data_mem.v:261$1037 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\inst_mem.instruction_memory' in module `\top':
  $techmap\inst_mem.$meminit$\instruction_memory$verilog/instruction_mem.v:0$1069 ($meminit)
  $techmap\inst_mem.$memrd$\instruction_memory$verilog/instruction_mem.v:67$1067 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\processor.branch_predictor_FSM.bht' in module `\top':
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$637 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$638 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$639 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$640 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$641 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$642 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$643 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$644 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$645 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$646 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$647 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$648 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$649 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$650 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$651 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$652 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$653 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$654 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$655 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$656 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$657 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$658 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$659 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$660 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$661 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$662 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$663 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$664 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$665 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$666 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$667 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$668 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$669 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$670 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$671 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$672 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$673 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$674 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$675 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$676 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$677 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$678 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$679 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$680 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$681 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$682 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$683 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$684 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$685 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$686 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$687 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$688 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$689 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$690 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$691 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$692 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$693 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$694 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$695 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$696 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$697 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$698 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$699 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$700 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$701 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$702 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$703 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$704 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$705 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$706 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$707 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$708 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$709 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$710 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$711 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$712 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$713 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$714 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$715 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$716 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$717 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$718 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$719 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$720 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$721 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$722 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$723 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$724 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$725 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$726 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$727 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$728 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$729 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$730 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$731 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$732 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$733 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$734 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$735 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$736 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$737 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$738 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$739 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$740 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$741 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$742 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$743 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$744 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$745 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$746 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$747 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$748 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$749 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$750 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$751 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$752 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$753 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$754 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$755 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$756 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$757 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$758 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$759 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$760 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$761 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$762 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$763 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$764 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$765 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$766 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$767 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$768 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$769 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$770 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$771 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$772 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$773 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$774 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$775 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$776 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$777 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$778 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$779 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$780 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$781 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$782 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$783 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$784 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$785 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$786 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$787 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$788 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$789 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$790 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$791 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$792 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$793 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$794 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$795 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$796 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$797 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$798 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$799 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$800 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$801 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$802 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$803 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$804 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$805 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$806 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$807 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$808 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$809 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$810 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$811 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$812 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$813 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$814 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$815 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$816 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$817 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$818 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$819 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$820 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$821 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$822 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$823 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$824 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$825 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$826 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$827 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$828 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$829 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$830 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$831 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$832 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$833 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$834 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$835 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$836 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$837 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$838 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$839 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$840 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$841 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$842 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$843 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$844 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$845 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$846 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$847 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$848 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$849 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$850 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$851 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$852 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$853 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$854 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$855 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$856 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$857 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$858 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$859 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$860 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$861 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$862 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$863 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$864 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$865 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$866 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$867 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$868 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$869 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$870 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$871 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$872 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$873 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$874 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$875 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$876 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$877 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$878 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$879 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$880 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$881 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$882 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$883 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$884 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$885 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$886 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$887 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$888 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$889 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$890 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$891 ($meminit)
  $techmap\processor.branch_predictor_FSM.$meminit$\bht$verilog/branch_predictor.v:0$892 ($meminit)
  $techmap\processor.branch_predictor_FSM.$memwr$\bht$verilog/branch_predictor.v:0$894 ($memwr)
  $techmap\processor.branch_predictor_FSM.$memrd$\bht$verilog/branch_predictor.v:179$630 ($memrd)
  $techmap\processor.branch_predictor_FSM.$memrd$\bht$verilog/branch_predictor.v:205$636 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\processor.register_files.regfile' in module `\top':
  $techmap\processor.register_files.$meminit$\regfile$verilog/register_file.v:0$1103 ($meminit)
  $techmap\processor.register_files.$memwr$\regfile$verilog/register_file.v:0$1104 ($memwr)
  $techmap\processor.register_files.$memrd$\regfile$verilog/register_file.v:104$1091 ($memrd)
  $techmap\processor.register_files.$memrd$\regfile$verilog/register_file.v:105$1092 ($memrd)

25.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing top.data_mem_inst.data_block:
  Properties: ports=2 bits=8512 rports=1 wports=1 dbits=32 abits=9 words=266
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=246 dwaste=0 bwaste=3936 waste=3936 efficiency=51
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3936 efficiency=51
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=246 dwaste=0 bwaste=3936 waste=3936 efficiency=51
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=246 dwaste=0 bwaste=3936 waste=3936 efficiency=51
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=246 dwaste=0 bwaste=1968 waste=1968 efficiency=51
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=1968 efficiency=51
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=758 dwaste=0 bwaste=3032 waste=3032 efficiency=25
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3032 efficiency=25
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1782 dwaste=0 bwaste=3564 waste=3564 efficiency=12
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3564 efficiency=12
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=246 dwaste=0 bwaste=1968 waste=1968 efficiency=51
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=758 dwaste=0 bwaste=3032 waste=3032 efficiency=25
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1782 dwaste=0 bwaste=3564 waste=3564 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=246 dwaste=0 bwaste=1968 waste=1968 efficiency=51
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=758 dwaste=0 bwaste=3032 waste=3032 efficiency=25
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1782 dwaste=0 bwaste=3564 waste=3564 efficiency=12
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=12, cells=16, acells=1
    Efficiency for rule 4.2: efficiency=25, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=51, cells=4, acells=1
    Efficiency for rule 1.1: efficiency=51, cells=4, acells=2
    Selected rule 4.1 with efficiency 51.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: data_mem_inst.data_block.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: data_mem_inst.data_block.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: data_mem_inst.data_block.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: data_mem_inst.data_block.3.0.0
Processing top.inst_mem.instruction_memory:
  Properties: ports=1 bits=5696 rports=1 wports=0 dbits=32 abits=8 words=178
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=78 dwaste=0 bwaste=1248 waste=1248 efficiency=69
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=334 dwaste=0 bwaste=2672 waste=2672 efficiency=34
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=846 dwaste=0 bwaste=3384 waste=3384 efficiency=17
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1870 dwaste=0 bwaste=3740 waste=3740 efficiency=8
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  No acceptable bram resources found.
Processing top.processor.branch_predictor_FSM.bht:
  Properties: ports=3 bits=512 rports=2 wports=1 dbits=2 abits=8 words=256
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=14 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Bram port A1.2 has incompatible clock type.
        Failed to map read port #1.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=6 bwaste=3584 waste=3584 efficiency=12
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Bram port A1.2 has incompatible clock type.
        Failed to map read port #1.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=768 dwaste=2 bwaste=3584 waste=3584 efficiency=12
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Bram port A1.2 has incompatible clock type.
        Failed to map read port #1.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1792 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain !~async~.
        Bram port A1.2 has incompatible clock type.
        Failed to map read port #1.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  No acceptable bram resources found.
Processing top.processor.register_files.regfile:
  Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7168 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7680 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7936 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 2 rules:
    Efficiency for rule 4.1: efficiency=3, cells=8, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
    Selected rule 1.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk_proc.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk_proc.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk_proc.
        Mapped to bram port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: processor.register_files.regfile.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: processor.register_files.regfile.0.0.1
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: processor.register_files.regfile.1.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: processor.register_files.regfile.1.0.1

25.25. Executing TECHMAP pass (map to technology primitives).

25.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

25.25.2. Continuing TECHMAP pass.
Using template $paramod$7c01128c47821c00041f4149da79e5374eeb90af\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=9\CFG_DBITS=8\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$66c3fa288a62dc560ce3ddd26d81551ab195105f\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$960485841f660243af450c42d6b4560e3d9823f2\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~146 debug messages>

25.26. Executing ICE40_BRAMINIT pass.

25.27. Executing OPT pass (performing simple optimizations).

25.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~72 debug messages>

25.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

25.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

25.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 204 unused wires.
<suppressed ~3 debug messages>

25.27.5. Finished fast OPT passes.

25.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \inst_mem.instruction_memory in module \top:
  created 178 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 255 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory cell \processor.branch_predictor_FSM.bht in module \top:
  created 256 $dff cells and 0 static cells of width 2.
  read interface: 1 $dff and 510 $mux cells.
  write interface: 256 write mux blocks.

25.29. Executing OPT pass (performing simple optimizations).

25.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~176 debug messages>

25.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

25.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~307 debug messages>

25.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008:
      Old ports: A={ 24'000000000000000000000000 \data_mem_inst.word_buf [15:8] }, B={ \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15:8] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [15], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [31:9] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [7:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] \data_mem_inst.word_buf [15:8] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010:
      Old ports: A={ 24'000000000000000000000000 \data_mem_inst.word_buf [7:0] }, B={ \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7:0] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [7], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [31:9] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [7:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] \data_mem_inst.word_buf [7:0] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013:
      Old ports: A={ 24'000000000000000000000000 \data_mem_inst.word_buf [31:24] }, B={ \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31:24] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [31], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [31:9] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [7:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] \data_mem_inst.word_buf [31:24] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015:
      Old ports: A={ 24'000000000000000000000000 \data_mem_inst.word_buf [23:16] }, B={ \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23:16] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [23], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [31:9] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [7:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] \data_mem_inst.word_buf [23:16] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018:
      Old ports: A={ 16'0000000000000000 \data_mem_inst.word_buf [31:16] }, B={ \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31:16] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [31], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [31:17] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [15:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] \data_mem_inst.word_buf [31:16] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020:
      Old ports: A={ 16'0000000000000000 \data_mem_inst.word_buf [15:0] }, B={ \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15:0] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [15], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [31:17] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [15:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] \data_mem_inst.word_buf [15:0] }
    Consolidated identical input bits for $mux cell $techmap\processor.alu_control.$procmux$1258:
      Old ports: A=3'010, B=3'110, Y=$techmap\processor.alu_control.$8\ALUCtl[6:0] [2:0]
      New ports: A=1'0, B=1'1, Y=$techmap\processor.alu_control.$8\ALUCtl[6:0] [2]
      New connections: $techmap\processor.alu_control.$8\ALUCtl[6:0] [1:0] = 2'10
    Consolidated identical input bits for $pmux cell $techmap\processor.alu_control.$procmux$1267:
      Old ports: A={ 4'0000 $techmap\processor.alu_control.$8\ALUCtl[6:0] [2:0] }, B={ 25'0000101000011100010000000 $auto$wreduce.cc:460:run$1760 [2:0] 14'00000010000000 }, Y=$techmap\processor.alu_control.$7\ALUCtl[6:0]
      New ports: A={ 1'0 $techmap\processor.alu_control.$8\ALUCtl[6:0] [2:0] }, B={ 13'0101011110000 $auto$wreduce.cc:460:run$1760 [2:0] 8'00010000 }, Y=$techmap\processor.alu_control.$7\ALUCtl[6:0] [3:0]
      New connections: $techmap\processor.alu_control.$7\ALUCtl[6:0] [6:4] = 3'000
    Consolidated identical input bits for $mux cell $techmap\processor.alu_control.$procmux$1281:
      Old ports: A=3'011, B=3'100, Y=$auto$wreduce.cc:460:run$1760 [2:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:460:run$1760 [2] $auto$wreduce.cc:460:run$1760 [0] }
      New connections: $auto$wreduce.cc:460:run$1760 [1] = $auto$wreduce.cc:460:run$1760 [0]
    Consolidated identical input bits for $mux cell $techmap\processor.alu_control.$procmux$1307:
      Old ports: A=4'1111, B=4'0010, Y=$auto$wreduce.cc:460:run$1758 [3:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:460:run$1758 [0]
      New connections: $auto$wreduce.cc:460:run$1758 [3:1] = { $auto$wreduce.cc:460:run$1758 [0] $auto$wreduce.cc:460:run$1758 [0] 1'1 }
    Consolidated identical input bits for $mux cell $techmap\processor.alu_control.$procmux$1319:
      Old ports: A=4'1111, B=4'0010, Y=$auto$wreduce.cc:460:run$1757 [3:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:460:run$1757 [0]
      New connections: $auto$wreduce.cc:460:run$1757 [3:1] = { $auto$wreduce.cc:460:run$1757 [0] $auto$wreduce.cc:460:run$1757 [0] 1'1 }
    Consolidated identical input bits for $pmux cell $techmap\processor.alu_control.$procmux$1334:
      Old ports: A=7'0001111, B=42'001011001001100110110100011010101101100110, Y=$techmap\processor.alu_control.$2\ALUCtl[6:0]
      New ports: A=4'0001, B=24'001001000110100010101100, Y={ $techmap\processor.alu_control.$2\ALUCtl[6:0] [6:4] $techmap\processor.alu_control.$2\ALUCtl[6:0] [0] }
      New connections: $techmap\processor.alu_control.$2\ALUCtl[6:0] [3:1] = { $techmap\processor.alu_control.$2\ALUCtl[6:0] [0] 2'11 }
    Consolidated identical input bits for $mux cell $techmap\processor.cont_mux.$ternary$verilog/mux2to1.v:51$1110:
      Old ports: A={ \processor.control_unit.Jalr \processor.control_unit.ALUSrc \processor.control_unit.Lui \processor.control_unit.Auipc \processor.control_unit.Branch \processor.control_unit.MemRead \processor.control_unit.MemWrite 1'0 \processor.control_unit.RegWrite \processor.control_unit.MemtoReg \processor.control_unit.Jump }, B=11'00000000000, Y=\processor.cont_mux.out
      New ports: A={ \processor.control_unit.Jalr \processor.control_unit.ALUSrc \processor.control_unit.Lui \processor.control_unit.Auipc \processor.control_unit.Branch \processor.control_unit.MemRead \processor.control_unit.MemWrite \processor.control_unit.RegWrite \processor.control_unit.MemtoReg \processor.control_unit.Jump }, B=10'0000000000, Y={ \processor.cont_mux.out [10:4] \processor.cont_mux.out [2:0] }
      New connections: \processor.cont_mux.out [3] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1011:
      Old ports: A=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y, B=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y, Y=\data_mem_inst.out1
      New ports: A={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1010_Y [8] \data_mem_inst.word_buf [7:0] }, B={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:204$1008_Y [8] \data_mem_inst.word_buf [15:8] }, Y=\data_mem_inst.out1 [8:0]
      New connections: \data_mem_inst.out1 [31:9] = { \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1016:
      Old ports: A=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y, B=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y, Y=\data_mem_inst.out2
      New ports: A={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1015_Y [8] \data_mem_inst.word_buf [23:16] }, B={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$1013_Y [8] \data_mem_inst.word_buf [31:24] }, Y=\data_mem_inst.out2 [8:0]
      New connections: \data_mem_inst.out2 [31:9] = { \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1021:
      Old ports: A=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y, B=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y, Y=\data_mem_inst.out3
      New ports: A={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1020_Y [16] \data_mem_inst.word_buf [15:0] }, B={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$1018_Y [16] \data_mem_inst.word_buf [31:16] }, Y=\data_mem_inst.out3 [16:0]
      New connections: \data_mem_inst.out3 [31:17] = { \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:209$1023:
      Old ports: A=\data_mem_inst.out1, B=\data_mem_inst.out2, Y=\data_mem_inst.out5
      New ports: A=\data_mem_inst.out1 [8:0], B=\data_mem_inst.out2 [8:0], Y=\data_mem_inst.out5 [8:0]
      New connections: \data_mem_inst.out5 [31:9] = { \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] }
  Optimizing cells in module \top.
Performed a total of 17 changes.

25.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

25.29.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $memory\inst_mem.instruction_memory[177]$2213 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[176]$2211 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[175]$2209 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[174]$2207 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[173]$2205 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[172]$2203 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[171]$2201 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[170]$2199 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[169]$2197 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[168]$2195 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[167]$2193 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[166]$2191 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[165]$2189 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[164]$2187 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[163]$2185 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[162]$2183 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[161]$2181 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[160]$2179 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[159]$2177 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[158]$2175 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[157]$2173 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[156]$2171 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[155]$2169 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[154]$2167 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[153]$2165 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[152]$2163 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[151]$2161 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[150]$2159 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[149]$2157 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[148]$2155 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[147]$2153 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[146]$2151 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[145]$2149 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[144]$2147 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[143]$2145 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[142]$2143 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[141]$2141 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[140]$2139 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[139]$2137 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[138]$2135 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[137]$2133 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[136]$2131 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[135]$2129 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[134]$2127 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[133]$2125 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[132]$2123 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[131]$2121 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[130]$2119 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[129]$2117 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[128]$2115 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[127]$2113 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[126]$2111 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[125]$2109 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[124]$2107 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[123]$2105 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[122]$2103 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[121]$2101 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[120]$2099 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[119]$2097 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[118]$2095 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[117]$2093 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[116]$2091 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[115]$2089 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[114]$2087 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[113]$2085 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[112]$2083 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[111]$2081 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[110]$2079 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[109]$2077 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[108]$2075 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[107]$2073 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[106]$2071 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[105]$2069 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[104]$2067 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[103]$2065 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[102]$2063 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[101]$2061 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[100]$2059 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[99]$2057 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[98]$2055 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[97]$2053 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[96]$2051 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[95]$2049 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[94]$2047 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[93]$2045 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[92]$2043 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[91]$2041 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[90]$2039 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[89]$2037 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[88]$2035 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[87]$2033 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[86]$2031 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[85]$2029 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[84]$2027 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[83]$2025 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[82]$2023 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[81]$2021 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[80]$2019 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[79]$2017 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[78]$2015 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[77]$2013 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[76]$2011 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[75]$2009 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[74]$2007 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[73]$2005 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[72]$2003 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[71]$2001 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[70]$1999 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[69]$1997 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[68]$1995 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[67]$1993 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[66]$1991 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[65]$1989 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[64]$1987 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[63]$1985 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[62]$1983 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[61]$1981 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[60]$1979 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[59]$1977 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[58]$1975 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[57]$1973 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[56]$1971 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[55]$1969 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[54]$1967 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[53]$1965 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[52]$1963 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[51]$1961 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[50]$1959 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[49]$1957 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[48]$1955 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[47]$1953 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[46]$1951 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[45]$1949 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[44]$1947 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[43]$1945 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[42]$1943 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[41]$1941 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[40]$1939 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[39]$1937 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[38]$1935 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[37]$1933 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[36]$1931 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[35]$1929 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[34]$1927 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[33]$1925 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[32]$1923 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[31]$1921 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[30]$1919 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[29]$1917 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[28]$1915 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[27]$1913 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[26]$1911 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[25]$1909 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[24]$1907 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[23]$1905 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[22]$1903 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[21]$1901 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[20]$1899 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[19]$1897 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[18]$1895 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[17]$1893 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[16]$1891 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[15]$1889 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[14]$1887 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[13]$1885 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[12]$1883 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[11]$1881 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[10]$1879 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[9]$1877 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[8]$1875 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[7]$1873 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[6]$1871 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[5]$1869 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[4]$1867 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[3]$1865 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[2]$1863 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[1]$1861 ($dff) from module top.
Removing $memory\inst_mem.instruction_memory[0]$1859 ($dff) from module top.
Replaced 178 DFF cells.

25.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1287 unused wires.
<suppressed ~1 debug messages>

25.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~125 debug messages>

25.29.9. Rerunning OPT passes. (Maybe there is more to do..)

25.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~309 debug messages>

25.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][44]$2536:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][6][44]$a$2537, B=32'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375
      New ports: A=1'0, B=1'x, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0]
      New connections: $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [31:1] = { $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0] }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][0]$2596:
      Old ports: A=19, B=4407, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][0]$a$2405
      New ports: A=1'0, B=1'1, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][0]$a$2405 [2]
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][0]$a$2405 [31:3] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$a$2405 [1:0] } = { 19'0000000000000000000 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$a$2405 [2] 3'000 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$a$2405 [2] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$a$2405 [2] 4'1011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][10]$2626:
      Old ports: A=32'11111110110001000010011000000011, B=1443347, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420
      New ports: A=2'10, B=2'01, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [4] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [31:14] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [12:5] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [3:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [13] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [13] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [4] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [4] 15'000001100000011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][11]$2629:
      Old ports: A=32'11111110110001000010011000100011, B=32'11111110110001000010010110000011, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][5]$b$2421
      New ports: A=2'01, B=2'10, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][5]$b$2421 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$b$2421 [5] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][5]$b$2421 [31:8] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$b$2421 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$b$2421 [4:0] } = { 22'1111111011000100001001 $memory\inst_mem.instruction_memory$rdmux[0][6][5]$b$2421 [5] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$b$2421 [7] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][12]$2632:
      Old ports: A=4195895, B=32'11111100110001011100101011100011, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423
      New ports: A=2'01, B=2'10, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [31:7] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [5:3] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] 4'1000 $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [2] 2'10 $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [2] 3'011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][13]$2635:
      Old ports: A=32'11111101100001000010010110000011, B=32'11111101110001000010011000000011, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][6]$b$2424
      New ports: A=2'01, B=2'10, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][6]$b$2424 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$b$2424 [7] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][6]$b$2424 [31:10] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$b$2424 [8] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$b$2424 [6:0] } = { 9'111111011 $memory\inst_mem.instruction_memory$rdmux[0][6][6]$b$2424 [9] 12'000100001001 $memory\inst_mem.instruction_memory$rdmux[0][6][6]$b$2424 [7] 7'0000011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][14]$2638:
      Old ports: A=362003, B=32'11111111111101100100010110010011, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426
      New ports: A=2'10, B=2'01, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [31:10] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [8] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [6:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] 4'0001 $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] 7'0010011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][15]$2641:
      Old ports: A=32'11111110010001000010011000000011, B=11935779, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427
      New ports: A=2'10, B=2'01, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [5] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [31:10] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [8:6] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [4:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [9] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [5] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [5] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [5] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [5] 6'000100 $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [9] 8'00000011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][16]$2644:
      Old ports: A=32'11111110000001000010010000100011, B=41943151, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429
      New ports: A=2'10, B=2'01, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [10] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [31:11] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [9:3] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [10] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [10] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [10] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [10] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [10] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [10] 2'10 $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [2] 4'0000 $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [10] 4'0000 $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [10] 5'00000 $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [2] 2'10 $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][17]$2647:
      Old ports: A=32'11111110010001000010011000000011, B=402947, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430
      New ports: A=2'10, B=2'01, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [17] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [31:23] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [21:18] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [16:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [22] 23'00000100010011000000011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][18]$2650:
      Old ports: A=394899, B=1811, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][9]$a$2432
      New ports: A=2'01, B=2'10, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][9]$a$2432 [8:7]
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][9]$a$2432 [31:9] $memory\inst_mem.instruction_memory$rdmux[0][6][9]$a$2432 [6:0] } = { 13'0000000000000 $memory\inst_mem.instruction_memory$rdmux[0][6][9]$a$2432 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][9]$a$2432 [7] 15'000000110010011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][19]$2653:
      Old ports: A=32'11111100110101000010110000100011, B=32'11111100111001000010111000100011, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][9]$b$2433
      New ports: A=2'10, B=2'01, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][9]$b$2433 [20] $memory\inst_mem.instruction_memory$rdmux[0][6][9]$b$2433 [9] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][9]$b$2433 [31:21] $memory\inst_mem.instruction_memory$rdmux[0][6][9]$b$2433 [19:10] $memory\inst_mem.instruction_memory$rdmux[0][6][9]$b$2433 [8:0] } = { 10'1111110011 $memory\inst_mem.instruction_memory$rdmux[0][6][9]$b$2433 [9] 19'0100001011000100011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][1]$2599:
      Old ports: A=1073807635, B=4194415, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406
      New ports: A=2'10, B=2'01, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [4] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [31:5] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [3] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [1:0] } = { 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [4] 7'0000000 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [2] 5'00000 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [4] 7'0000000 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [4] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [2] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [2] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][20]$2656:
      Old ports: A=32'11111110100001000010011000000011, B=1443347, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435
      New ports: A=2'10, B=2'01, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [4] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [31:14] $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [12:5] $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [3:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [13] $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [13] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [13] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [4] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [4] 15'000001100000011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][21]$2659:
      Old ports: A=32'11111110110001000010010000100011, B=32'11111110100001000010010110000011, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][10]$b$2436
      New ports: A=2'01, B=2'10, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][10]$b$2436 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][10]$b$2436 [5] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][10]$b$2436 [31:8] $memory\inst_mem.instruction_memory$rdmux[0][6][10]$b$2436 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][10]$b$2436 [4:0] } = { 9'111111101 $memory\inst_mem.instruction_memory$rdmux[0][6][10]$b$2436 [5] 13'0001000010010 $memory\inst_mem.instruction_memory$rdmux[0][6][10]$b$2436 [7] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][22]$2662:
      Old ports: A=4195895, B=32'11111100110001011100101011100011, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438
      New ports: A=2'01, B=2'10, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [31:7] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [5:3] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] 4'1000 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [2] 2'10 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [2] 3'011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][23]$2665:
      Old ports: A=32'11110110110111111111000001101111, B=0, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439
      New ports: A=1'1, B=1'0, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0]
      New connections: $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [31:1] = { $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] 5'00000 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][2]$2602:
      Old ports: A=32'11111101000000010000000100010011, B=42018339, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408
      New ports: A=2'01, B=2'10, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [5:4]
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [31:6] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [3:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [4] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [4] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [4] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [4] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [4] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [4] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [5:4] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [5] 9'000000100 $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [5] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [5] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [5:4] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][3]$2605:
      Old ports: A=50398227, B=9783, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409
      New ports: A=2'10, B=2'01, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [16] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [31:17] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [15:3] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [1:0] } = { 6'000000 $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [16] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [16] 9'000000000 $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [2] 3'001 $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [2] 3'000 $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [2] 4'1011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][4]$2608:
      Old ports: A=32'11111110110001000010001000100011, B=32'11111110010001000010011000000011, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][2]$a$2411
      New ports: A=2'01, B=2'10, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][2]$a$2411 [10] $memory\inst_mem.instruction_memory$rdmux[0][6][2]$a$2411 [5] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][2]$a$2411 [31:11] $memory\inst_mem.instruction_memory$rdmux[0][6][2]$a$2411 [9:6] $memory\inst_mem.instruction_memory$rdmux[0][6][2]$a$2411 [4:0] } = { 8'11111110 $memory\inst_mem.instruction_memory$rdmux[0][6][2]$a$2411 [5] 21'100010000100100000011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][5]$2611:
      Old ports: A=267388307, B=11935779, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412
      New ports: A=2'01, B=2'10, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [5:4]
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [31:6] $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [3:0] } = { 4'0000 $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [4] $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [4] $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [4] $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [4] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [4] 3'110 $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [5] $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [5] 3'000 $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [5] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [4] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [4] $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [4] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][6]$2614:
      Old ports: A=32'11111110000001000010011000100011, B=41943151, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414
      New ports: A=2'10, B=2'01, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [31:10] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [8:3] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [9] 2'10 $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [2] 4'0000 $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [9] 4'0000 $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [9] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [9] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [2] 2'10 $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][7]$2617:
      Old ports: A=32'11111110010001000010011000000011, B=402947, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415
      New ports: A=2'10, B=2'01, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [17] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [31:23] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [21:18] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [16:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [22] 23'00000100010011000000011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][8]$2620:
      Old ports: A=395155, B=2067, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417
      New ports: A=2'01, B=2'10, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [11] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [7] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [31:12] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [10:8] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [6:0] } = { 13'0000000000000 $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [7] 5'00000 $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [7] 7'0010011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][7][9]$2623:
      Old ports: A=32'11111100111101000010110000100011, B=32'11111101000001000010111000100011, Y=$memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418
      New ports: A=2'10, B=2'01, Y={ $memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418 [20] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418 [9] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418 [31:21] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418 [19:10] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418 [8:0] } = { 7'1111110 $memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418 [20] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418 [20] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418 [20] 19'0100001011000100011 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][5][22]$2374:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375, B=32'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Y=$memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294
      New ports: A=$memory\inst_mem.instruction_memory$rdmux[0][5][22]$a$2375 [0], B=1'x, Y=$memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0]
      New connections: $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [31:1] = { $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] $memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0] }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][0]$2404:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][6][0]$a$2405, B=$memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309
      New ports: A={ 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$a$2405 [2] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$a$2405 [2] 2'10 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$a$2405 [2] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [4] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [4] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [4] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [2] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [2] }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [16] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [12] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [4:2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [31:17] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [15:13] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [11:9] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [7:5] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [1:0] } = { 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [16] 7'0000000 $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [3] 12'000000000000 $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [3:2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][10]$2434:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435, B=$memory\inst_mem.instruction_memory$rdmux[0][6][10]$b$2436, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [13] 3'100 $memory\inst_mem.instruction_memory$rdmux[0][6][10]$a$2435 [4] }, B={ 2'10 $memory\inst_mem.instruction_memory$rdmux[0][6][10]$b$2436 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][10]$b$2436 [5] 1'0 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [5:4] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [31:14] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [12:10] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [3:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [13] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [5] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [4] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [4] 6'000001 $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [7] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][11]$2437:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438, B=$memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325
      New ports: A={ 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [2] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$a$2438 [2] 1'1 }, B={ 2'00 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] $memory\inst_mem.instruction_memory$rdmux[0][6][11]$b$2439 [0] }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [7:6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [4:2] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [0] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [31:10] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [1] } = { $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [7:6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [3] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [0] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [3] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [3] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [3] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [3] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [3] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [4] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [0] }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][1]$2407:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408, B=$memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [5:4] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [5] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [5:4] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$a$2408 [5:4] 1'0 }, B={ $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [16] $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [16] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [16] 2'10 $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [2] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][1]$b$2409 [2] }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [25:23] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [16] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [10] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [5:4] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [31:26] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [22:17] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [15:11] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [7:6] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [3] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [8] 8'00000000 $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [5] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [5] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][2]$2410:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][6][2]$a$2411, B=$memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][6][2]$a$2411 [5] 4'1001 $memory\inst_mem.instruction_memory$rdmux[0][6][2]$a$2411 [10] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][2]$a$2411 [5] 1'0 }, B={ 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [4] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [5] $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [5:4] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][2]$b$2412 [5:4] }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [23:22] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [20] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [10:9] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [5:4] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [31:24] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [21] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [19:18] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [16:14] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [12:11] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [8:6] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [3:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [4] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [20] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [13] 5'00000 $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [4] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [4] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][3]$2413:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414, B=$memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [9] 3'100 $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [9] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][3]$a$2414 [2] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][3]$b$2415 [17] 3'100 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [26:25] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [31:27] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [24:23] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [21:18] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [16:10] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [8:6] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [4:3] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [26] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [26] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [26] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [26] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [26] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [2] 3'000 $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [9] 3'000 $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [9] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [9] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [2] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][4]$2416:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417, B=$memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315
      New ports: A={ 2'00 $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [11] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$a$2417 [7] 2'01 }, B={ $memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418 [20] 2'11 $memory\inst_mem.instruction_memory$rdmux[0][6][4]$b$2418 [9] 3'010 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [24] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [20] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [11:9] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [5:4] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [31:25] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [23:21] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [19:12] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [3:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [5] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [20] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [20] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [20] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [10] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [7] 3'000 $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [5] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [7] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][5]$2419:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420, B=$memory\inst_mem.instruction_memory$rdmux[0][6][5]$b$2421, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [13] 3'100 $memory\inst_mem.instruction_memory$rdmux[0][6][5]$a$2420 [4] }, B={ 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][5]$b$2421 [5] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$b$2421 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][5]$b$2421 [5] 1'0 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [5:4] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [31:14] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [12:10] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [3:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [13] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [13] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [4] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [4] 6'000001 $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [7] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][6]$2422:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423, B=$memory\inst_mem.instruction_memory$rdmux[0][6][6]$b$2424, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [2] 2'10 $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [6] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][6]$a$2423 [2] }, B={ 3'111 $memory\inst_mem.instruction_memory$rdmux[0][6][6]$b$2424 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$b$2424 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][6]$b$2424 [7] 3'000 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [10:5] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [31:19] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [17:14] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [12:11] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [4:3] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [18] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [9] 4'0000 $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [6] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [2] 3'011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][7]$2425:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426, B=$memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [9] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$a$2426 [7] 2'01 }, B={ $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [5] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [9] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][7]$b$2427 [5] 1'0 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [15] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [10:9] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [5:4] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [31:23] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [21:18] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [16] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [14] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [12:11] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [3:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [17] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [15] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [7] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [7] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][8]$2428:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429, B=$memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [10] 3'100 $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [10] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][6][8]$a$2429 [2] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][8]$b$2430 [17] 4'1100 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [26:25] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [10:9] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [31:27] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [24:23] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [21:18] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [16:11] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [8:6] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [4:3] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [26] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [26] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [26] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [26] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [26] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [2] 3'000 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [10] 3'000 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [10] 4'0000 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [2] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][9]$2431:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][6][9]$a$2432, B=$memory\inst_mem.instruction_memory$rdmux[0][6][9]$b$2433, Y=$memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322
      New ports: A={ 2'00 $memory\inst_mem.instruction_memory$rdmux[0][6][9]$a$2432 [7] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][9]$a$2432 [8:7] 2'01 }, B={ $memory\inst_mem.instruction_memory$rdmux[0][6][9]$b$2433 [9] $memory\inst_mem.instruction_memory$rdmux[0][6][9]$b$2433 [20] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][9]$b$2433 [9] 4'0010 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [21:20] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [9:7] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5:4] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [31:22] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [19] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [17:10] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [3:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [7] 3'000 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] 6'100011 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][4][11]$2293:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294, B=32'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Y=$memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253
      New ports: A=$memory\inst_mem.instruction_memory$rdmux[0][4][11]$a$2294 [0], B=1'x, Y=$memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0]
      New connections: $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [31:1] = { $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] $memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0] }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][5][0]$2308:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309, B=$memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310, Y=$memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [16] 4'0000 $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [16] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [12] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [2] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$a$2309 [4:2] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [25:23] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [16] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [10] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [8] $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [5:4] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][0]$b$2310 [2] }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [30] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [26:23] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [16] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [12] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [10:8] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [5:2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [31] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [29:27] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [22:17] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [15:13] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [11] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [7:6] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [3] 7'0000000 $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [9] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [3] 2'11 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][5][1]$2311:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312, B=$memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313, Y=$memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [23:22] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [20] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [10:9] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$a$2312 [5:4] 1'0 }, B={ $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [26] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [26:25] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [2] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [22] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [5] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [2] }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [28] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [26:25] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [23:22] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [20] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [17] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [10:9] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [5:4] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [31:29] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [27] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [24] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [21] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [19:18] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [16:14] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [12:11] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [8:6] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [3] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [28] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [28] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [28] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [4] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [20] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [13] 5'00000 $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [4] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [4] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [2] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][5][2]$2314:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315, B=$memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316, Y=$memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264
      New ports: A={ 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [24] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [20] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [20] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [20] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [11:9] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$a$2315 [5:4] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [13] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [13] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [4] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [4] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [13] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][2]$b$2316 [5:4] }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [25:24] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [22:20] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [17] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [11:9] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [7] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [5:4] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [31:26] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [23] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [19:18] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [16:14] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [12] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [8] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [6] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [3:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [22] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [10] 4'0000 $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [7] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][5][3]$2317:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318, B=$memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319, Y=$memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [18] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [18] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [10:5] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [2] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$a$2318 [2] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [22] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [15] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [10:9] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [7] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [5:4] 1'0 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [26:22] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [18:17] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [15:13] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [10:4] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [31:27] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [21:19] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [16] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [12:11] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [3] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [17] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [17] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [15] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [6] 3'011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][5][4]$2320:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321, B=$memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322, Y=$memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [26:25] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [2] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [22] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [10] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [10] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [10:9] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [5] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [2] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [21:20] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [9:7] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$b$2322 [5:4] 1'0 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [26:25] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [23:20] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [18:17] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [11:7] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [5:4] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [31:27] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [24] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [19] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [16:14] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [12] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [6] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [3] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [26] 6'000000 $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [2] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][5][5]$2323:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324, B=$memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325, Y=$memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [13] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [4] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [13] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [7] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][5]$a$2324 [5:4] 3'001 }, B={ $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [7:6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [3] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [3] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [7] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [4] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [9] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [7:6] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [0] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [4:2] $memory\inst_mem.instruction_memory$rdmux[0][5][5]$b$2325 [0] }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [27] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [23] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [18:17] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [11:2] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [0] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [31:28] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [26:24] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [22:19] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [16:14] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [12] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [1] } = { $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [23] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [23] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [23] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [23] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [23] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [13] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [5] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [17] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [3] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [6] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [6] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [6] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [3] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][3][5]$2251:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][3][5]$a$2252, B=$memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253, Y=$memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232
      New ports: A=1'0, B=$memory\inst_mem.instruction_memory$rdmux[0][3][5]$b$2253 [0], Y=$memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0]
      New connections: $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [31:1] = { $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] $memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0] }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][4][0]$2260:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261, B=$memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262, Y=$memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [30] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [26:23] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [3] 3'000 $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [16] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [9] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [12] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [10:8] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][4][0]$a$2261 [5:2] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [28] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [28] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [26:25] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [4] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [23:22] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [20] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [17] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [13] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [10:9] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [4] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [4] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [5:4] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [2] $memory\inst_mem.instruction_memory$rdmux[0][4][0]$b$2262 [2] }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [30] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [28] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [26:22] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [20] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [18:16] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [13:12] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [10:7] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [5:2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [31] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [29] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [27] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [21] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [19] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [15:14] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [11] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [6] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [28] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [28] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [26] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [20] 4'0000 $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [3] 2'11 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][4][1]$2263:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264, B=$memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265, Y=$memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [25:24] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [22] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [22:20] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [10] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [17] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [11:9] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [7] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [7] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][4][1]$a$2264 [5:4] 1'0 }, B={ $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [26:22] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [17] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [17] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [18:17] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [15:13] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [6] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [10:4] $memory\inst_mem.instruction_memory$rdmux[0][4][1]$b$2265 [2] }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [26:20] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [18:17] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [15:13] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [11:4] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [31:27] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [19] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [16] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [12] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [3] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [26] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [26] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [26] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [26] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [26] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [15] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][4][2]$2266:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267, B=$memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268, Y=$memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [26] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [26:25] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [23:20] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [18:17] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [13] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [11:7] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [2] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [5:4] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [2] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$a$2267 [2] 1'1 }, B={ $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [27] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [23] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [23] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [5] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [17] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [18:17] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [6] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [13] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [3] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [11:2] $memory\inst_mem.instruction_memory$rdmux[0][4][2]$b$2268 [0] }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [27:25] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [23:20] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [18:17] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [14:2] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [0] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [31:28] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [24] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [19] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [16:15] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [1] } = { $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [26] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [26] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [26] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [26] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [12] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [14] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [14] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][2][2]$2230:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][2][2]$a$2231, B=$memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232, Y=$memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222
      New ports: A=1'0, B=$memory\inst_mem.instruction_memory$rdmux[0][2][2]$b$2232 [0], Y=$memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0]
      New connections: $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [31:1] = { $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] $memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0] }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][3][0]$2236:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237, B=$memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238, Y=$memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [30] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [28] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [26:22] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [20] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [20] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [18:16] 2'00 $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [13:12] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [10:7] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [3] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$a$2237 [5:2] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [26] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [26] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [26:20] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [18:17] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [15] $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [15:13] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [11:4] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][3][0]$b$2238 [2] }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [30] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [28] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [26:20] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [18:2] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [31] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [29] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [27] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [19] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [1:0] } = { $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [28] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [28] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [26] 3'011 }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][3][1]$2239:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240, B=0, Y=$memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [27:25] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [23:20] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [18:17] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [14:2] $memory\inst_mem.instruction_memory$rdmux[0][3][1]$a$2240 [0] }, B=23'00000000000000000000000, Y={ $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [27:25] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [23:20] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [18:17] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [14:2] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [0] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [31:28] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [24] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [19] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [16:15] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [1] } = { $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [26] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [26] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [26] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [26] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [12] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [14] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [14] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][1][1]$2221:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222, B=32'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Y=$memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217
      New ports: A=$memory\inst_mem.instruction_memory$rdmux[0][1][1]$a$2222 [0], B=1'x, Y=$memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0]
      New connections: $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [31:1] = { $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][2][0]$2224:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225, B=$memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226, Y=$memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [30] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [28] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [26] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [26:20] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][2][0]$a$2225 [18:2] 1'1 }, B={ $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [26] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [26] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [27:25] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [23:20] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [12] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [18:17] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [14] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [14] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [14:2] $memory\inst_mem.instruction_memory$rdmux[0][2][0]$b$2226 [0] }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219 [30] $memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219 [28:2] $memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219 [0] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219 [31] $memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219 [29] $memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219 [1] } = { $memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219 [28] $memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219 [28] $memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][1][0]$2218:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219, B=0, Y=$memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219 [30] $memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219 [28:2] $memory\inst_mem.instruction_memory$rdmux[0][1][0]$a$2219 [0] }, B=29'00000000000000000000000000000, Y={ $memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216 [30] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216 [28:2] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216 [0] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216 [31] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216 [29] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216 [1] } = { $memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216 [28] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216 [28] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][0][0]$2215:
      Old ports: A=$memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216, B={ $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] }, Y=\inst_mem.out
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216 [30] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216 [28:2] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$a$2216 [0] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] $memory\inst_mem.instruction_memory$rdmux[0][0][0]$b$2217 [0] }, Y={ \inst_mem.out [30] \inst_mem.out [28:2] \inst_mem.out [0] }
      New connections: { \inst_mem.out [31] \inst_mem.out [29] \inst_mem.out [1] } = { \inst_mem.out [28] \inst_mem.out [28] \inst_mem.out [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\processor.inst_mux.$ternary$verilog/mux2to1.v:51$1071:
      Old ports: A=\inst_mem.out, B=0, Y=\processor.inst_mux.out
      New ports: A={ \inst_mem.out [30] \inst_mem.out [28:2] \inst_mem.out [0] }, B=29'00000000000000000000000000000, Y={ \processor.inst_mux.out [30] \processor.inst_mux.out [28:2] \processor.inst_mux.out [0] }
      New connections: { \processor.inst_mux.out [31] \processor.inst_mux.out [29] \processor.inst_mux.out [1] } = { \processor.inst_mux.out [28] \processor.inst_mux.out [28] \processor.inst_mux.out [0] }
  Optimizing cells in module \top.
Performed a total of 57 changes.

25.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

25.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

25.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 145 unused wires.
<suppressed ~1 debug messages>

25.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.29.16. Rerunning OPT passes. (Maybe there is more to do..)

25.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~311 debug messages>

25.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][3]$2413:
      Old ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] 3'100 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] 3'100 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [31] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [25] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [23] }
      New ports: A={ 3'100 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] 1'1 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] 3'100 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [25] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [23] }
      New connections: $memory\inst_mem.instruction_memory$rdmux[0][5][1]$b$2313 [31] = $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30]
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][7]$2425:
      Old ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] 2'01 }, B={ $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] 1'0 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [31] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [23] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [16] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [10:9] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [24] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [5:4] }
      New ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] 2'01 }, B={ $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] 1'0 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] 1'0 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [31] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [16] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [13] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [10] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [24] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [5:4] }
      New connections: { $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [23] $memory\inst_mem.instruction_memory$rdmux[0][5][3]$b$2319 [9] } = { $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] }
    Consolidated identical input bits for $mux cell $memory\inst_mem.instruction_memory$rdmux[0][6][8]$2428:
      Old ports: A={ $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] 3'100 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] 4'1100 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [31] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [25] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [23] }
      New ports: A={ 3'100 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] 2'01 $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] }, B={ $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30] $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [22] 4'1100 }, Y={ $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [25] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [22] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [17] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [18] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [9] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [5] $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [23] }
      New connections: $memory\inst_mem.instruction_memory$rdmux[0][5][4]$a$2321 [31] = $memory\inst_mem.instruction_memory$rdmux[0][6][0]$b$2406 [30]
  Optimizing cells in module \top.
Performed a total of 3 changes.

25.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.29.20. Executing OPT_RMDFF pass (remove dff with constant values).

25.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

25.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.29.23. Rerunning OPT passes. (Maybe there is more to do..)

25.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~311 debug messages>

25.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

25.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.29.27. Executing OPT_RMDFF pass (remove dff with constant values).

25.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.29.30. Finished OPT passes. (There is nothing left to do.)

25.30. Executing ICE40_WRAPCARRY pass (wrap carries).

25.31. Executing TECHMAP pass (map to technology primitives).

25.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

25.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

25.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=31\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
No more expansions possible.
<suppressed ~3667 debug messages>

25.32. Executing OPT pass (performing simple optimizations).

25.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1128 debug messages>

25.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1992 debug messages>
Removed a total of 664 cells.

25.32.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$9292 ($_DFF_P_) from module top.
Replaced 1 DFF cells.

25.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 459 unused cells and 691 unused wires.
<suppressed ~470 debug messages>

25.32.5. Rerunning OPT passes. (Removed registers in this run.)

25.32.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

25.32.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.32.8. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$12600 ($_DFF_P_) from module top.
Promoting init spec \processor.id_ex_reg.data_out [147] = 1'0 to constant driver in module top.
Promoting init spec \processor.mem_wb_reg.data_out [0] = 1'0 to constant driver in module top.
Promoting init spec \processor.mem_wb_reg.data_out [3] = 1'0 to constant driver in module top.
Promoted 3 init specs to constant drivers.
Replaced 1 DFF cells.

25.32.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

25.32.10. Rerunning OPT passes. (Removed registers in this run.)

25.32.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

25.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.32.13. Executing OPT_RMDFF pass (remove dff with constant values).

25.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 32 unused cells and 0 unused wires.
<suppressed ~32 debug messages>

25.32.15. Finished fast OPT passes.

25.33. Executing ICE40_OPT pass (performing simple optimizations).

25.33.1. Running ICE40 specific optimizations.

25.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~85 debug messages>

25.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.33.4. Executing OPT_RMDFF pass (remove dff with constant values).

25.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

25.33.6. Rerunning OPT passes. (Removed registers in this run.)

25.33.7. Running ICE40 specific optimizations.

25.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.33.10. Executing OPT_RMDFF pass (remove dff with constant values).

25.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.33.12. Finished OPT passes. (There is nothing left to do.)

25.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module top:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12840 to $_DFFE_PP_ for \processor.PC.inAddr [0] -> \processor.PC.outAddr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12841 to $_DFFE_PP_ for \processor.PC.inAddr [1] -> \processor.PC.outAddr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12842 to $_DFFE_PP_ for \processor.PC.inAddr [2] -> \processor.PC.outAddr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12843 to $_DFFE_PP_ for \processor.PC.inAddr [3] -> \processor.PC.outAddr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12844 to $_DFFE_PP_ for \processor.PC.inAddr [4] -> \processor.PC.outAddr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12845 to $_DFFE_PP_ for \processor.PC.inAddr [5] -> \processor.PC.outAddr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12846 to $_DFFE_PP_ for \processor.PC.inAddr [6] -> \processor.PC.outAddr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12847 to $_DFFE_PP_ for \processor.PC.inAddr [7] -> \processor.PC.outAddr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12848 to $_DFFE_PP_ for \processor.PC.inAddr [8] -> \processor.PC.outAddr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12849 to $_DFFE_PP_ for \processor.PC.inAddr [9] -> \processor.PC.outAddr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12850 to $_DFFE_PP_ for \processor.PC.inAddr [10] -> \processor.PC.outAddr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12851 to $_DFFE_PP_ for \processor.PC.inAddr [11] -> \processor.PC.outAddr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12852 to $_DFFE_PP_ for \processor.PC.inAddr [12] -> \processor.PC.outAddr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12853 to $_DFFE_PP_ for \processor.PC.inAddr [13] -> \processor.PC.outAddr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12854 to $_DFFE_PP_ for \processor.PC.inAddr [14] -> \processor.PC.outAddr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12855 to $_DFFE_PP_ for \processor.PC.inAddr [15] -> \processor.PC.outAddr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12856 to $_DFFE_PP_ for \processor.PC.inAddr [16] -> \processor.PC.outAddr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12857 to $_DFFE_PP_ for \processor.PC.inAddr [17] -> \processor.PC.outAddr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12858 to $_DFFE_PP_ for \processor.PC.inAddr [18] -> \processor.PC.outAddr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12859 to $_DFFE_PP_ for \processor.PC.inAddr [19] -> \processor.PC.outAddr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12860 to $_DFFE_PP_ for \processor.PC.inAddr [20] -> \processor.PC.outAddr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12861 to $_DFFE_PP_ for \processor.PC.inAddr [21] -> \processor.PC.outAddr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12862 to $_DFFE_PP_ for \processor.PC.inAddr [22] -> \processor.PC.outAddr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12863 to $_DFFE_PP_ for \processor.PC.inAddr [23] -> \processor.PC.outAddr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12864 to $_DFFE_PP_ for \processor.PC.inAddr [24] -> \processor.PC.outAddr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12865 to $_DFFE_PP_ for \processor.PC.inAddr [25] -> \processor.PC.outAddr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12866 to $_DFFE_PP_ for \processor.PC.inAddr [26] -> \processor.PC.outAddr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12867 to $_DFFE_PP_ for \processor.PC.inAddr [27] -> \processor.PC.outAddr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12868 to $_DFFE_PP_ for \processor.PC.inAddr [28] -> \processor.PC.outAddr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12869 to $_DFFE_PP_ for \processor.PC.inAddr [29] -> \processor.PC.outAddr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12870 to $_DFFE_PP_ for \processor.PC.inAddr [30] -> \processor.PC.outAddr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12871 to $_DFFE_PP_ for \processor.PC.inAddr [31] -> \processor.PC.outAddr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12872 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[37][0][0]$y$5341 [0] -> \processor.branch_predictor_FSM.bht[37] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12873 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[37][0][0]$y$5341 [1] -> \processor.branch_predictor_FSM.bht[37] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12883 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[38][0][0]$y$5347 [0] -> \processor.branch_predictor_FSM.bht[38] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12884 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[38][0][0]$y$5347 [1] -> \processor.branch_predictor_FSM.bht[38] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12885 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[39][0][0]$y$5353 [0] -> \processor.branch_predictor_FSM.bht[39] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12886 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[39][0][0]$y$5353 [1] -> \processor.branch_predictor_FSM.bht[39] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12887 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[40][0][0]$y$5359 [0] -> \processor.branch_predictor_FSM.bht[40] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12888 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[40][0][0]$y$5359 [1] -> \processor.branch_predictor_FSM.bht[40] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12889 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[41][0][0]$y$5365 [0] -> \processor.branch_predictor_FSM.bht[41] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12890 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[41][0][0]$y$5365 [1] -> \processor.branch_predictor_FSM.bht[41] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12891 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[42][0][0]$y$5371 [0] -> \processor.branch_predictor_FSM.bht[42] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12892 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[42][0][0]$y$5371 [1] -> \processor.branch_predictor_FSM.bht[42] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12893 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[43][0][0]$y$5377 [0] -> \processor.branch_predictor_FSM.bht[43] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12894 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[43][0][0]$y$5377 [1] -> \processor.branch_predictor_FSM.bht[43] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12895 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[44][0][0]$y$5383 [0] -> \processor.branch_predictor_FSM.bht[44] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12896 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[44][0][0]$y$5383 [1] -> \processor.branch_predictor_FSM.bht[44] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12897 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[45][0][0]$y$5389 [0] -> \processor.branch_predictor_FSM.bht[45] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12898 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[45][0][0]$y$5389 [1] -> \processor.branch_predictor_FSM.bht[45] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12899 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[46][0][0]$y$5395 [0] -> \processor.branch_predictor_FSM.bht[46] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12900 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[46][0][0]$y$5395 [1] -> \processor.branch_predictor_FSM.bht[46] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12901 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[47][0][0]$y$5401 [0] -> \processor.branch_predictor_FSM.bht[47] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12902 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[47][0][0]$y$5401 [1] -> \processor.branch_predictor_FSM.bht[47] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12903 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[48][0][0]$y$5411 [0] -> \processor.branch_predictor_FSM.bht[48] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12904 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[48][0][0]$y$5411 [1] -> \processor.branch_predictor_FSM.bht[48] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12905 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[49][0][0]$y$5417 [0] -> \processor.branch_predictor_FSM.bht[49] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12906 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[49][0][0]$y$5417 [1] -> \processor.branch_predictor_FSM.bht[49] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12907 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[50][0][0]$y$5423 [0] -> \processor.branch_predictor_FSM.bht[50] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12908 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[50][0][0]$y$5423 [1] -> \processor.branch_predictor_FSM.bht[50] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12909 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[51][0][0]$y$5429 [0] -> \processor.branch_predictor_FSM.bht[51] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12910 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[51][0][0]$y$5429 [1] -> \processor.branch_predictor_FSM.bht[51] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12911 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[52][0][0]$y$5435 [0] -> \processor.branch_predictor_FSM.bht[52] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12912 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[52][0][0]$y$5435 [1] -> \processor.branch_predictor_FSM.bht[52] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12913 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[53][0][0]$y$5441 [0] -> \processor.branch_predictor_FSM.bht[53] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12914 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[53][0][0]$y$5441 [1] -> \processor.branch_predictor_FSM.bht[53] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12915 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[54][0][0]$y$5447 [0] -> \processor.branch_predictor_FSM.bht[54] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12916 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[54][0][0]$y$5447 [1] -> \processor.branch_predictor_FSM.bht[54] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12917 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[55][0][0]$y$5453 [0] -> \processor.branch_predictor_FSM.bht[55] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12918 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[55][0][0]$y$5453 [1] -> \processor.branch_predictor_FSM.bht[55] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12919 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[56][0][0]$y$5459 [0] -> \processor.branch_predictor_FSM.bht[56] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12920 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[56][0][0]$y$5459 [1] -> \processor.branch_predictor_FSM.bht[56] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12921 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[57][0][0]$y$5465 [0] -> \processor.branch_predictor_FSM.bht[57] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12922 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[57][0][0]$y$5465 [1] -> \processor.branch_predictor_FSM.bht[57] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12923 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[58][0][0]$y$5471 [0] -> \processor.branch_predictor_FSM.bht[58] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12924 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[58][0][0]$y$5471 [1] -> \processor.branch_predictor_FSM.bht[58] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12925 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[59][0][0]$y$5477 [0] -> \processor.branch_predictor_FSM.bht[59] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12926 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[59][0][0]$y$5477 [1] -> \processor.branch_predictor_FSM.bht[59] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12927 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[60][0][0]$y$5483 [0] -> \processor.branch_predictor_FSM.bht[60] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12928 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[60][0][0]$y$5483 [1] -> \processor.branch_predictor_FSM.bht[60] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12929 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[61][0][0]$y$5489 [0] -> \processor.branch_predictor_FSM.bht[61] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12930 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[61][0][0]$y$5489 [1] -> \processor.branch_predictor_FSM.bht[61] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12931 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[62][0][0]$y$5495 [0] -> \processor.branch_predictor_FSM.bht[62] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12932 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[62][0][0]$y$5495 [1] -> \processor.branch_predictor_FSM.bht[62] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12933 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[63][0][0]$y$5501 [0] -> \processor.branch_predictor_FSM.bht[63] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12934 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[63][0][0]$y$5501 [1] -> \processor.branch_predictor_FSM.bht[63] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12935 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[64][0][0]$y$5513 [0] -> \processor.branch_predictor_FSM.bht[64] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12936 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[64][0][0]$y$5513 [1] -> \processor.branch_predictor_FSM.bht[64] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12937 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[65][0][0]$y$5519 [0] -> \processor.branch_predictor_FSM.bht[65] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12938 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[65][0][0]$y$5519 [1] -> \processor.branch_predictor_FSM.bht[65] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12939 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[66][0][0]$y$5525 [0] -> \processor.branch_predictor_FSM.bht[66] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12940 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[66][0][0]$y$5525 [1] -> \processor.branch_predictor_FSM.bht[66] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12941 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[67][0][0]$y$5531 [0] -> \processor.branch_predictor_FSM.bht[67] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12942 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[67][0][0]$y$5531 [1] -> \processor.branch_predictor_FSM.bht[67] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12943 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[68][0][0]$y$5537 [0] -> \processor.branch_predictor_FSM.bht[68] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12944 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[68][0][0]$y$5537 [1] -> \processor.branch_predictor_FSM.bht[68] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12945 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[69][0][0]$y$5543 [0] -> \processor.branch_predictor_FSM.bht[69] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12946 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[69][0][0]$y$5543 [1] -> \processor.branch_predictor_FSM.bht[69] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12947 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[70][0][0]$y$5549 [0] -> \processor.branch_predictor_FSM.bht[70] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12948 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[70][0][0]$y$5549 [1] -> \processor.branch_predictor_FSM.bht[70] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12949 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[71][0][0]$y$5555 [0] -> \processor.branch_predictor_FSM.bht[71] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12950 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[71][0][0]$y$5555 [1] -> \processor.branch_predictor_FSM.bht[71] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12951 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[72][0][0]$y$5561 [0] -> \processor.branch_predictor_FSM.bht[72] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12952 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[72][0][0]$y$5561 [1] -> \processor.branch_predictor_FSM.bht[72] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12953 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[73][0][0]$y$5567 [0] -> \processor.branch_predictor_FSM.bht[73] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12954 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[73][0][0]$y$5567 [1] -> \processor.branch_predictor_FSM.bht[73] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12955 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[74][0][0]$y$5573 [0] -> \processor.branch_predictor_FSM.bht[74] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12956 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[74][0][0]$y$5573 [1] -> \processor.branch_predictor_FSM.bht[74] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12957 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[75][0][0]$y$5579 [0] -> \processor.branch_predictor_FSM.bht[75] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12958 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[75][0][0]$y$5579 [1] -> \processor.branch_predictor_FSM.bht[75] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12959 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[76][0][0]$y$5585 [0] -> \processor.branch_predictor_FSM.bht[76] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12960 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[76][0][0]$y$5585 [1] -> \processor.branch_predictor_FSM.bht[76] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12961 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[77][0][0]$y$5591 [0] -> \processor.branch_predictor_FSM.bht[77] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12962 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[77][0][0]$y$5591 [1] -> \processor.branch_predictor_FSM.bht[77] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12963 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[78][0][0]$y$5597 [0] -> \processor.branch_predictor_FSM.bht[78] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12964 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[78][0][0]$y$5597 [1] -> \processor.branch_predictor_FSM.bht[78] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12965 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[79][0][0]$y$5603 [0] -> \processor.branch_predictor_FSM.bht[79] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12966 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[79][0][0]$y$5603 [1] -> \processor.branch_predictor_FSM.bht[79] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12967 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[80][0][0]$y$5611 [0] -> \processor.branch_predictor_FSM.bht[80] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12968 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[80][0][0]$y$5611 [1] -> \processor.branch_predictor_FSM.bht[80] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12969 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[81][0][0]$y$5617 [0] -> \processor.branch_predictor_FSM.bht[81] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12970 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[81][0][0]$y$5617 [1] -> \processor.branch_predictor_FSM.bht[81] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12971 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[82][0][0]$y$5623 [0] -> \processor.branch_predictor_FSM.bht[82] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12972 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[82][0][0]$y$5623 [1] -> \processor.branch_predictor_FSM.bht[82] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12973 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[83][0][0]$y$5629 [0] -> \processor.branch_predictor_FSM.bht[83] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12974 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[83][0][0]$y$5629 [1] -> \processor.branch_predictor_FSM.bht[83] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12975 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[84][0][0]$y$5635 [0] -> \processor.branch_predictor_FSM.bht[84] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12976 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[84][0][0]$y$5635 [1] -> \processor.branch_predictor_FSM.bht[84] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12977 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[85][0][0]$y$5641 [0] -> \processor.branch_predictor_FSM.bht[85] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12978 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[85][0][0]$y$5641 [1] -> \processor.branch_predictor_FSM.bht[85] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12979 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[86][0][0]$y$5647 [0] -> \processor.branch_predictor_FSM.bht[86] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12980 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[86][0][0]$y$5647 [1] -> \processor.branch_predictor_FSM.bht[86] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12981 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[87][0][0]$y$5653 [0] -> \processor.branch_predictor_FSM.bht[87] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12982 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[87][0][0]$y$5653 [1] -> \processor.branch_predictor_FSM.bht[87] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12983 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[88][0][0]$y$5659 [0] -> \processor.branch_predictor_FSM.bht[88] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12984 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[88][0][0]$y$5659 [1] -> \processor.branch_predictor_FSM.bht[88] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12985 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[89][0][0]$y$5665 [0] -> \processor.branch_predictor_FSM.bht[89] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12986 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[89][0][0]$y$5665 [1] -> \processor.branch_predictor_FSM.bht[89] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12987 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[90][0][0]$y$5671 [0] -> \processor.branch_predictor_FSM.bht[90] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12988 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[90][0][0]$y$5671 [1] -> \processor.branch_predictor_FSM.bht[90] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12989 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[91][0][0]$y$5677 [0] -> \processor.branch_predictor_FSM.bht[91] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12990 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[91][0][0]$y$5677 [1] -> \processor.branch_predictor_FSM.bht[91] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12991 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[92][0][0]$y$5683 [0] -> \processor.branch_predictor_FSM.bht[92] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12992 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[92][0][0]$y$5683 [1] -> \processor.branch_predictor_FSM.bht[92] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12993 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[93][0][0]$y$5689 [0] -> \processor.branch_predictor_FSM.bht[93] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12994 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[93][0][0]$y$5689 [1] -> \processor.branch_predictor_FSM.bht[93] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12995 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[94][0][0]$y$5695 [0] -> \processor.branch_predictor_FSM.bht[94] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12996 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[94][0][0]$y$5695 [1] -> \processor.branch_predictor_FSM.bht[94] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12997 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[95][0][0]$y$5701 [0] -> \processor.branch_predictor_FSM.bht[95] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12998 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[95][0][0]$y$5701 [1] -> \processor.branch_predictor_FSM.bht[95] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12999 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[96][0][0]$y$5709 [0] -> \processor.branch_predictor_FSM.bht[96] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13000 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[96][0][0]$y$5709 [1] -> \processor.branch_predictor_FSM.bht[96] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13001 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[97][0][0]$y$5715 [0] -> \processor.branch_predictor_FSM.bht[97] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13002 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[97][0][0]$y$5715 [1] -> \processor.branch_predictor_FSM.bht[97] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13003 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[98][0][0]$y$5721 [0] -> \processor.branch_predictor_FSM.bht[98] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13004 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[98][0][0]$y$5721 [1] -> \processor.branch_predictor_FSM.bht[98] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13005 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[99][0][0]$y$5727 [0] -> \processor.branch_predictor_FSM.bht[99] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13006 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[99][0][0]$y$5727 [1] -> \processor.branch_predictor_FSM.bht[99] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13007 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[100][0][0]$y$5733 [0] -> \processor.branch_predictor_FSM.bht[100] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13008 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[100][0][0]$y$5733 [1] -> \processor.branch_predictor_FSM.bht[100] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13009 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[101][0][0]$y$5739 [0] -> \processor.branch_predictor_FSM.bht[101] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13010 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[101][0][0]$y$5739 [1] -> \processor.branch_predictor_FSM.bht[101] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13011 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[102][0][0]$y$5745 [0] -> \processor.branch_predictor_FSM.bht[102] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13012 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[102][0][0]$y$5745 [1] -> \processor.branch_predictor_FSM.bht[102] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13013 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[103][0][0]$y$5751 [0] -> \processor.branch_predictor_FSM.bht[103] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13014 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[103][0][0]$y$5751 [1] -> \processor.branch_predictor_FSM.bht[103] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13015 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[104][0][0]$y$5757 [0] -> \processor.branch_predictor_FSM.bht[104] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13016 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[104][0][0]$y$5757 [1] -> \processor.branch_predictor_FSM.bht[104] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13017 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[105][0][0]$y$5763 [0] -> \processor.branch_predictor_FSM.bht[105] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13018 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[105][0][0]$y$5763 [1] -> \processor.branch_predictor_FSM.bht[105] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13019 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[106][0][0]$y$5769 [0] -> \processor.branch_predictor_FSM.bht[106] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13020 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[106][0][0]$y$5769 [1] -> \processor.branch_predictor_FSM.bht[106] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13021 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[107][0][0]$y$5775 [0] -> \processor.branch_predictor_FSM.bht[107] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13022 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[107][0][0]$y$5775 [1] -> \processor.branch_predictor_FSM.bht[107] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13023 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[108][0][0]$y$5781 [0] -> \processor.branch_predictor_FSM.bht[108] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13024 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[108][0][0]$y$5781 [1] -> \processor.branch_predictor_FSM.bht[108] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13025 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[109][0][0]$y$5787 [0] -> \processor.branch_predictor_FSM.bht[109] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13026 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[109][0][0]$y$5787 [1] -> \processor.branch_predictor_FSM.bht[109] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13027 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[110][0][0]$y$5793 [0] -> \processor.branch_predictor_FSM.bht[110] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13028 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[110][0][0]$y$5793 [1] -> \processor.branch_predictor_FSM.bht[110] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13029 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[111][0][0]$y$5799 [0] -> \processor.branch_predictor_FSM.bht[111] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13030 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[111][0][0]$y$5799 [1] -> \processor.branch_predictor_FSM.bht[111] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13031 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[112][0][0]$y$5807 [0] -> \processor.branch_predictor_FSM.bht[112] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13032 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[112][0][0]$y$5807 [1] -> \processor.branch_predictor_FSM.bht[112] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13033 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[113][0][0]$y$5813 [0] -> \processor.branch_predictor_FSM.bht[113] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13034 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[113][0][0]$y$5813 [1] -> \processor.branch_predictor_FSM.bht[113] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13035 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[114][0][0]$y$5819 [0] -> \processor.branch_predictor_FSM.bht[114] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13036 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[114][0][0]$y$5819 [1] -> \processor.branch_predictor_FSM.bht[114] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13037 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[115][0][0]$y$5825 [0] -> \processor.branch_predictor_FSM.bht[115] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13038 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[115][0][0]$y$5825 [1] -> \processor.branch_predictor_FSM.bht[115] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13039 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[116][0][0]$y$5831 [0] -> \processor.branch_predictor_FSM.bht[116] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13040 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[116][0][0]$y$5831 [1] -> \processor.branch_predictor_FSM.bht[116] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13041 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[117][0][0]$y$5837 [0] -> \processor.branch_predictor_FSM.bht[117] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13042 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[117][0][0]$y$5837 [1] -> \processor.branch_predictor_FSM.bht[117] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13043 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[118][0][0]$y$5843 [0] -> \processor.branch_predictor_FSM.bht[118] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13044 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[118][0][0]$y$5843 [1] -> \processor.branch_predictor_FSM.bht[118] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13045 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[119][0][0]$y$5849 [0] -> \processor.branch_predictor_FSM.bht[119] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13046 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[119][0][0]$y$5849 [1] -> \processor.branch_predictor_FSM.bht[119] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13047 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[120][0][0]$y$5855 [0] -> \processor.branch_predictor_FSM.bht[120] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13048 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[120][0][0]$y$5855 [1] -> \processor.branch_predictor_FSM.bht[120] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13049 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[121][0][0]$y$5861 [0] -> \processor.branch_predictor_FSM.bht[121] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13050 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[121][0][0]$y$5861 [1] -> \processor.branch_predictor_FSM.bht[121] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13051 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[122][0][0]$y$5867 [0] -> \processor.branch_predictor_FSM.bht[122] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13052 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[122][0][0]$y$5867 [1] -> \processor.branch_predictor_FSM.bht[122] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13053 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[123][0][0]$y$5873 [0] -> \processor.branch_predictor_FSM.bht[123] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13054 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[123][0][0]$y$5873 [1] -> \processor.branch_predictor_FSM.bht[123] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13055 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[124][0][0]$y$5879 [0] -> \processor.branch_predictor_FSM.bht[124] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13056 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[124][0][0]$y$5879 [1] -> \processor.branch_predictor_FSM.bht[124] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13057 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[125][0][0]$y$5885 [0] -> \processor.branch_predictor_FSM.bht[125] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13058 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[125][0][0]$y$5885 [1] -> \processor.branch_predictor_FSM.bht[125] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13059 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[126][0][0]$y$5891 [0] -> \processor.branch_predictor_FSM.bht[126] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13060 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[126][0][0]$y$5891 [1] -> \processor.branch_predictor_FSM.bht[126] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13061 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[127][0][0]$y$5897 [0] -> \processor.branch_predictor_FSM.bht[127] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13062 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[127][0][0]$y$5897 [1] -> \processor.branch_predictor_FSM.bht[127] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13063 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[128][0][0]$y$5909 [0] -> \processor.branch_predictor_FSM.bht[128] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13064 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[128][0][0]$y$5909 [1] -> \processor.branch_predictor_FSM.bht[128] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13065 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[129][0][0]$y$5915 [0] -> \processor.branch_predictor_FSM.bht[129] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13066 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[129][0][0]$y$5915 [1] -> \processor.branch_predictor_FSM.bht[129] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13067 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[130][0][0]$y$5921 [0] -> \processor.branch_predictor_FSM.bht[130] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13068 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[130][0][0]$y$5921 [1] -> \processor.branch_predictor_FSM.bht[130] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13069 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[131][0][0]$y$5927 [0] -> \processor.branch_predictor_FSM.bht[131] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13070 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[131][0][0]$y$5927 [1] -> \processor.branch_predictor_FSM.bht[131] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13071 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[132][0][0]$y$5933 [0] -> \processor.branch_predictor_FSM.bht[132] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13072 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[132][0][0]$y$5933 [1] -> \processor.branch_predictor_FSM.bht[132] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13073 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[133][0][0]$y$5939 [0] -> \processor.branch_predictor_FSM.bht[133] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13074 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[133][0][0]$y$5939 [1] -> \processor.branch_predictor_FSM.bht[133] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13075 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[134][0][0]$y$5945 [0] -> \processor.branch_predictor_FSM.bht[134] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13076 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[134][0][0]$y$5945 [1] -> \processor.branch_predictor_FSM.bht[134] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13077 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[135][0][0]$y$5951 [0] -> \processor.branch_predictor_FSM.bht[135] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13078 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[135][0][0]$y$5951 [1] -> \processor.branch_predictor_FSM.bht[135] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13079 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[136][0][0]$y$5957 [0] -> \processor.branch_predictor_FSM.bht[136] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13080 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[136][0][0]$y$5957 [1] -> \processor.branch_predictor_FSM.bht[136] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13081 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[137][0][0]$y$5963 [0] -> \processor.branch_predictor_FSM.bht[137] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13082 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[137][0][0]$y$5963 [1] -> \processor.branch_predictor_FSM.bht[137] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13083 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[138][0][0]$y$5969 [0] -> \processor.branch_predictor_FSM.bht[138] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13084 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[138][0][0]$y$5969 [1] -> \processor.branch_predictor_FSM.bht[138] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13085 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[139][0][0]$y$5975 [0] -> \processor.branch_predictor_FSM.bht[139] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13086 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[139][0][0]$y$5975 [1] -> \processor.branch_predictor_FSM.bht[139] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13087 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[140][0][0]$y$5981 [0] -> \processor.branch_predictor_FSM.bht[140] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13088 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[140][0][0]$y$5981 [1] -> \processor.branch_predictor_FSM.bht[140] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13089 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[141][0][0]$y$5987 [0] -> \processor.branch_predictor_FSM.bht[141] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13090 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[141][0][0]$y$5987 [1] -> \processor.branch_predictor_FSM.bht[141] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13091 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[142][0][0]$y$5993 [0] -> \processor.branch_predictor_FSM.bht[142] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13092 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[142][0][0]$y$5993 [1] -> \processor.branch_predictor_FSM.bht[142] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13093 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[143][0][0]$y$5999 [0] -> \processor.branch_predictor_FSM.bht[143] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13094 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[143][0][0]$y$5999 [1] -> \processor.branch_predictor_FSM.bht[143] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13095 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[144][0][0]$y$6007 [0] -> \processor.branch_predictor_FSM.bht[144] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13096 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[144][0][0]$y$6007 [1] -> \processor.branch_predictor_FSM.bht[144] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13097 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[145][0][0]$y$6013 [0] -> \processor.branch_predictor_FSM.bht[145] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13098 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[145][0][0]$y$6013 [1] -> \processor.branch_predictor_FSM.bht[145] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13099 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[146][0][0]$y$6019 [0] -> \processor.branch_predictor_FSM.bht[146] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13100 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[146][0][0]$y$6019 [1] -> \processor.branch_predictor_FSM.bht[146] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13101 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[147][0][0]$y$6025 [0] -> \processor.branch_predictor_FSM.bht[147] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13102 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[147][0][0]$y$6025 [1] -> \processor.branch_predictor_FSM.bht[147] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13103 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[148][0][0]$y$6031 [0] -> \processor.branch_predictor_FSM.bht[148] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13104 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[148][0][0]$y$6031 [1] -> \processor.branch_predictor_FSM.bht[148] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13105 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[149][0][0]$y$6037 [0] -> \processor.branch_predictor_FSM.bht[149] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13106 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[149][0][0]$y$6037 [1] -> \processor.branch_predictor_FSM.bht[149] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13107 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[150][0][0]$y$6043 [0] -> \processor.branch_predictor_FSM.bht[150] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13108 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[150][0][0]$y$6043 [1] -> \processor.branch_predictor_FSM.bht[150] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13109 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[151][0][0]$y$6049 [0] -> \processor.branch_predictor_FSM.bht[151] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13110 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[151][0][0]$y$6049 [1] -> \processor.branch_predictor_FSM.bht[151] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13111 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[152][0][0]$y$6055 [0] -> \processor.branch_predictor_FSM.bht[152] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13112 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[152][0][0]$y$6055 [1] -> \processor.branch_predictor_FSM.bht[152] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13113 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[153][0][0]$y$6061 [0] -> \processor.branch_predictor_FSM.bht[153] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13114 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[153][0][0]$y$6061 [1] -> \processor.branch_predictor_FSM.bht[153] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13115 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[154][0][0]$y$6067 [0] -> \processor.branch_predictor_FSM.bht[154] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13116 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[154][0][0]$y$6067 [1] -> \processor.branch_predictor_FSM.bht[154] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13117 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[155][0][0]$y$6073 [0] -> \processor.branch_predictor_FSM.bht[155] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13118 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[155][0][0]$y$6073 [1] -> \processor.branch_predictor_FSM.bht[155] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13119 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[156][0][0]$y$6079 [0] -> \processor.branch_predictor_FSM.bht[156] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13120 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[156][0][0]$y$6079 [1] -> \processor.branch_predictor_FSM.bht[156] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13121 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[157][0][0]$y$6085 [0] -> \processor.branch_predictor_FSM.bht[157] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13122 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[157][0][0]$y$6085 [1] -> \processor.branch_predictor_FSM.bht[157] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13123 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[158][0][0]$y$6091 [0] -> \processor.branch_predictor_FSM.bht[158] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13124 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[158][0][0]$y$6091 [1] -> \processor.branch_predictor_FSM.bht[158] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13125 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[159][0][0]$y$6097 [0] -> \processor.branch_predictor_FSM.bht[159] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13126 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[159][0][0]$y$6097 [1] -> \processor.branch_predictor_FSM.bht[159] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13127 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[160][0][0]$y$6105 [0] -> \processor.branch_predictor_FSM.bht[160] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13128 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[160][0][0]$y$6105 [1] -> \processor.branch_predictor_FSM.bht[160] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13129 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[161][0][0]$y$6111 [0] -> \processor.branch_predictor_FSM.bht[161] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13130 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[161][0][0]$y$6111 [1] -> \processor.branch_predictor_FSM.bht[161] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13131 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[162][0][0]$y$6117 [0] -> \processor.branch_predictor_FSM.bht[162] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13132 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[162][0][0]$y$6117 [1] -> \processor.branch_predictor_FSM.bht[162] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13133 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[163][0][0]$y$6123 [0] -> \processor.branch_predictor_FSM.bht[163] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13134 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[163][0][0]$y$6123 [1] -> \processor.branch_predictor_FSM.bht[163] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13135 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[164][0][0]$y$6129 [0] -> \processor.branch_predictor_FSM.bht[164] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13136 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[164][0][0]$y$6129 [1] -> \processor.branch_predictor_FSM.bht[164] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13137 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[165][0][0]$y$6135 [0] -> \processor.branch_predictor_FSM.bht[165] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13138 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[165][0][0]$y$6135 [1] -> \processor.branch_predictor_FSM.bht[165] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13139 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[166][0][0]$y$6141 [0] -> \processor.branch_predictor_FSM.bht[166] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13140 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[166][0][0]$y$6141 [1] -> \processor.branch_predictor_FSM.bht[166] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13141 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[167][0][0]$y$6147 [0] -> \processor.branch_predictor_FSM.bht[167] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13142 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[167][0][0]$y$6147 [1] -> \processor.branch_predictor_FSM.bht[167] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13143 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[168][0][0]$y$6153 [0] -> \processor.branch_predictor_FSM.bht[168] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13144 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[168][0][0]$y$6153 [1] -> \processor.branch_predictor_FSM.bht[168] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13145 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[169][0][0]$y$6159 [0] -> \processor.branch_predictor_FSM.bht[169] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13146 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[169][0][0]$y$6159 [1] -> \processor.branch_predictor_FSM.bht[169] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13147 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[170][0][0]$y$6165 [0] -> \processor.branch_predictor_FSM.bht[170] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13148 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[170][0][0]$y$6165 [1] -> \processor.branch_predictor_FSM.bht[170] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13149 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[171][0][0]$y$6171 [0] -> \processor.branch_predictor_FSM.bht[171] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13150 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[171][0][0]$y$6171 [1] -> \processor.branch_predictor_FSM.bht[171] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13151 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[172][0][0]$y$6177 [0] -> \processor.branch_predictor_FSM.bht[172] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13152 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[172][0][0]$y$6177 [1] -> \processor.branch_predictor_FSM.bht[172] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13153 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[173][0][0]$y$6183 [0] -> \processor.branch_predictor_FSM.bht[173] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13154 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[173][0][0]$y$6183 [1] -> \processor.branch_predictor_FSM.bht[173] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13155 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[174][0][0]$y$6189 [0] -> \processor.branch_predictor_FSM.bht[174] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13156 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[174][0][0]$y$6189 [1] -> \processor.branch_predictor_FSM.bht[174] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13157 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[175][0][0]$y$6195 [0] -> \processor.branch_predictor_FSM.bht[175] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13158 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[175][0][0]$y$6195 [1] -> \processor.branch_predictor_FSM.bht[175] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13159 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[176][0][0]$y$6203 [0] -> \processor.branch_predictor_FSM.bht[176] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13160 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[176][0][0]$y$6203 [1] -> \processor.branch_predictor_FSM.bht[176] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13161 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[177][0][0]$y$6209 [0] -> \processor.branch_predictor_FSM.bht[177] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13162 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[177][0][0]$y$6209 [1] -> \processor.branch_predictor_FSM.bht[177] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13163 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[178][0][0]$y$6215 [0] -> \processor.branch_predictor_FSM.bht[178] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13164 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[178][0][0]$y$6215 [1] -> \processor.branch_predictor_FSM.bht[178] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13165 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[179][0][0]$y$6221 [0] -> \processor.branch_predictor_FSM.bht[179] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13166 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[179][0][0]$y$6221 [1] -> \processor.branch_predictor_FSM.bht[179] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13167 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[180][0][0]$y$6227 [0] -> \processor.branch_predictor_FSM.bht[180] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13168 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[180][0][0]$y$6227 [1] -> \processor.branch_predictor_FSM.bht[180] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13169 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[181][0][0]$y$6233 [0] -> \processor.branch_predictor_FSM.bht[181] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13170 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[181][0][0]$y$6233 [1] -> \processor.branch_predictor_FSM.bht[181] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13171 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[182][0][0]$y$6239 [0] -> \processor.branch_predictor_FSM.bht[182] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13172 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[182][0][0]$y$6239 [1] -> \processor.branch_predictor_FSM.bht[182] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13173 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[183][0][0]$y$6245 [0] -> \processor.branch_predictor_FSM.bht[183] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13174 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[183][0][0]$y$6245 [1] -> \processor.branch_predictor_FSM.bht[183] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13175 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[184][0][0]$y$6251 [0] -> \processor.branch_predictor_FSM.bht[184] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13176 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[184][0][0]$y$6251 [1] -> \processor.branch_predictor_FSM.bht[184] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13177 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[185][0][0]$y$6257 [0] -> \processor.branch_predictor_FSM.bht[185] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13178 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[185][0][0]$y$6257 [1] -> \processor.branch_predictor_FSM.bht[185] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13179 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[186][0][0]$y$6263 [0] -> \processor.branch_predictor_FSM.bht[186] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13180 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[186][0][0]$y$6263 [1] -> \processor.branch_predictor_FSM.bht[186] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13181 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[187][0][0]$y$6269 [0] -> \processor.branch_predictor_FSM.bht[187] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13182 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[187][0][0]$y$6269 [1] -> \processor.branch_predictor_FSM.bht[187] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13183 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[188][0][0]$y$6275 [0] -> \processor.branch_predictor_FSM.bht[188] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13184 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[188][0][0]$y$6275 [1] -> \processor.branch_predictor_FSM.bht[188] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13185 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[189][0][0]$y$6281 [0] -> \processor.branch_predictor_FSM.bht[189] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13186 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[189][0][0]$y$6281 [1] -> \processor.branch_predictor_FSM.bht[189] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13187 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[190][0][0]$y$6287 [0] -> \processor.branch_predictor_FSM.bht[190] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13188 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[190][0][0]$y$6287 [1] -> \processor.branch_predictor_FSM.bht[190] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13189 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[191][0][0]$y$6293 [0] -> \processor.branch_predictor_FSM.bht[191] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13190 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[191][0][0]$y$6293 [1] -> \processor.branch_predictor_FSM.bht[191] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13191 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[192][0][0]$y$6303 [0] -> \processor.branch_predictor_FSM.bht[192] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13192 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[192][0][0]$y$6303 [1] -> \processor.branch_predictor_FSM.bht[192] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13193 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[193][0][0]$y$6309 [0] -> \processor.branch_predictor_FSM.bht[193] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13194 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[193][0][0]$y$6309 [1] -> \processor.branch_predictor_FSM.bht[193] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13195 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[194][0][0]$y$6315 [0] -> \processor.branch_predictor_FSM.bht[194] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13196 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[194][0][0]$y$6315 [1] -> \processor.branch_predictor_FSM.bht[194] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13197 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[195][0][0]$y$6321 [0] -> \processor.branch_predictor_FSM.bht[195] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13198 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[195][0][0]$y$6321 [1] -> \processor.branch_predictor_FSM.bht[195] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13199 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[196][0][0]$y$6327 [0] -> \processor.branch_predictor_FSM.bht[196] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13200 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[196][0][0]$y$6327 [1] -> \processor.branch_predictor_FSM.bht[196] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13201 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[197][0][0]$y$6333 [0] -> \processor.branch_predictor_FSM.bht[197] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13202 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[197][0][0]$y$6333 [1] -> \processor.branch_predictor_FSM.bht[197] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13203 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[198][0][0]$y$6339 [0] -> \processor.branch_predictor_FSM.bht[198] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13204 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[198][0][0]$y$6339 [1] -> \processor.branch_predictor_FSM.bht[198] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13205 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[199][0][0]$y$6345 [0] -> \processor.branch_predictor_FSM.bht[199] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13206 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[199][0][0]$y$6345 [1] -> \processor.branch_predictor_FSM.bht[199] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13207 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[200][0][0]$y$6351 [0] -> \processor.branch_predictor_FSM.bht[200] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13208 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[200][0][0]$y$6351 [1] -> \processor.branch_predictor_FSM.bht[200] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13209 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[201][0][0]$y$6357 [0] -> \processor.branch_predictor_FSM.bht[201] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13210 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[201][0][0]$y$6357 [1] -> \processor.branch_predictor_FSM.bht[201] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13211 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[202][0][0]$y$6363 [0] -> \processor.branch_predictor_FSM.bht[202] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13212 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[202][0][0]$y$6363 [1] -> \processor.branch_predictor_FSM.bht[202] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13213 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[203][0][0]$y$6369 [0] -> \processor.branch_predictor_FSM.bht[203] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13214 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[203][0][0]$y$6369 [1] -> \processor.branch_predictor_FSM.bht[203] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13215 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[204][0][0]$y$6375 [0] -> \processor.branch_predictor_FSM.bht[204] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13216 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[204][0][0]$y$6375 [1] -> \processor.branch_predictor_FSM.bht[204] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13217 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[205][0][0]$y$6381 [0] -> \processor.branch_predictor_FSM.bht[205] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13218 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[205][0][0]$y$6381 [1] -> \processor.branch_predictor_FSM.bht[205] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13219 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[206][0][0]$y$6387 [0] -> \processor.branch_predictor_FSM.bht[206] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13220 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[206][0][0]$y$6387 [1] -> \processor.branch_predictor_FSM.bht[206] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13221 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[207][0][0]$y$6393 [0] -> \processor.branch_predictor_FSM.bht[207] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13222 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[207][0][0]$y$6393 [1] -> \processor.branch_predictor_FSM.bht[207] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13223 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[208][0][0]$y$6401 [0] -> \processor.branch_predictor_FSM.bht[208] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13224 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[208][0][0]$y$6401 [1] -> \processor.branch_predictor_FSM.bht[208] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13225 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[209][0][0]$y$6407 [0] -> \processor.branch_predictor_FSM.bht[209] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13226 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[209][0][0]$y$6407 [1] -> \processor.branch_predictor_FSM.bht[209] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13227 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[210][0][0]$y$6413 [0] -> \processor.branch_predictor_FSM.bht[210] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13228 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[210][0][0]$y$6413 [1] -> \processor.branch_predictor_FSM.bht[210] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13229 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[211][0][0]$y$6419 [0] -> \processor.branch_predictor_FSM.bht[211] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13230 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[211][0][0]$y$6419 [1] -> \processor.branch_predictor_FSM.bht[211] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13231 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[212][0][0]$y$6425 [0] -> \processor.branch_predictor_FSM.bht[212] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13232 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[212][0][0]$y$6425 [1] -> \processor.branch_predictor_FSM.bht[212] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13233 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[213][0][0]$y$6431 [0] -> \processor.branch_predictor_FSM.bht[213] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13234 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[213][0][0]$y$6431 [1] -> \processor.branch_predictor_FSM.bht[213] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13235 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[214][0][0]$y$6437 [0] -> \processor.branch_predictor_FSM.bht[214] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13236 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[214][0][0]$y$6437 [1] -> \processor.branch_predictor_FSM.bht[214] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13237 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[215][0][0]$y$6443 [0] -> \processor.branch_predictor_FSM.bht[215] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13238 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[215][0][0]$y$6443 [1] -> \processor.branch_predictor_FSM.bht[215] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13239 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[216][0][0]$y$6449 [0] -> \processor.branch_predictor_FSM.bht[216] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13240 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[216][0][0]$y$6449 [1] -> \processor.branch_predictor_FSM.bht[216] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13241 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[217][0][0]$y$6455 [0] -> \processor.branch_predictor_FSM.bht[217] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13242 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[217][0][0]$y$6455 [1] -> \processor.branch_predictor_FSM.bht[217] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13243 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[218][0][0]$y$6461 [0] -> \processor.branch_predictor_FSM.bht[218] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13244 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[218][0][0]$y$6461 [1] -> \processor.branch_predictor_FSM.bht[218] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13245 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[219][0][0]$y$6467 [0] -> \processor.branch_predictor_FSM.bht[219] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13246 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[219][0][0]$y$6467 [1] -> \processor.branch_predictor_FSM.bht[219] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13247 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[220][0][0]$y$6473 [0] -> \processor.branch_predictor_FSM.bht[220] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13248 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[220][0][0]$y$6473 [1] -> \processor.branch_predictor_FSM.bht[220] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13249 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[221][0][0]$y$6479 [0] -> \processor.branch_predictor_FSM.bht[221] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13250 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[221][0][0]$y$6479 [1] -> \processor.branch_predictor_FSM.bht[221] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13251 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[222][0][0]$y$6485 [0] -> \processor.branch_predictor_FSM.bht[222] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13252 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[222][0][0]$y$6485 [1] -> \processor.branch_predictor_FSM.bht[222] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13253 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[223][0][0]$y$6491 [0] -> \processor.branch_predictor_FSM.bht[223] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13254 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[223][0][0]$y$6491 [1] -> \processor.branch_predictor_FSM.bht[223] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13255 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[224][0][0]$y$6499 [0] -> \processor.branch_predictor_FSM.bht[224] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13256 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[224][0][0]$y$6499 [1] -> \processor.branch_predictor_FSM.bht[224] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13257 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[225][0][0]$y$6505 [0] -> \processor.branch_predictor_FSM.bht[225] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13258 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[225][0][0]$y$6505 [1] -> \processor.branch_predictor_FSM.bht[225] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13259 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[226][0][0]$y$6511 [0] -> \processor.branch_predictor_FSM.bht[226] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13260 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[226][0][0]$y$6511 [1] -> \processor.branch_predictor_FSM.bht[226] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13261 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[227][0][0]$y$6517 [0] -> \processor.branch_predictor_FSM.bht[227] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13262 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[227][0][0]$y$6517 [1] -> \processor.branch_predictor_FSM.bht[227] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13263 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[228][0][0]$y$6523 [0] -> \processor.branch_predictor_FSM.bht[228] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13264 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[228][0][0]$y$6523 [1] -> \processor.branch_predictor_FSM.bht[228] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13265 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[229][0][0]$y$6529 [0] -> \processor.branch_predictor_FSM.bht[229] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13266 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[229][0][0]$y$6529 [1] -> \processor.branch_predictor_FSM.bht[229] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13267 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[230][0][0]$y$6535 [0] -> \processor.branch_predictor_FSM.bht[230] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13268 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[230][0][0]$y$6535 [1] -> \processor.branch_predictor_FSM.bht[230] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13269 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[231][0][0]$y$6541 [0] -> \processor.branch_predictor_FSM.bht[231] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13270 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[231][0][0]$y$6541 [1] -> \processor.branch_predictor_FSM.bht[231] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13271 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[232][0][0]$y$6547 [0] -> \processor.branch_predictor_FSM.bht[232] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13272 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[232][0][0]$y$6547 [1] -> \processor.branch_predictor_FSM.bht[232] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13273 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[233][0][0]$y$6553 [0] -> \processor.branch_predictor_FSM.bht[233] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13274 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[233][0][0]$y$6553 [1] -> \processor.branch_predictor_FSM.bht[233] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13275 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[234][0][0]$y$6559 [0] -> \processor.branch_predictor_FSM.bht[234] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13276 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[234][0][0]$y$6559 [1] -> \processor.branch_predictor_FSM.bht[234] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13277 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[235][0][0]$y$6565 [0] -> \processor.branch_predictor_FSM.bht[235] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13278 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[235][0][0]$y$6565 [1] -> \processor.branch_predictor_FSM.bht[235] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13279 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[236][0][0]$y$6571 [0] -> \processor.branch_predictor_FSM.bht[236] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13280 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[236][0][0]$y$6571 [1] -> \processor.branch_predictor_FSM.bht[236] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13281 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[237][0][0]$y$6577 [0] -> \processor.branch_predictor_FSM.bht[237] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13282 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[237][0][0]$y$6577 [1] -> \processor.branch_predictor_FSM.bht[237] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13283 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[238][0][0]$y$6583 [0] -> \processor.branch_predictor_FSM.bht[238] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13284 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[238][0][0]$y$6583 [1] -> \processor.branch_predictor_FSM.bht[238] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13285 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[239][0][0]$y$6589 [0] -> \processor.branch_predictor_FSM.bht[239] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13286 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[239][0][0]$y$6589 [1] -> \processor.branch_predictor_FSM.bht[239] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13287 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[240][0][0]$y$6597 [0] -> \processor.branch_predictor_FSM.bht[240] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13288 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[240][0][0]$y$6597 [1] -> \processor.branch_predictor_FSM.bht[240] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13289 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[241][0][0]$y$6603 [0] -> \processor.branch_predictor_FSM.bht[241] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13290 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[241][0][0]$y$6603 [1] -> \processor.branch_predictor_FSM.bht[241] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13291 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[242][0][0]$y$6609 [0] -> \processor.branch_predictor_FSM.bht[242] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13292 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[242][0][0]$y$6609 [1] -> \processor.branch_predictor_FSM.bht[242] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13293 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[243][0][0]$y$6615 [0] -> \processor.branch_predictor_FSM.bht[243] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13294 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[243][0][0]$y$6615 [1] -> \processor.branch_predictor_FSM.bht[243] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13295 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[244][0][0]$y$6621 [0] -> \processor.branch_predictor_FSM.bht[244] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13296 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[244][0][0]$y$6621 [1] -> \processor.branch_predictor_FSM.bht[244] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13297 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[245][0][0]$y$6627 [0] -> \processor.branch_predictor_FSM.bht[245] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13298 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[245][0][0]$y$6627 [1] -> \processor.branch_predictor_FSM.bht[245] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13299 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[246][0][0]$y$6633 [0] -> \processor.branch_predictor_FSM.bht[246] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13300 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[246][0][0]$y$6633 [1] -> \processor.branch_predictor_FSM.bht[246] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13301 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[247][0][0]$y$6639 [0] -> \processor.branch_predictor_FSM.bht[247] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13302 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[247][0][0]$y$6639 [1] -> \processor.branch_predictor_FSM.bht[247] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13303 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[248][0][0]$y$6645 [0] -> \processor.branch_predictor_FSM.bht[248] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13304 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[248][0][0]$y$6645 [1] -> \processor.branch_predictor_FSM.bht[248] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13305 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[249][0][0]$y$6651 [0] -> \processor.branch_predictor_FSM.bht[249] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13306 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[249][0][0]$y$6651 [1] -> \processor.branch_predictor_FSM.bht[249] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13307 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[250][0][0]$y$6657 [0] -> \processor.branch_predictor_FSM.bht[250] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13308 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[250][0][0]$y$6657 [1] -> \processor.branch_predictor_FSM.bht[250] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13309 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[251][0][0]$y$6663 [0] -> \processor.branch_predictor_FSM.bht[251] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13310 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[251][0][0]$y$6663 [1] -> \processor.branch_predictor_FSM.bht[251] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13311 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[252][0][0]$y$6669 [0] -> \processor.branch_predictor_FSM.bht[252] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13312 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[252][0][0]$y$6669 [1] -> \processor.branch_predictor_FSM.bht[252] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13313 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[253][0][0]$y$6675 [0] -> \processor.branch_predictor_FSM.bht[253] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13314 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[253][0][0]$y$6675 [1] -> \processor.branch_predictor_FSM.bht[253] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13315 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[254][0][0]$y$6681 [0] -> \processor.branch_predictor_FSM.bht[254] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13316 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[254][0][0]$y$6681 [1] -> \processor.branch_predictor_FSM.bht[254] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13317 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[255][0][0]$y$6687 [0] -> \processor.branch_predictor_FSM.bht[255] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13318 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[255][0][0]$y$6687 [1] -> \processor.branch_predictor_FSM.bht[255] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13319 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [0] -> \processor.branch_predictor_FSM.commit_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13320 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [1] -> \processor.branch_predictor_FSM.commit_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13321 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [2] -> \processor.branch_predictor_FSM.commit_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13322 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [3] -> \processor.branch_predictor_FSM.commit_index [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13323 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [4] -> \processor.branch_predictor_FSM.commit_index [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13324 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [5] -> \processor.branch_predictor_FSM.commit_index [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13325 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [6] -> \processor.branch_predictor_FSM.commit_index [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13326 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\commit_index[7:0] [7] -> \processor.branch_predictor_FSM.commit_index [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6742 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[1][0][0]$y$5069 [0] -> \processor.branch_predictor_FSM.bht[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6743 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[1][0][0]$y$5069 [1] -> \processor.branch_predictor_FSM.bht[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6744 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[3][0][0]$y$5091 [0] -> \processor.branch_predictor_FSM.bht[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6745 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[3][0][0]$y$5091 [1] -> \processor.branch_predictor_FSM.bht[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6746 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[2][0][0]$y$5081 [0] -> \processor.branch_predictor_FSM.bht[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6747 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[2][0][0]$y$5081 [1] -> \processor.branch_predictor_FSM.bht[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6748 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[15][0][0]$y$5197 [0] -> \processor.branch_predictor_FSM.bht[15] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6749 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[15][0][0]$y$5197 [1] -> \processor.branch_predictor_FSM.bht[15] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6750 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[16][0][0]$y$5209 [0] -> \processor.branch_predictor_FSM.bht[16] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6751 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[16][0][0]$y$5209 [1] -> \processor.branch_predictor_FSM.bht[16] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6752 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[14][0][0]$y$5189 [0] -> \processor.branch_predictor_FSM.bht[14] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6753 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[14][0][0]$y$5189 [1] -> \processor.branch_predictor_FSM.bht[14] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7022 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[4][0][0]$y$5103 [0] -> \processor.branch_predictor_FSM.bht[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7023 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[4][0][0]$y$5103 [1] -> \processor.branch_predictor_FSM.bht[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7024 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[10][0][0]$y$5155 [0] -> \processor.branch_predictor_FSM.bht[10] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7025 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[10][0][0]$y$5155 [1] -> \processor.branch_predictor_FSM.bht[10] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7026 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[13][0][0]$y$5181 [0] -> \processor.branch_predictor_FSM.bht[13] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7027 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[13][0][0]$y$5181 [1] -> \processor.branch_predictor_FSM.bht[13] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7028 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[9][0][0]$y$5147 [0] -> \processor.branch_predictor_FSM.bht[9] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7029 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[9][0][0]$y$5147 [1] -> \processor.branch_predictor_FSM.bht[9] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7030 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[6][0][0]$y$5119 [0] -> \processor.branch_predictor_FSM.bht[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7031 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[6][0][0]$y$5119 [1] -> \processor.branch_predictor_FSM.bht[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7032 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[8][0][0]$y$5139 [0] -> \processor.branch_predictor_FSM.bht[8] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7033 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[8][0][0]$y$5139 [1] -> \processor.branch_predictor_FSM.bht[8] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7034 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[12][0][0]$y$5173 [0] -> \processor.branch_predictor_FSM.bht[12] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7035 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[12][0][0]$y$5173 [1] -> \processor.branch_predictor_FSM.bht[12] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7036 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[5][0][0]$y$5111 [0] -> \processor.branch_predictor_FSM.bht[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7037 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[5][0][0]$y$5111 [1] -> \processor.branch_predictor_FSM.bht[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7038 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[11][0][0]$y$5163 [0] -> \processor.branch_predictor_FSM.bht[11] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7039 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[11][0][0]$y$5163 [1] -> \processor.branch_predictor_FSM.bht[11] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7040 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[7][0][0]$y$5127 [0] -> \processor.branch_predictor_FSM.bht[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7041 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[7][0][0]$y$5127 [1] -> \processor.branch_predictor_FSM.bht[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7043 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[36][0][0]$y$5335 [0] -> \processor.branch_predictor_FSM.bht[36] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7044 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[36][0][0]$y$5335 [1] -> \processor.branch_predictor_FSM.bht[36] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7110 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[18][0][0]$y$5221 [0] -> \processor.branch_predictor_FSM.bht[18] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7111 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[18][0][0]$y$5221 [1] -> \processor.branch_predictor_FSM.bht[18] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7112 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[26][0][0]$y$5269 [0] -> \processor.branch_predictor_FSM.bht[26] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7113 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[26][0][0]$y$5269 [1] -> \processor.branch_predictor_FSM.bht[26] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7114 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[27][0][0]$y$5275 [0] -> \processor.branch_predictor_FSM.bht[27] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7115 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[27][0][0]$y$5275 [1] -> \processor.branch_predictor_FSM.bht[27] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7116 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[19][0][0]$y$5227 [0] -> \processor.branch_predictor_FSM.bht[19] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7117 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[19][0][0]$y$5227 [1] -> \processor.branch_predictor_FSM.bht[19] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7118 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[20][0][0]$y$5233 [0] -> \processor.branch_predictor_FSM.bht[20] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7119 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[20][0][0]$y$5233 [1] -> \processor.branch_predictor_FSM.bht[20] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7120 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[21][0][0]$y$5239 [0] -> \processor.branch_predictor_FSM.bht[21] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7121 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[21][0][0]$y$5239 [1] -> \processor.branch_predictor_FSM.bht[21] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7122 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[22][0][0]$y$5245 [0] -> \processor.branch_predictor_FSM.bht[22] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7123 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[22][0][0]$y$5245 [1] -> \processor.branch_predictor_FSM.bht[22] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7124 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[28][0][0]$y$5281 [0] -> \processor.branch_predictor_FSM.bht[28] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7125 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[28][0][0]$y$5281 [1] -> \processor.branch_predictor_FSM.bht[28] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7126 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[17][0][0]$y$5215 [0] -> \processor.branch_predictor_FSM.bht[17] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7127 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[17][0][0]$y$5215 [1] -> \processor.branch_predictor_FSM.bht[17] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7128 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[29][0][0]$y$5287 [0] -> \processor.branch_predictor_FSM.bht[29] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7129 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[29][0][0]$y$5287 [1] -> \processor.branch_predictor_FSM.bht[29] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7130 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[23][0][0]$y$5251 [0] -> \processor.branch_predictor_FSM.bht[23] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7131 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[23][0][0]$y$5251 [1] -> \processor.branch_predictor_FSM.bht[23] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7132 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[30][0][0]$y$5293 [0] -> \processor.branch_predictor_FSM.bht[30] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7133 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[30][0][0]$y$5293 [1] -> \processor.branch_predictor_FSM.bht[30] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7134 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[25][0][0]$y$5263 [0] -> \processor.branch_predictor_FSM.bht[25] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7135 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[25][0][0]$y$5263 [1] -> \processor.branch_predictor_FSM.bht[25] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7136 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[31][0][0]$y$5299 [0] -> \processor.branch_predictor_FSM.bht[31] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7137 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[31][0][0]$y$5299 [1] -> \processor.branch_predictor_FSM.bht[31] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7138 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[32][0][0]$y$5311 [0] -> \processor.branch_predictor_FSM.bht[32] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7139 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[32][0][0]$y$5311 [1] -> \processor.branch_predictor_FSM.bht[32] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7140 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[33][0][0]$y$5317 [0] -> \processor.branch_predictor_FSM.bht[33] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7141 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[33][0][0]$y$5317 [1] -> \processor.branch_predictor_FSM.bht[33] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7142 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[34][0][0]$y$5323 [0] -> \processor.branch_predictor_FSM.bht[34] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7143 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[34][0][0]$y$5323 [1] -> \processor.branch_predictor_FSM.bht[34] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7144 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[24][0][0]$y$5257 [0] -> \processor.branch_predictor_FSM.bht[24] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7145 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[24][0][0]$y$5257 [1] -> \processor.branch_predictor_FSM.bht[24] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7146 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[35][0][0]$y$5329 [0] -> \processor.branch_predictor_FSM.bht[35] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7147 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[35][0][0]$y$5329 [1] -> \processor.branch_predictor_FSM.bht[35] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7197 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[0][0][0]$y$5057 [0] -> \processor.branch_predictor_FSM.bht[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7198 to $_DFFE_PP_ for $memory\processor.branch_predictor_FSM.bht$wrmux[0][0][0]$y$5057 [1] -> \processor.branch_predictor_FSM.bht[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7301 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [0] -> \data_mem_inst.read_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7302 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [1] -> \data_mem_inst.read_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7303 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [2] -> \data_mem_inst.read_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7304 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [3] -> \data_mem_inst.read_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7305 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [4] -> \data_mem_inst.read_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7306 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [5] -> \data_mem_inst.read_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7307 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [6] -> \data_mem_inst.read_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7308 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [7] -> \data_mem_inst.read_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7309 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [8] -> \data_mem_inst.read_data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7310 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [9] -> \data_mem_inst.read_data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7311 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [10] -> \data_mem_inst.read_data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7312 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [11] -> \data_mem_inst.read_data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7313 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [12] -> \data_mem_inst.read_data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7314 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [13] -> \data_mem_inst.read_data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7315 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [14] -> \data_mem_inst.read_data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7316 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [15] -> \data_mem_inst.read_data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7317 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [16] -> \data_mem_inst.read_data [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7318 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [17] -> \data_mem_inst.read_data [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7319 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [18] -> \data_mem_inst.read_data [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7320 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [19] -> \data_mem_inst.read_data [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7321 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [20] -> \data_mem_inst.read_data [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7322 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [21] -> \data_mem_inst.read_data [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7323 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [22] -> \data_mem_inst.read_data [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7324 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [23] -> \data_mem_inst.read_data [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7325 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [24] -> \data_mem_inst.read_data [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7326 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [25] -> \data_mem_inst.read_data [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7327 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [26] -> \data_mem_inst.read_data [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7328 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [27] -> \data_mem_inst.read_data [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7329 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [28] -> \data_mem_inst.read_data [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7330 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [29] -> \data_mem_inst.read_data [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7331 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [30] -> \data_mem_inst.read_data [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7332 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [31] -> \data_mem_inst.read_data [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7333 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1168.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7783_Y -> \data_mem_inst.clk_stall.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7334 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [0] -> \data_mem_inst.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7335 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [1] -> \data_mem_inst.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7336 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [2] -> \data_mem_inst.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7337 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [3] -> \data_mem_inst.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7338 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [4] -> \data_mem_inst.state [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7339 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [5] -> \data_mem_inst.state [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7340 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [6] -> \data_mem_inst.state [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7341 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [7] -> \data_mem_inst.state [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7342 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [8] -> \data_mem_inst.state [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7343 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [9] -> \data_mem_inst.state [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7344 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [10] -> \data_mem_inst.state [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7345 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [11] -> \data_mem_inst.state [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7346 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [12] -> \data_mem_inst.state [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7347 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [13] -> \data_mem_inst.state [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7348 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [14] -> \data_mem_inst.state [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7349 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [15] -> \data_mem_inst.state [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7350 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [16] -> \data_mem_inst.state [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7351 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [17] -> \data_mem_inst.state [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7352 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [18] -> \data_mem_inst.state [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7353 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [19] -> \data_mem_inst.state [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7354 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [20] -> \data_mem_inst.state [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7355 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [21] -> \data_mem_inst.state [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7356 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [22] -> \data_mem_inst.state [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7357 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [23] -> \data_mem_inst.state [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7358 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [24] -> \data_mem_inst.state [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7359 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [25] -> \data_mem_inst.state [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7360 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [26] -> \data_mem_inst.state [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7361 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [27] -> \data_mem_inst.state [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7362 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [28] -> \data_mem_inst.state [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7363 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [29] -> \data_mem_inst.state [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7364 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [30] -> \data_mem_inst.state [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7365 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$1156.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$7539_Y [31] -> \data_mem_inst.state [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7366 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\memread_buf[0:0] -> \data_mem_inst.memread_buf.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7367 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\memwrite_buf[0:0] -> \data_mem_inst.memwrite_buf.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7368 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [0] -> \data_mem_inst.write_data_buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7369 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [1] -> \data_mem_inst.write_data_buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7370 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [2] -> \data_mem_inst.write_data_buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7371 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [3] -> \data_mem_inst.write_data_buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7372 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [4] -> \data_mem_inst.write_data_buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7373 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [5] -> \data_mem_inst.write_data_buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7374 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [6] -> \data_mem_inst.write_data_buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7375 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [7] -> \data_mem_inst.write_data_buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7376 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [8] -> \data_mem_inst.write_data_buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7377 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [9] -> \data_mem_inst.write_data_buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7378 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [10] -> \data_mem_inst.write_data_buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7379 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [11] -> \data_mem_inst.write_data_buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7380 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [12] -> \data_mem_inst.write_data_buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7381 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [13] -> \data_mem_inst.write_data_buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7382 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [14] -> \data_mem_inst.write_data_buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7383 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [15] -> \data_mem_inst.write_data_buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7384 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [16] -> \data_mem_inst.write_data_buffer [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7385 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [17] -> \data_mem_inst.write_data_buffer [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7386 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [18] -> \data_mem_inst.write_data_buffer [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7387 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [19] -> \data_mem_inst.write_data_buffer [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7388 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [20] -> \data_mem_inst.write_data_buffer [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7389 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [21] -> \data_mem_inst.write_data_buffer [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7390 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [22] -> \data_mem_inst.write_data_buffer [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7391 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [23] -> \data_mem_inst.write_data_buffer [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7392 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [24] -> \data_mem_inst.write_data_buffer [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7393 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [25] -> \data_mem_inst.write_data_buffer [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7394 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [26] -> \data_mem_inst.write_data_buffer [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7395 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [27] -> \data_mem_inst.write_data_buffer [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7396 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [28] -> \data_mem_inst.write_data_buffer [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7397 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [29] -> \data_mem_inst.write_data_buffer [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7398 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [30] -> \data_mem_inst.write_data_buffer [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7399 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [31] -> \data_mem_inst.write_data_buffer [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7400 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [0] -> \data_mem_inst.addr_buf [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7401 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [1] -> \data_mem_inst.addr_buf [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7402 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [2] -> \data_mem_inst.addr_buf [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7403 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [3] -> \data_mem_inst.addr_buf [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7404 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [4] -> \data_mem_inst.addr_buf [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7405 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [5] -> \data_mem_inst.addr_buf [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7406 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [6] -> \data_mem_inst.addr_buf [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7407 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [7] -> \data_mem_inst.addr_buf [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7408 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [8] -> \data_mem_inst.addr_buf [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7409 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [9] -> \data_mem_inst.addr_buf [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7410 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [10] -> \data_mem_inst.addr_buf [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7433 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\sign_mask_buf[3:0] [1] -> \data_mem_inst.sign_mask_buf [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7434 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\sign_mask_buf[3:0] [2] -> \data_mem_inst.sign_mask_buf [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7435 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\sign_mask_buf[3:0] [3] -> \data_mem_inst.sign_mask_buf [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7436 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [0] -> \data_mem_inst.led_reg [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7437 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [1] -> \data_mem_inst.led_reg [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7438 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [2] -> \data_mem_inst.led_reg [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7439 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [3] -> \data_mem_inst.led_reg [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7440 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [4] -> \data_mem_inst.led_reg [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7441 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [5] -> \data_mem_inst.led_reg [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7442 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [6] -> \data_mem_inst.led_reg [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7443 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [7] -> \data_mem_inst.led_reg [7].

25.35. Executing TECHMAP pass (map to technology primitives).

25.35.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

25.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
No more expansions possible.
<suppressed ~1091 debug messages>

25.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1442 debug messages>

25.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

25.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in top.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9289 (SB_DFF): \processor.id_ex_reg.data_out [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9454 (SB_DFF): \processor.id_ex_reg.data_out [165] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8390 (SB_DFF): \processor.if_id_reg.data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9527 (SB_DFF): \processor.mem_wb_reg.data_out [72] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12602 (SB_DFF): \processor.ex_mem_reg.data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12603 (SB_DFF): \processor.ex_mem_reg.data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12604 (SB_DFF): \processor.ex_mem_reg.data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12605 (SB_DFF): \processor.ex_mem_reg.data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12606 (SB_DFF): \processor.ex_mem_reg.data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12607 (SB_DFF): \processor.ex_mem_reg.data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12608 (SB_DFF): \processor.ex_mem_reg.data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12609 (SB_DFF): \processor.ex_mem_reg.data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12610 (SB_DFF): \processor.ex_mem_reg.data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12611 (SB_DFF): \processor.ex_mem_reg.data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12612 (SB_DFF): \processor.ex_mem_reg.data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12613 (SB_DFF): \processor.ex_mem_reg.data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12614 (SB_DFF): \processor.ex_mem_reg.data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12615 (SB_DFF): \processor.ex_mem_reg.data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12616 (SB_DFF): \processor.ex_mem_reg.data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12617 (SB_DFF): \processor.ex_mem_reg.data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12618 (SB_DFF): \processor.ex_mem_reg.data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12619 (SB_DFF): \processor.ex_mem_reg.data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12620 (SB_DFF): \processor.ex_mem_reg.data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12621 (SB_DFF): \processor.ex_mem_reg.data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12622 (SB_DFF): \processor.ex_mem_reg.data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12623 (SB_DFF): \processor.ex_mem_reg.data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12624 (SB_DFF): \processor.ex_mem_reg.data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12625 (SB_DFF): \processor.ex_mem_reg.data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12626 (SB_DFF): \processor.ex_mem_reg.data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12627 (SB_DFF): \processor.ex_mem_reg.data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12628 (SB_DFF): \processor.ex_mem_reg.data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12629 (SB_DFF): \processor.ex_mem_reg.data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12630 (SB_DFF): \processor.ex_mem_reg.data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12631 (SB_DFF): \processor.ex_mem_reg.data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12632 (SB_DFF): \processor.ex_mem_reg.data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12633 (SB_DFF): \processor.ex_mem_reg.data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12634 (SB_DFF): \processor.ex_mem_reg.data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12635 (SB_DFF): \processor.ex_mem_reg.data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12636 (SB_DFF): \processor.ex_mem_reg.data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12637 (SB_DFF): \processor.ex_mem_reg.data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12638 (SB_DFF): \processor.ex_mem_reg.data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12639 (SB_DFF): \processor.ex_mem_reg.data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12640 (SB_DFF): \processor.ex_mem_reg.data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12641 (SB_DFF): \processor.ex_mem_reg.data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12642 (SB_DFF): \processor.ex_mem_reg.data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12643 (SB_DFF): \processor.ex_mem_reg.data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12644 (SB_DFF): \processor.ex_mem_reg.data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12645 (SB_DFF): \processor.ex_mem_reg.data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12646 (SB_DFF): \processor.ex_mem_reg.data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12647 (SB_DFF): \processor.ex_mem_reg.data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12648 (SB_DFF): \processor.ex_mem_reg.data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12649 (SB_DFF): \processor.ex_mem_reg.data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12650 (SB_DFF): \processor.ex_mem_reg.data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12651 (SB_DFF): \processor.ex_mem_reg.data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12652 (SB_DFF): \processor.ex_mem_reg.data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12653 (SB_DFF): \processor.ex_mem_reg.data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12654 (SB_DFF): \processor.ex_mem_reg.data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12655 (SB_DFF): \processor.ex_mem_reg.data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12656 (SB_DFF): \processor.ex_mem_reg.data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12657 (SB_DFF): \processor.ex_mem_reg.data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12658 (SB_DFF): \processor.ex_mem_reg.data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12659 (SB_DFF): \processor.ex_mem_reg.data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12660 (SB_DFF): \processor.ex_mem_reg.data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12661 (SB_DFF): \processor.ex_mem_reg.data_out [64] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12662 (SB_DFF): \processor.ex_mem_reg.data_out [65] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12663 (SB_DFF): \processor.ex_mem_reg.data_out [66] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12664 (SB_DFF): \processor.ex_mem_reg.data_out [67] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12665 (SB_DFF): \processor.ex_mem_reg.data_out [68] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12666 (SB_DFF): \processor.ex_mem_reg.data_out [69] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12667 (SB_DFF): \processor.ex_mem_reg.data_out [70] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9440 (SB_DFF): \processor.id_ex_reg.data_out [151] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9441 (SB_DFF): \processor.id_ex_reg.data_out [152] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9442 (SB_DFF): \processor.id_ex_reg.data_out [153] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9443 (SB_DFF): \processor.id_ex_reg.data_out [154] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9444 (SB_DFF): \processor.id_ex_reg.data_out [155] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8377 (SB_DFF): \processor.if_id_reg.data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6742 (SB_DFFE): \processor.branch_predictor_FSM.bht[1] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8376 (SB_DFF): \processor.if_id_reg.data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8374 (SB_DFF): \processor.if_id_reg.data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8371 (SB_DFF): \processor.if_id_reg.data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6743 (SB_DFFE): \processor.branch_predictor_FSM.bht[1] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8379 (SB_DFF): \processor.if_id_reg.data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8378 (SB_DFF): \processor.if_id_reg.data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8373 (SB_DFF): \processor.if_id_reg.data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8383 (SB_DFF): \processor.if_id_reg.data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6746 (SB_DFFE): \processor.branch_predictor_FSM.bht[2] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8370 (SB_DFF): \processor.if_id_reg.data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6748 (SB_DFFE): \processor.branch_predictor_FSM.bht[15] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6752 (SB_DFFE): \processor.branch_predictor_FSM.bht[14] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8385 (SB_DFF): \processor.if_id_reg.data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8382 (SB_DFF): \processor.if_id_reg.data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8387 (SB_DFF): \processor.if_id_reg.data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8391 (SB_DFF): \processor.if_id_reg.data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8386 (SB_DFF): \processor.if_id_reg.data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8388 (SB_DFF): \processor.if_id_reg.data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8389 (SB_DFF): \processor.if_id_reg.data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8369 (SB_DFF): \processor.if_id_reg.data_out [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7023 (SB_DFFE): \processor.branch_predictor_FSM.bht[4] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8392 (SB_DFF): \processor.if_id_reg.data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8393 (SB_DFF): \processor.if_id_reg.data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8394 (SB_DFF): \processor.if_id_reg.data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8395 (SB_DFF): \processor.if_id_reg.data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8396 (SB_DFF): \processor.if_id_reg.data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8397 (SB_DFF): \processor.if_id_reg.data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8398 (SB_DFF): \processor.if_id_reg.data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8399 (SB_DFF): \processor.if_id_reg.data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12597 (SB_DFF): \processor.ex_mem_reg.data_out [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12668 (SB_DFF): \processor.ex_mem_reg.data_out [71] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12896 (SB_DFFE): \processor.branch_predictor_FSM.bht[44] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12873 (SB_DFFE): \processor.branch_predictor_FSM.bht[37] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12883 (SB_DFFE): \processor.branch_predictor_FSM.bht[38] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12884 (SB_DFFE): \processor.branch_predictor_FSM.bht[38] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12885 (SB_DFFE): \processor.branch_predictor_FSM.bht[39] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12886 (SB_DFFE): \processor.branch_predictor_FSM.bht[39] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12887 (SB_DFFE): \processor.branch_predictor_FSM.bht[40] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12888 (SB_DFFE): \processor.branch_predictor_FSM.bht[40] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12889 (SB_DFFE): \processor.branch_predictor_FSM.bht[41] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12890 (SB_DFFE): \processor.branch_predictor_FSM.bht[41] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12891 (SB_DFFE): \processor.branch_predictor_FSM.bht[42] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12892 (SB_DFFE): \processor.branch_predictor_FSM.bht[42] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12893 (SB_DFFE): \processor.branch_predictor_FSM.bht[43] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12872 (SB_DFFE): \processor.branch_predictor_FSM.bht[37] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12895 (SB_DFFE): \processor.branch_predictor_FSM.bht[44] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12894 (SB_DFFE): \processor.branch_predictor_FSM.bht[43] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12897 (SB_DFFE): \processor.branch_predictor_FSM.bht[45] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12898 (SB_DFFE): \processor.branch_predictor_FSM.bht[45] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12899 (SB_DFFE): \processor.branch_predictor_FSM.bht[46] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12900 (SB_DFFE): \processor.branch_predictor_FSM.bht[46] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12901 (SB_DFFE): \processor.branch_predictor_FSM.bht[47] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12902 (SB_DFFE): \processor.branch_predictor_FSM.bht[47] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12903 (SB_DFFE): \processor.branch_predictor_FSM.bht[48] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12904 (SB_DFFE): \processor.branch_predictor_FSM.bht[48] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12905 (SB_DFFE): \processor.branch_predictor_FSM.bht[49] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12906 (SB_DFFE): \processor.branch_predictor_FSM.bht[49] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12907 (SB_DFFE): \processor.branch_predictor_FSM.bht[50] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12908 (SB_DFFE): \processor.branch_predictor_FSM.bht[50] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12909 (SB_DFFE): \processor.branch_predictor_FSM.bht[51] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12910 (SB_DFFE): \processor.branch_predictor_FSM.bht[51] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12911 (SB_DFFE): \processor.branch_predictor_FSM.bht[52] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12912 (SB_DFFE): \processor.branch_predictor_FSM.bht[52] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12913 (SB_DFFE): \processor.branch_predictor_FSM.bht[53] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12914 (SB_DFFE): \processor.branch_predictor_FSM.bht[53] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12915 (SB_DFFE): \processor.branch_predictor_FSM.bht[54] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12916 (SB_DFFE): \processor.branch_predictor_FSM.bht[54] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12917 (SB_DFFE): \processor.branch_predictor_FSM.bht[55] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12918 (SB_DFFE): \processor.branch_predictor_FSM.bht[55] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12919 (SB_DFFE): \processor.branch_predictor_FSM.bht[56] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12920 (SB_DFFE): \processor.branch_predictor_FSM.bht[56] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12921 (SB_DFFE): \processor.branch_predictor_FSM.bht[57] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12922 (SB_DFFE): \processor.branch_predictor_FSM.bht[57] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12923 (SB_DFFE): \processor.branch_predictor_FSM.bht[58] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12924 (SB_DFFE): \processor.branch_predictor_FSM.bht[58] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12925 (SB_DFFE): \processor.branch_predictor_FSM.bht[59] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12926 (SB_DFFE): \processor.branch_predictor_FSM.bht[59] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12927 (SB_DFFE): \processor.branch_predictor_FSM.bht[60] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12928 (SB_DFFE): \processor.branch_predictor_FSM.bht[60] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12929 (SB_DFFE): \processor.branch_predictor_FSM.bht[61] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12930 (SB_DFFE): \processor.branch_predictor_FSM.bht[61] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12931 (SB_DFFE): \processor.branch_predictor_FSM.bht[62] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12932 (SB_DFFE): \processor.branch_predictor_FSM.bht[62] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12933 (SB_DFFE): \processor.branch_predictor_FSM.bht[63] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12934 (SB_DFFE): \processor.branch_predictor_FSM.bht[63] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12935 (SB_DFFE): \processor.branch_predictor_FSM.bht[64] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12936 (SB_DFFE): \processor.branch_predictor_FSM.bht[64] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12937 (SB_DFFE): \processor.branch_predictor_FSM.bht[65] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12938 (SB_DFFE): \processor.branch_predictor_FSM.bht[65] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12939 (SB_DFFE): \processor.branch_predictor_FSM.bht[66] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12940 (SB_DFFE): \processor.branch_predictor_FSM.bht[66] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12941 (SB_DFFE): \processor.branch_predictor_FSM.bht[67] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12942 (SB_DFFE): \processor.branch_predictor_FSM.bht[67] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12943 (SB_DFFE): \processor.branch_predictor_FSM.bht[68] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12944 (SB_DFFE): \processor.branch_predictor_FSM.bht[68] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12945 (SB_DFFE): \processor.branch_predictor_FSM.bht[69] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12946 (SB_DFFE): \processor.branch_predictor_FSM.bht[69] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12947 (SB_DFFE): \processor.branch_predictor_FSM.bht[70] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12948 (SB_DFFE): \processor.branch_predictor_FSM.bht[70] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12949 (SB_DFFE): \processor.branch_predictor_FSM.bht[71] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12950 (SB_DFFE): \processor.branch_predictor_FSM.bht[71] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12951 (SB_DFFE): \processor.branch_predictor_FSM.bht[72] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12952 (SB_DFFE): \processor.branch_predictor_FSM.bht[72] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12953 (SB_DFFE): \processor.branch_predictor_FSM.bht[73] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12954 (SB_DFFE): \processor.branch_predictor_FSM.bht[73] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12955 (SB_DFFE): \processor.branch_predictor_FSM.bht[74] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12956 (SB_DFFE): \processor.branch_predictor_FSM.bht[74] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12957 (SB_DFFE): \processor.branch_predictor_FSM.bht[75] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12958 (SB_DFFE): \processor.branch_predictor_FSM.bht[75] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12959 (SB_DFFE): \processor.branch_predictor_FSM.bht[76] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12960 (SB_DFFE): \processor.branch_predictor_FSM.bht[76] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12961 (SB_DFFE): \processor.branch_predictor_FSM.bht[77] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12962 (SB_DFFE): \processor.branch_predictor_FSM.bht[77] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12963 (SB_DFFE): \processor.branch_predictor_FSM.bht[78] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12964 (SB_DFFE): \processor.branch_predictor_FSM.bht[78] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12965 (SB_DFFE): \processor.branch_predictor_FSM.bht[79] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12966 (SB_DFFE): \processor.branch_predictor_FSM.bht[79] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12967 (SB_DFFE): \processor.branch_predictor_FSM.bht[80] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12968 (SB_DFFE): \processor.branch_predictor_FSM.bht[80] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12969 (SB_DFFE): \processor.branch_predictor_FSM.bht[81] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12970 (SB_DFFE): \processor.branch_predictor_FSM.bht[81] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12971 (SB_DFFE): \processor.branch_predictor_FSM.bht[82] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12972 (SB_DFFE): \processor.branch_predictor_FSM.bht[82] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12973 (SB_DFFE): \processor.branch_predictor_FSM.bht[83] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12974 (SB_DFFE): \processor.branch_predictor_FSM.bht[83] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12975 (SB_DFFE): \processor.branch_predictor_FSM.bht[84] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12976 (SB_DFFE): \processor.branch_predictor_FSM.bht[84] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12977 (SB_DFFE): \processor.branch_predictor_FSM.bht[85] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12978 (SB_DFFE): \processor.branch_predictor_FSM.bht[85] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12979 (SB_DFFE): \processor.branch_predictor_FSM.bht[86] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12980 (SB_DFFE): \processor.branch_predictor_FSM.bht[86] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12981 (SB_DFFE): \processor.branch_predictor_FSM.bht[87] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12982 (SB_DFFE): \processor.branch_predictor_FSM.bht[87] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12983 (SB_DFFE): \processor.branch_predictor_FSM.bht[88] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12984 (SB_DFFE): \processor.branch_predictor_FSM.bht[88] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12985 (SB_DFFE): \processor.branch_predictor_FSM.bht[89] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12986 (SB_DFFE): \processor.branch_predictor_FSM.bht[89] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12987 (SB_DFFE): \processor.branch_predictor_FSM.bht[90] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12988 (SB_DFFE): \processor.branch_predictor_FSM.bht[90] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12989 (SB_DFFE): \processor.branch_predictor_FSM.bht[91] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12990 (SB_DFFE): \processor.branch_predictor_FSM.bht[91] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12991 (SB_DFFE): \processor.branch_predictor_FSM.bht[92] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12992 (SB_DFFE): \processor.branch_predictor_FSM.bht[92] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12993 (SB_DFFE): \processor.branch_predictor_FSM.bht[93] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12994 (SB_DFFE): \processor.branch_predictor_FSM.bht[93] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12995 (SB_DFFE): \processor.branch_predictor_FSM.bht[94] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12996 (SB_DFFE): \processor.branch_predictor_FSM.bht[94] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12997 (SB_DFFE): \processor.branch_predictor_FSM.bht[95] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12998 (SB_DFFE): \processor.branch_predictor_FSM.bht[95] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12999 (SB_DFFE): \processor.branch_predictor_FSM.bht[96] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13000 (SB_DFFE): \processor.branch_predictor_FSM.bht[96] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13001 (SB_DFFE): \processor.branch_predictor_FSM.bht[97] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13002 (SB_DFFE): \processor.branch_predictor_FSM.bht[97] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13003 (SB_DFFE): \processor.branch_predictor_FSM.bht[98] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13004 (SB_DFFE): \processor.branch_predictor_FSM.bht[98] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13005 (SB_DFFE): \processor.branch_predictor_FSM.bht[99] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13006 (SB_DFFE): \processor.branch_predictor_FSM.bht[99] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13007 (SB_DFFE): \processor.branch_predictor_FSM.bht[100] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13008 (SB_DFFE): \processor.branch_predictor_FSM.bht[100] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13009 (SB_DFFE): \processor.branch_predictor_FSM.bht[101] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13010 (SB_DFFE): \processor.branch_predictor_FSM.bht[101] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13011 (SB_DFFE): \processor.branch_predictor_FSM.bht[102] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13012 (SB_DFFE): \processor.branch_predictor_FSM.bht[102] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13013 (SB_DFFE): \processor.branch_predictor_FSM.bht[103] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13014 (SB_DFFE): \processor.branch_predictor_FSM.bht[103] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13015 (SB_DFFE): \processor.branch_predictor_FSM.bht[104] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13016 (SB_DFFE): \processor.branch_predictor_FSM.bht[104] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13017 (SB_DFFE): \processor.branch_predictor_FSM.bht[105] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13018 (SB_DFFE): \processor.branch_predictor_FSM.bht[105] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13019 (SB_DFFE): \processor.branch_predictor_FSM.bht[106] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13020 (SB_DFFE): \processor.branch_predictor_FSM.bht[106] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13021 (SB_DFFE): \processor.branch_predictor_FSM.bht[107] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13022 (SB_DFFE): \processor.branch_predictor_FSM.bht[107] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13023 (SB_DFFE): \processor.branch_predictor_FSM.bht[108] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13024 (SB_DFFE): \processor.branch_predictor_FSM.bht[108] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13025 (SB_DFFE): \processor.branch_predictor_FSM.bht[109] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13026 (SB_DFFE): \processor.branch_predictor_FSM.bht[109] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13027 (SB_DFFE): \processor.branch_predictor_FSM.bht[110] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13028 (SB_DFFE): \processor.branch_predictor_FSM.bht[110] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13029 (SB_DFFE): \processor.branch_predictor_FSM.bht[111] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13030 (SB_DFFE): \processor.branch_predictor_FSM.bht[111] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13031 (SB_DFFE): \processor.branch_predictor_FSM.bht[112] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13032 (SB_DFFE): \processor.branch_predictor_FSM.bht[112] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13033 (SB_DFFE): \processor.branch_predictor_FSM.bht[113] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13034 (SB_DFFE): \processor.branch_predictor_FSM.bht[113] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13035 (SB_DFFE): \processor.branch_predictor_FSM.bht[114] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13036 (SB_DFFE): \processor.branch_predictor_FSM.bht[114] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13037 (SB_DFFE): \processor.branch_predictor_FSM.bht[115] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13038 (SB_DFFE): \processor.branch_predictor_FSM.bht[115] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13039 (SB_DFFE): \processor.branch_predictor_FSM.bht[116] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13040 (SB_DFFE): \processor.branch_predictor_FSM.bht[116] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13041 (SB_DFFE): \processor.branch_predictor_FSM.bht[117] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13042 (SB_DFFE): \processor.branch_predictor_FSM.bht[117] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13043 (SB_DFFE): \processor.branch_predictor_FSM.bht[118] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13044 (SB_DFFE): \processor.branch_predictor_FSM.bht[118] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13045 (SB_DFFE): \processor.branch_predictor_FSM.bht[119] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13046 (SB_DFFE): \processor.branch_predictor_FSM.bht[119] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13047 (SB_DFFE): \processor.branch_predictor_FSM.bht[120] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13048 (SB_DFFE): \processor.branch_predictor_FSM.bht[120] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13049 (SB_DFFE): \processor.branch_predictor_FSM.bht[121] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13050 (SB_DFFE): \processor.branch_predictor_FSM.bht[121] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13051 (SB_DFFE): \processor.branch_predictor_FSM.bht[122] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13052 (SB_DFFE): \processor.branch_predictor_FSM.bht[122] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13053 (SB_DFFE): \processor.branch_predictor_FSM.bht[123] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13054 (SB_DFFE): \processor.branch_predictor_FSM.bht[123] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13055 (SB_DFFE): \processor.branch_predictor_FSM.bht[124] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13056 (SB_DFFE): \processor.branch_predictor_FSM.bht[124] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13057 (SB_DFFE): \processor.branch_predictor_FSM.bht[125] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13058 (SB_DFFE): \processor.branch_predictor_FSM.bht[125] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13059 (SB_DFFE): \processor.branch_predictor_FSM.bht[126] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13060 (SB_DFFE): \processor.branch_predictor_FSM.bht[126] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13061 (SB_DFFE): \processor.branch_predictor_FSM.bht[127] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13062 (SB_DFFE): \processor.branch_predictor_FSM.bht[127] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13063 (SB_DFFE): \processor.branch_predictor_FSM.bht[128] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13064 (SB_DFFE): \processor.branch_predictor_FSM.bht[128] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13065 (SB_DFFE): \processor.branch_predictor_FSM.bht[129] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13066 (SB_DFFE): \processor.branch_predictor_FSM.bht[129] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13067 (SB_DFFE): \processor.branch_predictor_FSM.bht[130] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13068 (SB_DFFE): \processor.branch_predictor_FSM.bht[130] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13069 (SB_DFFE): \processor.branch_predictor_FSM.bht[131] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13070 (SB_DFFE): \processor.branch_predictor_FSM.bht[131] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13071 (SB_DFFE): \processor.branch_predictor_FSM.bht[132] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13072 (SB_DFFE): \processor.branch_predictor_FSM.bht[132] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13073 (SB_DFFE): \processor.branch_predictor_FSM.bht[133] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13074 (SB_DFFE): \processor.branch_predictor_FSM.bht[133] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13075 (SB_DFFE): \processor.branch_predictor_FSM.bht[134] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13076 (SB_DFFE): \processor.branch_predictor_FSM.bht[134] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13077 (SB_DFFE): \processor.branch_predictor_FSM.bht[135] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13078 (SB_DFFE): \processor.branch_predictor_FSM.bht[135] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13079 (SB_DFFE): \processor.branch_predictor_FSM.bht[136] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13080 (SB_DFFE): \processor.branch_predictor_FSM.bht[136] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13081 (SB_DFFE): \processor.branch_predictor_FSM.bht[137] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13082 (SB_DFFE): \processor.branch_predictor_FSM.bht[137] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13083 (SB_DFFE): \processor.branch_predictor_FSM.bht[138] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13084 (SB_DFFE): \processor.branch_predictor_FSM.bht[138] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13085 (SB_DFFE): \processor.branch_predictor_FSM.bht[139] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13086 (SB_DFFE): \processor.branch_predictor_FSM.bht[139] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13087 (SB_DFFE): \processor.branch_predictor_FSM.bht[140] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13088 (SB_DFFE): \processor.branch_predictor_FSM.bht[140] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13089 (SB_DFFE): \processor.branch_predictor_FSM.bht[141] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13090 (SB_DFFE): \processor.branch_predictor_FSM.bht[141] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13091 (SB_DFFE): \processor.branch_predictor_FSM.bht[142] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13092 (SB_DFFE): \processor.branch_predictor_FSM.bht[142] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13093 (SB_DFFE): \processor.branch_predictor_FSM.bht[143] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13094 (SB_DFFE): \processor.branch_predictor_FSM.bht[143] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13095 (SB_DFFE): \processor.branch_predictor_FSM.bht[144] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13096 (SB_DFFE): \processor.branch_predictor_FSM.bht[144] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13097 (SB_DFFE): \processor.branch_predictor_FSM.bht[145] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13098 (SB_DFFE): \processor.branch_predictor_FSM.bht[145] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13099 (SB_DFFE): \processor.branch_predictor_FSM.bht[146] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13100 (SB_DFFE): \processor.branch_predictor_FSM.bht[146] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13101 (SB_DFFE): \processor.branch_predictor_FSM.bht[147] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13102 (SB_DFFE): \processor.branch_predictor_FSM.bht[147] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13103 (SB_DFFE): \processor.branch_predictor_FSM.bht[148] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13104 (SB_DFFE): \processor.branch_predictor_FSM.bht[148] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13105 (SB_DFFE): \processor.branch_predictor_FSM.bht[149] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13106 (SB_DFFE): \processor.branch_predictor_FSM.bht[149] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13107 (SB_DFFE): \processor.branch_predictor_FSM.bht[150] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13108 (SB_DFFE): \processor.branch_predictor_FSM.bht[150] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13109 (SB_DFFE): \processor.branch_predictor_FSM.bht[151] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13110 (SB_DFFE): \processor.branch_predictor_FSM.bht[151] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13111 (SB_DFFE): \processor.branch_predictor_FSM.bht[152] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13112 (SB_DFFE): \processor.branch_predictor_FSM.bht[152] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13113 (SB_DFFE): \processor.branch_predictor_FSM.bht[153] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13114 (SB_DFFE): \processor.branch_predictor_FSM.bht[153] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13115 (SB_DFFE): \processor.branch_predictor_FSM.bht[154] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13116 (SB_DFFE): \processor.branch_predictor_FSM.bht[154] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13117 (SB_DFFE): \processor.branch_predictor_FSM.bht[155] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13118 (SB_DFFE): \processor.branch_predictor_FSM.bht[155] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13119 (SB_DFFE): \processor.branch_predictor_FSM.bht[156] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13120 (SB_DFFE): \processor.branch_predictor_FSM.bht[156] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13121 (SB_DFFE): \processor.branch_predictor_FSM.bht[157] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13122 (SB_DFFE): \processor.branch_predictor_FSM.bht[157] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13123 (SB_DFFE): \processor.branch_predictor_FSM.bht[158] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13124 (SB_DFFE): \processor.branch_predictor_FSM.bht[158] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13125 (SB_DFFE): \processor.branch_predictor_FSM.bht[159] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13126 (SB_DFFE): \processor.branch_predictor_FSM.bht[159] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13127 (SB_DFFE): \processor.branch_predictor_FSM.bht[160] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13128 (SB_DFFE): \processor.branch_predictor_FSM.bht[160] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13129 (SB_DFFE): \processor.branch_predictor_FSM.bht[161] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13130 (SB_DFFE): \processor.branch_predictor_FSM.bht[161] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13131 (SB_DFFE): \processor.branch_predictor_FSM.bht[162] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13132 (SB_DFFE): \processor.branch_predictor_FSM.bht[162] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13133 (SB_DFFE): \processor.branch_predictor_FSM.bht[163] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13134 (SB_DFFE): \processor.branch_predictor_FSM.bht[163] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13135 (SB_DFFE): \processor.branch_predictor_FSM.bht[164] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13136 (SB_DFFE): \processor.branch_predictor_FSM.bht[164] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13137 (SB_DFFE): \processor.branch_predictor_FSM.bht[165] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13138 (SB_DFFE): \processor.branch_predictor_FSM.bht[165] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13139 (SB_DFFE): \processor.branch_predictor_FSM.bht[166] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13140 (SB_DFFE): \processor.branch_predictor_FSM.bht[166] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13141 (SB_DFFE): \processor.branch_predictor_FSM.bht[167] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13142 (SB_DFFE): \processor.branch_predictor_FSM.bht[167] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13143 (SB_DFFE): \processor.branch_predictor_FSM.bht[168] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13144 (SB_DFFE): \processor.branch_predictor_FSM.bht[168] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13145 (SB_DFFE): \processor.branch_predictor_FSM.bht[169] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13146 (SB_DFFE): \processor.branch_predictor_FSM.bht[169] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13147 (SB_DFFE): \processor.branch_predictor_FSM.bht[170] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13148 (SB_DFFE): \processor.branch_predictor_FSM.bht[170] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13149 (SB_DFFE): \processor.branch_predictor_FSM.bht[171] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13150 (SB_DFFE): \processor.branch_predictor_FSM.bht[171] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13151 (SB_DFFE): \processor.branch_predictor_FSM.bht[172] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13152 (SB_DFFE): \processor.branch_predictor_FSM.bht[172] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13153 (SB_DFFE): \processor.branch_predictor_FSM.bht[173] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13154 (SB_DFFE): \processor.branch_predictor_FSM.bht[173] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13155 (SB_DFFE): \processor.branch_predictor_FSM.bht[174] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13156 (SB_DFFE): \processor.branch_predictor_FSM.bht[174] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13157 (SB_DFFE): \processor.branch_predictor_FSM.bht[175] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13158 (SB_DFFE): \processor.branch_predictor_FSM.bht[175] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13159 (SB_DFFE): \processor.branch_predictor_FSM.bht[176] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13160 (SB_DFFE): \processor.branch_predictor_FSM.bht[176] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13161 (SB_DFFE): \processor.branch_predictor_FSM.bht[177] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13162 (SB_DFFE): \processor.branch_predictor_FSM.bht[177] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13163 (SB_DFFE): \processor.branch_predictor_FSM.bht[178] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13164 (SB_DFFE): \processor.branch_predictor_FSM.bht[178] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13165 (SB_DFFE): \processor.branch_predictor_FSM.bht[179] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13166 (SB_DFFE): \processor.branch_predictor_FSM.bht[179] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13167 (SB_DFFE): \processor.branch_predictor_FSM.bht[180] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13168 (SB_DFFE): \processor.branch_predictor_FSM.bht[180] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13169 (SB_DFFE): \processor.branch_predictor_FSM.bht[181] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13170 (SB_DFFE): \processor.branch_predictor_FSM.bht[181] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13171 (SB_DFFE): \processor.branch_predictor_FSM.bht[182] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13172 (SB_DFFE): \processor.branch_predictor_FSM.bht[182] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13173 (SB_DFFE): \processor.branch_predictor_FSM.bht[183] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13174 (SB_DFFE): \processor.branch_predictor_FSM.bht[183] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13175 (SB_DFFE): \processor.branch_predictor_FSM.bht[184] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13176 (SB_DFFE): \processor.branch_predictor_FSM.bht[184] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13177 (SB_DFFE): \processor.branch_predictor_FSM.bht[185] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13178 (SB_DFFE): \processor.branch_predictor_FSM.bht[185] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13179 (SB_DFFE): \processor.branch_predictor_FSM.bht[186] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13180 (SB_DFFE): \processor.branch_predictor_FSM.bht[186] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13181 (SB_DFFE): \processor.branch_predictor_FSM.bht[187] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13182 (SB_DFFE): \processor.branch_predictor_FSM.bht[187] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13183 (SB_DFFE): \processor.branch_predictor_FSM.bht[188] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13184 (SB_DFFE): \processor.branch_predictor_FSM.bht[188] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13185 (SB_DFFE): \processor.branch_predictor_FSM.bht[189] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13186 (SB_DFFE): \processor.branch_predictor_FSM.bht[189] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13187 (SB_DFFE): \processor.branch_predictor_FSM.bht[190] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13188 (SB_DFFE): \processor.branch_predictor_FSM.bht[190] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13189 (SB_DFFE): \processor.branch_predictor_FSM.bht[191] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13190 (SB_DFFE): \processor.branch_predictor_FSM.bht[191] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13191 (SB_DFFE): \processor.branch_predictor_FSM.bht[192] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13192 (SB_DFFE): \processor.branch_predictor_FSM.bht[192] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13193 (SB_DFFE): \processor.branch_predictor_FSM.bht[193] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13194 (SB_DFFE): \processor.branch_predictor_FSM.bht[193] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13195 (SB_DFFE): \processor.branch_predictor_FSM.bht[194] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13196 (SB_DFFE): \processor.branch_predictor_FSM.bht[194] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13197 (SB_DFFE): \processor.branch_predictor_FSM.bht[195] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13198 (SB_DFFE): \processor.branch_predictor_FSM.bht[195] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13199 (SB_DFFE): \processor.branch_predictor_FSM.bht[196] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13200 (SB_DFFE): \processor.branch_predictor_FSM.bht[196] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13201 (SB_DFFE): \processor.branch_predictor_FSM.bht[197] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13202 (SB_DFFE): \processor.branch_predictor_FSM.bht[197] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13203 (SB_DFFE): \processor.branch_predictor_FSM.bht[198] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13204 (SB_DFFE): \processor.branch_predictor_FSM.bht[198] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13205 (SB_DFFE): \processor.branch_predictor_FSM.bht[199] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13206 (SB_DFFE): \processor.branch_predictor_FSM.bht[199] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13207 (SB_DFFE): \processor.branch_predictor_FSM.bht[200] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13208 (SB_DFFE): \processor.branch_predictor_FSM.bht[200] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13209 (SB_DFFE): \processor.branch_predictor_FSM.bht[201] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13210 (SB_DFFE): \processor.branch_predictor_FSM.bht[201] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13211 (SB_DFFE): \processor.branch_predictor_FSM.bht[202] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13212 (SB_DFFE): \processor.branch_predictor_FSM.bht[202] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13213 (SB_DFFE): \processor.branch_predictor_FSM.bht[203] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13214 (SB_DFFE): \processor.branch_predictor_FSM.bht[203] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13215 (SB_DFFE): \processor.branch_predictor_FSM.bht[204] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13216 (SB_DFFE): \processor.branch_predictor_FSM.bht[204] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13217 (SB_DFFE): \processor.branch_predictor_FSM.bht[205] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13218 (SB_DFFE): \processor.branch_predictor_FSM.bht[205] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13219 (SB_DFFE): \processor.branch_predictor_FSM.bht[206] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13220 (SB_DFFE): \processor.branch_predictor_FSM.bht[206] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13221 (SB_DFFE): \processor.branch_predictor_FSM.bht[207] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13222 (SB_DFFE): \processor.branch_predictor_FSM.bht[207] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13223 (SB_DFFE): \processor.branch_predictor_FSM.bht[208] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13224 (SB_DFFE): \processor.branch_predictor_FSM.bht[208] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13225 (SB_DFFE): \processor.branch_predictor_FSM.bht[209] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13226 (SB_DFFE): \processor.branch_predictor_FSM.bht[209] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13227 (SB_DFFE): \processor.branch_predictor_FSM.bht[210] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13228 (SB_DFFE): \processor.branch_predictor_FSM.bht[210] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13229 (SB_DFFE): \processor.branch_predictor_FSM.bht[211] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13230 (SB_DFFE): \processor.branch_predictor_FSM.bht[211] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13231 (SB_DFFE): \processor.branch_predictor_FSM.bht[212] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13232 (SB_DFFE): \processor.branch_predictor_FSM.bht[212] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13233 (SB_DFFE): \processor.branch_predictor_FSM.bht[213] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13234 (SB_DFFE): \processor.branch_predictor_FSM.bht[213] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13235 (SB_DFFE): \processor.branch_predictor_FSM.bht[214] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13236 (SB_DFFE): \processor.branch_predictor_FSM.bht[214] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13237 (SB_DFFE): \processor.branch_predictor_FSM.bht[215] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13238 (SB_DFFE): \processor.branch_predictor_FSM.bht[215] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13239 (SB_DFFE): \processor.branch_predictor_FSM.bht[216] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13240 (SB_DFFE): \processor.branch_predictor_FSM.bht[216] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13241 (SB_DFFE): \processor.branch_predictor_FSM.bht[217] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13242 (SB_DFFE): \processor.branch_predictor_FSM.bht[217] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13243 (SB_DFFE): \processor.branch_predictor_FSM.bht[218] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13244 (SB_DFFE): \processor.branch_predictor_FSM.bht[218] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13245 (SB_DFFE): \processor.branch_predictor_FSM.bht[219] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13246 (SB_DFFE): \processor.branch_predictor_FSM.bht[219] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13247 (SB_DFFE): \processor.branch_predictor_FSM.bht[220] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13248 (SB_DFFE): \processor.branch_predictor_FSM.bht[220] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13249 (SB_DFFE): \processor.branch_predictor_FSM.bht[221] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13250 (SB_DFFE): \processor.branch_predictor_FSM.bht[221] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13251 (SB_DFFE): \processor.branch_predictor_FSM.bht[222] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13252 (SB_DFFE): \processor.branch_predictor_FSM.bht[222] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13253 (SB_DFFE): \processor.branch_predictor_FSM.bht[223] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13254 (SB_DFFE): \processor.branch_predictor_FSM.bht[223] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13255 (SB_DFFE): \processor.branch_predictor_FSM.bht[224] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13256 (SB_DFFE): \processor.branch_predictor_FSM.bht[224] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13257 (SB_DFFE): \processor.branch_predictor_FSM.bht[225] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13258 (SB_DFFE): \processor.branch_predictor_FSM.bht[225] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13259 (SB_DFFE): \processor.branch_predictor_FSM.bht[226] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13260 (SB_DFFE): \processor.branch_predictor_FSM.bht[226] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13261 (SB_DFFE): \processor.branch_predictor_FSM.bht[227] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13262 (SB_DFFE): \processor.branch_predictor_FSM.bht[227] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13263 (SB_DFFE): \processor.branch_predictor_FSM.bht[228] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13264 (SB_DFFE): \processor.branch_predictor_FSM.bht[228] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13265 (SB_DFFE): \processor.branch_predictor_FSM.bht[229] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13266 (SB_DFFE): \processor.branch_predictor_FSM.bht[229] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13267 (SB_DFFE): \processor.branch_predictor_FSM.bht[230] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13268 (SB_DFFE): \processor.branch_predictor_FSM.bht[230] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13269 (SB_DFFE): \processor.branch_predictor_FSM.bht[231] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13270 (SB_DFFE): \processor.branch_predictor_FSM.bht[231] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13271 (SB_DFFE): \processor.branch_predictor_FSM.bht[232] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13272 (SB_DFFE): \processor.branch_predictor_FSM.bht[232] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13273 (SB_DFFE): \processor.branch_predictor_FSM.bht[233] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13274 (SB_DFFE): \processor.branch_predictor_FSM.bht[233] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13275 (SB_DFFE): \processor.branch_predictor_FSM.bht[234] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13276 (SB_DFFE): \processor.branch_predictor_FSM.bht[234] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13277 (SB_DFFE): \processor.branch_predictor_FSM.bht[235] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13278 (SB_DFFE): \processor.branch_predictor_FSM.bht[235] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13279 (SB_DFFE): \processor.branch_predictor_FSM.bht[236] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13280 (SB_DFFE): \processor.branch_predictor_FSM.bht[236] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13281 (SB_DFFE): \processor.branch_predictor_FSM.bht[237] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13282 (SB_DFFE): \processor.branch_predictor_FSM.bht[237] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13283 (SB_DFFE): \processor.branch_predictor_FSM.bht[238] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13284 (SB_DFFE): \processor.branch_predictor_FSM.bht[238] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13285 (SB_DFFE): \processor.branch_predictor_FSM.bht[239] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13286 (SB_DFFE): \processor.branch_predictor_FSM.bht[239] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13287 (SB_DFFE): \processor.branch_predictor_FSM.bht[240] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13288 (SB_DFFE): \processor.branch_predictor_FSM.bht[240] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13289 (SB_DFFE): \processor.branch_predictor_FSM.bht[241] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13290 (SB_DFFE): \processor.branch_predictor_FSM.bht[241] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13291 (SB_DFFE): \processor.branch_predictor_FSM.bht[242] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13292 (SB_DFFE): \processor.branch_predictor_FSM.bht[242] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13293 (SB_DFFE): \processor.branch_predictor_FSM.bht[243] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13294 (SB_DFFE): \processor.branch_predictor_FSM.bht[243] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13295 (SB_DFFE): \processor.branch_predictor_FSM.bht[244] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13296 (SB_DFFE): \processor.branch_predictor_FSM.bht[244] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13297 (SB_DFFE): \processor.branch_predictor_FSM.bht[245] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13298 (SB_DFFE): \processor.branch_predictor_FSM.bht[245] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13299 (SB_DFFE): \processor.branch_predictor_FSM.bht[246] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13300 (SB_DFFE): \processor.branch_predictor_FSM.bht[246] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13301 (SB_DFFE): \processor.branch_predictor_FSM.bht[247] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13302 (SB_DFFE): \processor.branch_predictor_FSM.bht[247] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13303 (SB_DFFE): \processor.branch_predictor_FSM.bht[248] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13304 (SB_DFFE): \processor.branch_predictor_FSM.bht[248] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13305 (SB_DFFE): \processor.branch_predictor_FSM.bht[249] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13306 (SB_DFFE): \processor.branch_predictor_FSM.bht[249] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13307 (SB_DFFE): \processor.branch_predictor_FSM.bht[250] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13308 (SB_DFFE): \processor.branch_predictor_FSM.bht[250] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13309 (SB_DFFE): \processor.branch_predictor_FSM.bht[251] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13310 (SB_DFFE): \processor.branch_predictor_FSM.bht[251] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13311 (SB_DFFE): \processor.branch_predictor_FSM.bht[252] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13312 (SB_DFFE): \processor.branch_predictor_FSM.bht[252] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13313 (SB_DFFE): \processor.branch_predictor_FSM.bht[253] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13314 (SB_DFFE): \processor.branch_predictor_FSM.bht[253] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13315 (SB_DFFE): \processor.branch_predictor_FSM.bht[254] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13316 (SB_DFFE): \processor.branch_predictor_FSM.bht[254] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13317 (SB_DFFE): \processor.branch_predictor_FSM.bht[255] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$13318 (SB_DFFE): \processor.branch_predictor_FSM.bht[255] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6747 (SB_DFFE): \processor.branch_predictor_FSM.bht[2] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8381 (SB_DFF): \processor.if_id_reg.data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8372 (SB_DFF): \processor.if_id_reg.data_out [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6744 (SB_DFFE): \processor.branch_predictor_FSM.bht[3] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6749 (SB_DFFE): \processor.branch_predictor_FSM.bht[15] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8380 (SB_DFF): \processor.if_id_reg.data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6751 (SB_DFFE): \processor.branch_predictor_FSM.bht[16] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8384 (SB_DFF): \processor.if_id_reg.data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6753 (SB_DFFE): \processor.branch_predictor_FSM.bht[14] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6750 (SB_DFFE): \processor.branch_predictor_FSM.bht[16] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6745 (SB_DFFE): \processor.branch_predictor_FSM.bht[3] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8375 (SB_DFF): \processor.if_id_reg.data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7025 (SB_DFFE): \processor.branch_predictor_FSM.bht[10] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7022 (SB_DFFE): \processor.branch_predictor_FSM.bht[4] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7027 (SB_DFFE): \processor.branch_predictor_FSM.bht[13] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7024 (SB_DFFE): \processor.branch_predictor_FSM.bht[10] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7029 (SB_DFFE): \processor.branch_predictor_FSM.bht[9] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7026 (SB_DFFE): \processor.branch_predictor_FSM.bht[13] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7031 (SB_DFFE): \processor.branch_predictor_FSM.bht[6] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7028 (SB_DFFE): \processor.branch_predictor_FSM.bht[9] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7033 (SB_DFFE): \processor.branch_predictor_FSM.bht[8] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7030 (SB_DFFE): \processor.branch_predictor_FSM.bht[6] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7035 (SB_DFFE): \processor.branch_predictor_FSM.bht[12] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7032 (SB_DFFE): \processor.branch_predictor_FSM.bht[8] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7037 (SB_DFFE): \processor.branch_predictor_FSM.bht[5] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7034 (SB_DFFE): \processor.branch_predictor_FSM.bht[12] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7039 (SB_DFFE): \processor.branch_predictor_FSM.bht[11] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7036 (SB_DFFE): \processor.branch_predictor_FSM.bht[5] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7041 (SB_DFFE): \processor.branch_predictor_FSM.bht[7] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7038 (SB_DFFE): \processor.branch_predictor_FSM.bht[11] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7044 (SB_DFFE): \processor.branch_predictor_FSM.bht[36] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7040 (SB_DFFE): \processor.branch_predictor_FSM.bht[7] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7111 (SB_DFFE): \processor.branch_predictor_FSM.bht[18] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7043 (SB_DFFE): \processor.branch_predictor_FSM.bht[36] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7113 (SB_DFFE): \processor.branch_predictor_FSM.bht[26] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7110 (SB_DFFE): \processor.branch_predictor_FSM.bht[18] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7115 (SB_DFFE): \processor.branch_predictor_FSM.bht[27] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7112 (SB_DFFE): \processor.branch_predictor_FSM.bht[26] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7117 (SB_DFFE): \processor.branch_predictor_FSM.bht[19] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7114 (SB_DFFE): \processor.branch_predictor_FSM.bht[27] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7119 (SB_DFFE): \processor.branch_predictor_FSM.bht[20] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7116 (SB_DFFE): \processor.branch_predictor_FSM.bht[19] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7121 (SB_DFFE): \processor.branch_predictor_FSM.bht[21] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7118 (SB_DFFE): \processor.branch_predictor_FSM.bht[20] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7123 (SB_DFFE): \processor.branch_predictor_FSM.bht[22] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7120 (SB_DFFE): \processor.branch_predictor_FSM.bht[21] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7125 (SB_DFFE): \processor.branch_predictor_FSM.bht[28] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7122 (SB_DFFE): \processor.branch_predictor_FSM.bht[22] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7127 (SB_DFFE): \processor.branch_predictor_FSM.bht[17] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7124 (SB_DFFE): \processor.branch_predictor_FSM.bht[28] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7129 (SB_DFFE): \processor.branch_predictor_FSM.bht[29] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7126 (SB_DFFE): \processor.branch_predictor_FSM.bht[17] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7131 (SB_DFFE): \processor.branch_predictor_FSM.bht[23] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7128 (SB_DFFE): \processor.branch_predictor_FSM.bht[29] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7133 (SB_DFFE): \processor.branch_predictor_FSM.bht[30] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7130 (SB_DFFE): \processor.branch_predictor_FSM.bht[23] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7135 (SB_DFFE): \processor.branch_predictor_FSM.bht[25] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7132 (SB_DFFE): \processor.branch_predictor_FSM.bht[30] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7137 (SB_DFFE): \processor.branch_predictor_FSM.bht[31] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7134 (SB_DFFE): \processor.branch_predictor_FSM.bht[25] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7139 (SB_DFFE): \processor.branch_predictor_FSM.bht[32] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7136 (SB_DFFE): \processor.branch_predictor_FSM.bht[31] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7141 (SB_DFFE): \processor.branch_predictor_FSM.bht[33] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7138 (SB_DFFE): \processor.branch_predictor_FSM.bht[32] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7143 (SB_DFFE): \processor.branch_predictor_FSM.bht[34] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7140 (SB_DFFE): \processor.branch_predictor_FSM.bht[33] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7145 (SB_DFFE): \processor.branch_predictor_FSM.bht[24] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7142 (SB_DFFE): \processor.branch_predictor_FSM.bht[34] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7147 (SB_DFFE): \processor.branch_predictor_FSM.bht[35] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7144 (SB_DFFE): \processor.branch_predictor_FSM.bht[24] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7198 (SB_DFFE): \processor.branch_predictor_FSM.bht[0] [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7146 (SB_DFFE): \processor.branch_predictor_FSM.bht[35] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7197 (SB_DFFE): \processor.branch_predictor_FSM.bht[0] [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7335 (SB_DFFE): \data_mem_inst.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7333 (SB_DFFE): \data_mem_inst.clk_stall = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7336 (SB_DFFE): \data_mem_inst.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7337 (SB_DFFE): \data_mem_inst.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7338 (SB_DFFE): \data_mem_inst.state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7339 (SB_DFFE): \data_mem_inst.state [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7340 (SB_DFFE): \data_mem_inst.state [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7341 (SB_DFFE): \data_mem_inst.state [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7342 (SB_DFFE): \data_mem_inst.state [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7343 (SB_DFFE): \data_mem_inst.state [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7344 (SB_DFFE): \data_mem_inst.state [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7345 (SB_DFFE): \data_mem_inst.state [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7346 (SB_DFFE): \data_mem_inst.state [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7347 (SB_DFFE): \data_mem_inst.state [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7348 (SB_DFFE): \data_mem_inst.state [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7349 (SB_DFFE): \data_mem_inst.state [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7350 (SB_DFFE): \data_mem_inst.state [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7351 (SB_DFFE): \data_mem_inst.state [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7352 (SB_DFFE): \data_mem_inst.state [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7353 (SB_DFFE): \data_mem_inst.state [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7354 (SB_DFFE): \data_mem_inst.state [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7355 (SB_DFFE): \data_mem_inst.state [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7356 (SB_DFFE): \data_mem_inst.state [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7357 (SB_DFFE): \data_mem_inst.state [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7358 (SB_DFFE): \data_mem_inst.state [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7359 (SB_DFFE): \data_mem_inst.state [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7360 (SB_DFFE): \data_mem_inst.state [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7361 (SB_DFFE): \data_mem_inst.state [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7362 (SB_DFFE): \data_mem_inst.state [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7363 (SB_DFFE): \data_mem_inst.state [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7364 (SB_DFFE): \data_mem_inst.state [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7365 (SB_DFFE): \data_mem_inst.state [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7334 (SB_DFFE): \data_mem_inst.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12840 (SB_DFFE): \processor.PC.outAddr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12841 (SB_DFFE): \processor.PC.outAddr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12842 (SB_DFFE): \processor.PC.outAddr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12843 (SB_DFFE): \processor.PC.outAddr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12844 (SB_DFFE): \processor.PC.outAddr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12845 (SB_DFFE): \processor.PC.outAddr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12846 (SB_DFFE): \processor.PC.outAddr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12847 (SB_DFFE): \processor.PC.outAddr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12848 (SB_DFFE): \processor.PC.outAddr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12849 (SB_DFFE): \processor.PC.outAddr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12850 (SB_DFFE): \processor.PC.outAddr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12851 (SB_DFFE): \processor.PC.outAddr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12852 (SB_DFFE): \processor.PC.outAddr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12853 (SB_DFFE): \processor.PC.outAddr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12854 (SB_DFFE): \processor.PC.outAddr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12855 (SB_DFFE): \processor.PC.outAddr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12856 (SB_DFFE): \processor.PC.outAddr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12857 (SB_DFFE): \processor.PC.outAddr [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12858 (SB_DFFE): \processor.PC.outAddr [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12859 (SB_DFFE): \processor.PC.outAddr [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12860 (SB_DFFE): \processor.PC.outAddr [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12861 (SB_DFFE): \processor.PC.outAddr [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12862 (SB_DFFE): \processor.PC.outAddr [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12863 (SB_DFFE): \processor.PC.outAddr [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12864 (SB_DFFE): \processor.PC.outAddr [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12865 (SB_DFFE): \processor.PC.outAddr [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12866 (SB_DFFE): \processor.PC.outAddr [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12867 (SB_DFFE): \processor.PC.outAddr [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12868 (SB_DFFE): \processor.PC.outAddr [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12869 (SB_DFFE): \processor.PC.outAddr [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12870 (SB_DFFE): \processor.PC.outAddr [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12871 (SB_DFFE): \processor.PC.outAddr [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8400 (SB_DFF): \processor.if_id_reg.data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8402 (SB_DFF): \processor.if_id_reg.data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8403 (SB_DFF): \processor.if_id_reg.data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8404 (SB_DFF): \processor.if_id_reg.data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8405 (SB_DFF): \processor.if_id_reg.data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8406 (SB_DFF): \processor.if_id_reg.data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8407 (SB_DFF): \processor.if_id_reg.data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8409 (SB_DFF): \processor.if_id_reg.data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8410 (SB_DFF): \processor.if_id_reg.data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8411 (SB_DFF): \processor.if_id_reg.data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8412 (SB_DFF): \processor.if_id_reg.data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8413 (SB_DFF): \processor.if_id_reg.data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8414 (SB_DFF): \processor.if_id_reg.data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8415 (SB_DFF): \processor.if_id_reg.data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8416 (SB_DFF): \processor.if_id_reg.data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8417 (SB_DFF): \processor.if_id_reg.data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8418 (SB_DFF): \processor.if_id_reg.data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8419 (SB_DFF): \processor.if_id_reg.data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8420 (SB_DFF): \processor.if_id_reg.data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8421 (SB_DFF): \processor.if_id_reg.data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8422 (SB_DFF): \processor.if_id_reg.data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8423 (SB_DFF): \processor.if_id_reg.data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8424 (SB_DFF): \processor.if_id_reg.data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8425 (SB_DFF): \processor.if_id_reg.data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8426 (SB_DFF): \processor.if_id_reg.data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8427 (SB_DFF): \processor.if_id_reg.data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8428 (SB_DFF): \processor.if_id_reg.data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8430 (SB_DFF): \processor.if_id_reg.data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12601 (SB_DFF): \processor.ex_mem_reg.data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8990 (SB_DFFN): \processor.branch_predictor_FSM.branch_mem_sig_reg = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8431 (SB_DFF): \processor.if_id_reg.data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12701 (SB_DFF): \processor.ex_mem_reg.data_out [104] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12702 (SB_DFF): \processor.ex_mem_reg.data_out [105] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12703 (SB_DFF): \processor.ex_mem_reg.data_out [106] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12704 (SB_DFF): \processor.ex_mem_reg.data_out [107] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12705 (SB_DFF): \processor.ex_mem_reg.data_out [108] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12599 (SB_DFF): \processor.ex_mem_reg.data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9291 (SB_DFF): \processor.id_ex_reg.data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9293 (SB_DFF): \processor.id_ex_reg.data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9294 (SB_DFF): \processor.id_ex_reg.data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9295 (SB_DFF): \processor.id_ex_reg.data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9296 (SB_DFF): \processor.id_ex_reg.data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9297 (SB_DFF): \processor.id_ex_reg.data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9298 (SB_DFF): \processor.id_ex_reg.data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9299 (SB_DFF): \processor.id_ex_reg.data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9300 (SB_DFF): \processor.id_ex_reg.data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9301 (SB_DFF): \processor.id_ex_reg.data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9302 (SB_DFF): \processor.id_ex_reg.data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9303 (SB_DFF): \processor.id_ex_reg.data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9304 (SB_DFF): \processor.id_ex_reg.data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9305 (SB_DFF): \processor.id_ex_reg.data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9306 (SB_DFF): \processor.id_ex_reg.data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9307 (SB_DFF): \processor.id_ex_reg.data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9308 (SB_DFF): \processor.id_ex_reg.data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9309 (SB_DFF): \processor.id_ex_reg.data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9310 (SB_DFF): \processor.id_ex_reg.data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9311 (SB_DFF): \processor.id_ex_reg.data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9312 (SB_DFF): \processor.id_ex_reg.data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9313 (SB_DFF): \processor.id_ex_reg.data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9314 (SB_DFF): \processor.id_ex_reg.data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9315 (SB_DFF): \processor.id_ex_reg.data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9316 (SB_DFF): \processor.id_ex_reg.data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9317 (SB_DFF): \processor.id_ex_reg.data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9318 (SB_DFF): \processor.id_ex_reg.data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9319 (SB_DFF): \processor.id_ex_reg.data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9320 (SB_DFF): \processor.id_ex_reg.data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9321 (SB_DFF): \processor.id_ex_reg.data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9322 (SB_DFF): \processor.id_ex_reg.data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9323 (SB_DFF): \processor.id_ex_reg.data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9324 (SB_DFF): \processor.id_ex_reg.data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9325 (SB_DFF): \processor.id_ex_reg.data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9326 (SB_DFF): \processor.id_ex_reg.data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9327 (SB_DFF): \processor.id_ex_reg.data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9328 (SB_DFF): \processor.id_ex_reg.data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9329 (SB_DFF): \processor.id_ex_reg.data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9330 (SB_DFF): \processor.id_ex_reg.data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9331 (SB_DFF): \processor.id_ex_reg.data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9332 (SB_DFF): \processor.id_ex_reg.data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9333 (SB_DFF): \processor.id_ex_reg.data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9334 (SB_DFF): \processor.id_ex_reg.data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9335 (SB_DFF): \processor.id_ex_reg.data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9336 (SB_DFF): \processor.id_ex_reg.data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9337 (SB_DFF): \processor.id_ex_reg.data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9338 (SB_DFF): \processor.id_ex_reg.data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9339 (SB_DFF): \processor.id_ex_reg.data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9340 (SB_DFF): \processor.id_ex_reg.data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9341 (SB_DFF): \processor.id_ex_reg.data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9342 (SB_DFF): \processor.id_ex_reg.data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9343 (SB_DFF): \processor.id_ex_reg.data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9344 (SB_DFF): \processor.id_ex_reg.data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9345 (SB_DFF): \processor.id_ex_reg.data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9346 (SB_DFF): \processor.id_ex_reg.data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9347 (SB_DFF): \processor.id_ex_reg.data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9348 (SB_DFF): \processor.id_ex_reg.data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9349 (SB_DFF): \processor.id_ex_reg.data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9350 (SB_DFF): \processor.id_ex_reg.data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9351 (SB_DFF): \processor.id_ex_reg.data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9352 (SB_DFF): \processor.id_ex_reg.data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9353 (SB_DFF): \processor.id_ex_reg.data_out [64] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9354 (SB_DFF): \processor.id_ex_reg.data_out [65] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9355 (SB_DFF): \processor.id_ex_reg.data_out [66] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9356 (SB_DFF): \processor.id_ex_reg.data_out [67] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9357 (SB_DFF): \processor.id_ex_reg.data_out [68] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9358 (SB_DFF): \processor.id_ex_reg.data_out [69] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9359 (SB_DFF): \processor.id_ex_reg.data_out [70] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9360 (SB_DFF): \processor.id_ex_reg.data_out [71] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9361 (SB_DFF): \processor.id_ex_reg.data_out [72] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9362 (SB_DFF): \processor.id_ex_reg.data_out [73] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9363 (SB_DFF): \processor.id_ex_reg.data_out [74] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9364 (SB_DFF): \processor.id_ex_reg.data_out [75] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9365 (SB_DFF): \processor.id_ex_reg.data_out [76] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9366 (SB_DFF): \processor.id_ex_reg.data_out [77] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9367 (SB_DFF): \processor.id_ex_reg.data_out [78] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9368 (SB_DFF): \processor.id_ex_reg.data_out [79] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9369 (SB_DFF): \processor.id_ex_reg.data_out [80] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9370 (SB_DFF): \processor.id_ex_reg.data_out [81] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9371 (SB_DFF): \processor.id_ex_reg.data_out [82] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9372 (SB_DFF): \processor.id_ex_reg.data_out [83] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9373 (SB_DFF): \processor.id_ex_reg.data_out [84] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9374 (SB_DFF): \processor.id_ex_reg.data_out [85] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9375 (SB_DFF): \processor.id_ex_reg.data_out [86] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9376 (SB_DFF): \processor.id_ex_reg.data_out [87] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9377 (SB_DFF): \processor.id_ex_reg.data_out [88] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9378 (SB_DFF): \processor.id_ex_reg.data_out [89] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9379 (SB_DFF): \processor.id_ex_reg.data_out [90] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9380 (SB_DFF): \processor.id_ex_reg.data_out [91] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9381 (SB_DFF): \processor.id_ex_reg.data_out [92] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9382 (SB_DFF): \processor.id_ex_reg.data_out [93] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9383 (SB_DFF): \processor.id_ex_reg.data_out [94] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9384 (SB_DFF): \processor.id_ex_reg.data_out [95] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9385 (SB_DFF): \processor.id_ex_reg.data_out [96] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9386 (SB_DFF): \processor.id_ex_reg.data_out [97] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9387 (SB_DFF): \processor.id_ex_reg.data_out [98] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9388 (SB_DFF): \processor.id_ex_reg.data_out [99] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9389 (SB_DFF): \processor.id_ex_reg.data_out [100] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9390 (SB_DFF): \processor.id_ex_reg.data_out [101] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9391 (SB_DFF): \processor.id_ex_reg.data_out [102] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9392 (SB_DFF): \processor.id_ex_reg.data_out [103] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9393 (SB_DFF): \processor.id_ex_reg.data_out [104] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9394 (SB_DFF): \processor.id_ex_reg.data_out [105] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9395 (SB_DFF): \processor.id_ex_reg.data_out [106] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9396 (SB_DFF): \processor.id_ex_reg.data_out [107] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9397 (SB_DFF): \processor.id_ex_reg.data_out [108] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9398 (SB_DFF): \processor.id_ex_reg.data_out [109] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9399 (SB_DFF): \processor.id_ex_reg.data_out [110] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9400 (SB_DFF): \processor.id_ex_reg.data_out [111] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9401 (SB_DFF): \processor.id_ex_reg.data_out [112] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9402 (SB_DFF): \processor.id_ex_reg.data_out [113] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9403 (SB_DFF): \processor.id_ex_reg.data_out [114] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9404 (SB_DFF): \processor.id_ex_reg.data_out [115] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9406 (SB_DFF): \processor.id_ex_reg.data_out [117] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9407 (SB_DFF): \processor.id_ex_reg.data_out [118] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9408 (SB_DFF): \processor.id_ex_reg.data_out [119] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9409 (SB_DFF): \processor.id_ex_reg.data_out [120] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9410 (SB_DFF): \processor.id_ex_reg.data_out [121] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9411 (SB_DFF): \processor.id_ex_reg.data_out [122] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9412 (SB_DFF): \processor.id_ex_reg.data_out [123] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9413 (SB_DFF): \processor.id_ex_reg.data_out [124] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9414 (SB_DFF): \processor.id_ex_reg.data_out [125] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9415 (SB_DFF): \processor.id_ex_reg.data_out [126] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9416 (SB_DFF): \processor.id_ex_reg.data_out [127] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9417 (SB_DFF): \processor.id_ex_reg.data_out [128] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9418 (SB_DFF): \processor.id_ex_reg.data_out [129] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9419 (SB_DFF): \processor.id_ex_reg.data_out [130] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9420 (SB_DFF): \processor.id_ex_reg.data_out [131] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9421 (SB_DFF): \processor.id_ex_reg.data_out [132] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9422 (SB_DFF): \processor.id_ex_reg.data_out [133] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9423 (SB_DFF): \processor.id_ex_reg.data_out [134] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9424 (SB_DFF): \processor.id_ex_reg.data_out [135] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9426 (SB_DFF): \processor.id_ex_reg.data_out [137] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9427 (SB_DFF): \processor.id_ex_reg.data_out [138] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9428 (SB_DFF): \processor.id_ex_reg.data_out [139] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9429 (SB_DFF): \processor.id_ex_reg.data_out [140] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9430 (SB_DFF): \processor.id_ex_reg.data_out [141] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9431 (SB_DFF): \processor.id_ex_reg.data_out [142] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9432 (SB_DFF): \processor.id_ex_reg.data_out [143] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9433 (SB_DFF): \processor.id_ex_reg.data_out [144] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9434 (SB_DFF): \processor.id_ex_reg.data_out [145] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9435 (SB_DFF): \processor.id_ex_reg.data_out [146] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9437 (SB_DFF): \processor.id_ex_reg.data_out [148] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9438 (SB_DFF): \processor.id_ex_reg.data_out [149] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8408 (SB_DFF): \processor.if_id_reg.data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9439 (SB_DFF): \processor.id_ex_reg.data_out [150] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9445 (SB_DFF): \processor.id_ex_reg.data_out [156] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9446 (SB_DFF): \processor.id_ex_reg.data_out [157] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9447 (SB_DFF): \processor.id_ex_reg.data_out [158] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9448 (SB_DFF): \processor.id_ex_reg.data_out [159] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9449 (SB_DFF): \processor.id_ex_reg.data_out [160] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9450 (SB_DFF): \processor.id_ex_reg.data_out [161] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9451 (SB_DFF): \processor.id_ex_reg.data_out [162] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9452 (SB_DFF): \processor.id_ex_reg.data_out [163] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9453 (SB_DFF): \processor.id_ex_reg.data_out [164] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12598 (SB_DFF): \processor.ex_mem_reg.data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9456 (SB_DFF): \processor.mem_wb_reg.data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9457 (SB_DFF): \processor.mem_wb_reg.data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9459 (SB_DFF): \processor.mem_wb_reg.data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9460 (SB_DFF): \processor.mem_wb_reg.data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9461 (SB_DFF): \processor.mem_wb_reg.data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9462 (SB_DFF): \processor.mem_wb_reg.data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9463 (SB_DFF): \processor.mem_wb_reg.data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9464 (SB_DFF): \processor.mem_wb_reg.data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9465 (SB_DFF): \processor.mem_wb_reg.data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9466 (SB_DFF): \processor.mem_wb_reg.data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9467 (SB_DFF): \processor.mem_wb_reg.data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9468 (SB_DFF): \processor.mem_wb_reg.data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9469 (SB_DFF): \processor.mem_wb_reg.data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9470 (SB_DFF): \processor.mem_wb_reg.data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9471 (SB_DFF): \processor.mem_wb_reg.data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9472 (SB_DFF): \processor.mem_wb_reg.data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9473 (SB_DFF): \processor.mem_wb_reg.data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9474 (SB_DFF): \processor.mem_wb_reg.data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9475 (SB_DFF): \processor.mem_wb_reg.data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9476 (SB_DFF): \processor.mem_wb_reg.data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9477 (SB_DFF): \processor.mem_wb_reg.data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9478 (SB_DFF): \processor.mem_wb_reg.data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9479 (SB_DFF): \processor.mem_wb_reg.data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9480 (SB_DFF): \processor.mem_wb_reg.data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9481 (SB_DFF): \processor.mem_wb_reg.data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9482 (SB_DFF): \processor.mem_wb_reg.data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9483 (SB_DFF): \processor.mem_wb_reg.data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9484 (SB_DFF): \processor.mem_wb_reg.data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9485 (SB_DFF): \processor.mem_wb_reg.data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9486 (SB_DFF): \processor.mem_wb_reg.data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9487 (SB_DFF): \processor.mem_wb_reg.data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9488 (SB_DFF): \processor.mem_wb_reg.data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9489 (SB_DFF): \processor.mem_wb_reg.data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9490 (SB_DFF): \processor.mem_wb_reg.data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9491 (SB_DFF): \processor.mem_wb_reg.data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9492 (SB_DFF): \processor.mem_wb_reg.data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9493 (SB_DFF): \processor.mem_wb_reg.data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9494 (SB_DFF): \processor.mem_wb_reg.data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9495 (SB_DFF): \processor.mem_wb_reg.data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9496 (SB_DFF): \processor.mem_wb_reg.data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9497 (SB_DFF): \processor.mem_wb_reg.data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9498 (SB_DFF): \processor.mem_wb_reg.data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9499 (SB_DFF): \processor.mem_wb_reg.data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9500 (SB_DFF): \processor.mem_wb_reg.data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9501 (SB_DFF): \processor.mem_wb_reg.data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9502 (SB_DFF): \processor.mem_wb_reg.data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9503 (SB_DFF): \processor.mem_wb_reg.data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9504 (SB_DFF): \processor.mem_wb_reg.data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9505 (SB_DFF): \processor.mem_wb_reg.data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9506 (SB_DFF): \processor.mem_wb_reg.data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9507 (SB_DFF): \processor.mem_wb_reg.data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9508 (SB_DFF): \processor.mem_wb_reg.data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9509 (SB_DFF): \processor.mem_wb_reg.data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9510 (SB_DFF): \processor.mem_wb_reg.data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9511 (SB_DFF): \processor.mem_wb_reg.data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9512 (SB_DFF): \processor.mem_wb_reg.data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9513 (SB_DFF): \processor.mem_wb_reg.data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9514 (SB_DFF): \processor.mem_wb_reg.data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9515 (SB_DFF): \processor.mem_wb_reg.data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9516 (SB_DFF): \processor.mem_wb_reg.data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9517 (SB_DFF): \processor.mem_wb_reg.data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9518 (SB_DFF): \processor.mem_wb_reg.data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9519 (SB_DFF): \processor.mem_wb_reg.data_out [64] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9520 (SB_DFF): \processor.mem_wb_reg.data_out [65] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9521 (SB_DFF): \processor.mem_wb_reg.data_out [66] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9522 (SB_DFF): \processor.mem_wb_reg.data_out [67] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9523 (SB_DFF): \processor.mem_wb_reg.data_out [68] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9524 (SB_DFF): \processor.mem_wb_reg.data_out [69] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9525 (SB_DFF): \processor.mem_wb_reg.data_out [70] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9526 (SB_DFF): \processor.mem_wb_reg.data_out [71] = 0

25.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in top.
  Merging $auto$simplemap.cc:277:simplemap_mux$8791 (A=\processor.control_unit.Jump, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9289 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12563 (A=\processor.id_ex_reg.data_out [7], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$12602 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12564 (A=\processor.id_ex_reg.data_out [8], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$12603 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12556 (A=\processor.id_ex_reg.data_out [0], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$12597 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12561 (A=\processor.id_ex_reg.data_out [5], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$7366 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$12560 (A=\processor.id_ex_reg.data_out [4], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$7367 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8303 (A=\inst_mem.out [0], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8402 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8304 (A=\inst_mem.out [2], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8403 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8305 (A=\inst_mem.out [3], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8404 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8306 (A=\inst_mem.out [4], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8405 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8307 (A=\inst_mem.out [5], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8406 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8322 (A=\inst_mem.out [20], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9167 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8308 (A=\inst_mem.out [6], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8407 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8310 (A=\inst_mem.out [8], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8409 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8311 (A=\inst_mem.out [9], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8410 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8312 (A=\inst_mem.out [10], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8411 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8313 (A=\inst_mem.out [11], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8412 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8314 (A=\inst_mem.out [12], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8413 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8315 (A=\inst_mem.out [13], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8414 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8316 (A=\inst_mem.out [14], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8415 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8317 (A=\inst_mem.out [15], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8416 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8318 (A=\inst_mem.out [16], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8417 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8319 (A=\inst_mem.out [17], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8418 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8320 (A=\inst_mem.out [18], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8419 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8321 (A=\inst_mem.out [19], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8420 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8322 (A=\inst_mem.out [20], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8421 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8323 (A=\inst_mem.out [21], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8422 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8324 (A=\inst_mem.out [22], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8423 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8325 (A=\inst_mem.out [23], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8424 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8326 (A=\inst_mem.out [24], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8425 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8327 (A=\inst_mem.out [25], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8426 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8328 (A=\inst_mem.out [26], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8427 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8329 (A=\inst_mem.out [27], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8428 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8330 (A=\inst_mem.out [28], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8430 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12562 (A=\processor.id_ex_reg.data_out [6], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$12601 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8331 (A=\inst_mem.out [30], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8431 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8318 (A=\inst_mem.out [16], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9163 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8319 (A=\inst_mem.out [17], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9164 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8320 (A=\inst_mem.out [18], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9165 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8317 (A=\inst_mem.out [15], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9162 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8321 (A=\inst_mem.out [19], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9166 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8323 (A=\inst_mem.out [21], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9168 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8324 (A=\inst_mem.out [22], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9169 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8325 (A=\inst_mem.out [23], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9170 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12558 (A=\processor.id_ex_reg.data_out [2], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$12599 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8793 (A=\processor.control_unit.RegWrite, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9291 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8794 (A=\processor.control_unit.MemWrite, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9293 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8795 (A=\processor.control_unit.MemRead, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9294 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8796 (A=\processor.control_unit.Branch, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9295 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8797 (A=\processor.control_unit.Auipc, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9297 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8798 (A=\processor.control_unit.Lui, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9298 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8799 (A=\processor.control_unit.ALUSrc, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9299 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8800 (A=\processor.control_unit.Jalr, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9300 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16038 (A=1'1, B=$techmap$techmap\processor.alu_control.$procmux$1344.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$8608_Y, S=$techmap$techmap\processor.alu_control.$procmux$1344.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$8599_Y) into $auto$simplemap.cc:420:simplemap_dff$9429 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16039 (A=1'1, B=$techmap$techmap\processor.alu_control.$procmux$1344.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$8609_Y, S=$techmap$techmap\processor.alu_control.$procmux$1344.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$8599_Y) into $auto$simplemap.cc:420:simplemap_dff$9430 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16040 (A=1'1, B=$techmap$techmap\processor.alu_control.$procmux$1344.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$8610_Y, S=$techmap$techmap\processor.alu_control.$procmux$1344.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$8599_Y) into $auto$simplemap.cc:420:simplemap_dff$9431 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16041 (A=1'1, B=$techmap$techmap\processor.alu_control.$procmux$1344.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$8611_Y, S=$techmap$techmap\processor.alu_control.$procmux$1344.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$8599_Y) into $auto$simplemap.cc:420:simplemap_dff$9432 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16042 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$15944 [2], S=$techmap$techmap\processor.alu_control.$procmux$1344.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$8599_Y) into $auto$simplemap.cc:420:simplemap_dff$9433 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16043 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$15935 [2], S=$techmap$techmap\processor.alu_control.$procmux$1344.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$8599_Y) into $auto$simplemap.cc:420:simplemap_dff$9434 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$16044 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$15926 [2], S=$techmap$techmap\processor.alu_control.$procmux$1344.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$8599_Y) into $auto$simplemap.cc:420:simplemap_dff$9435 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8309 (A=\inst_mem.out [7], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$8408 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8326 (A=\inst_mem.out [24], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$9171 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$12561 (A=\processor.id_ex_reg.data_out [5], B=1'0, S=\processor.branch_decide.Branch_Jump_Trigger) into $auto$simplemap.cc:420:simplemap_dff$12598 (SB_DFF).

25.40. Executing ICE40_OPT pass (performing simple optimizations).

25.40.1. Running ICE40 specific optimizations.

25.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~58 debug messages>

25.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~633 debug messages>
Removed a total of 211 cells.

25.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

25.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 39 unused cells and 5737 unused wires.
<suppressed ~40 debug messages>

25.40.6. Rerunning OPT passes. (Removed registers in this run.)

25.40.7. Running ICE40 specific optimizations.

25.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~40 debug messages>

25.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

25.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.40.12. Rerunning OPT passes. (Removed registers in this run.)

25.40.13. Running ICE40 specific optimizations.

25.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

25.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

25.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

25.40.18. Finished OPT passes. (There is nothing left to do.)

25.41. Executing TECHMAP pass (map to technology primitives).

25.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

25.41.2. Continuing TECHMAP pass.
No more expansions possible.

25.42. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_FF_'.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Successfully finished Verilog frontend.

25.43. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

25.44. Executing ABC9 pass.

25.44.1. Executing ABC9_OPS pass (helper functions for ABC9).

25.44.2. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module top.
Found 0 SCCs.

25.44.3. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~1622 debug messages>

25.44.4. Executing ABC9_OPS pass (helper functions for ABC9).

25.44.5. Executing ABC9_OPS pass (helper functions for ABC9).

25.44.6. Executing FLATTEN pass (flatten design).
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template SB_CARRY for cells of type SB_CARRY.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
<suppressed ~7 debug messages>
No more expansions possible.

25.44.7. Executing TECHMAP pass (map to technology primitives).

25.44.7.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

25.44.7.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
No more expansions possible.
<suppressed ~8 debug messages>

25.44.8. Executing OPT pass (performing simple optimizations).

25.44.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top$holes.
<suppressed ~4 debug messages>

25.44.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top$holes'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

25.44.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top$holes..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

25.44.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top$holes.
Performed a total of 0 changes.

25.44.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top$holes'.
Removed a total of 0 cells.

25.44.8.6. Executing OPT_RMDFF pass (remove dff with constant values).

25.44.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top$holes..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

25.44.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top$holes.

25.44.8.9. Rerunning OPT passes. (Maybe there is more to do..)

25.44.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top$holes..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

25.44.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top$holes.
Performed a total of 0 changes.

25.44.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top$holes'.
Removed a total of 0 cells.

25.44.8.13. Executing OPT_RMDFF pass (remove dff with constant values).

25.44.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top$holes..

25.44.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top$holes.

25.44.8.16. Finished OPT passes. (There is nothing left to do.)

25.44.9. Executing AIGMAP pass (map logic to AIG).
Module top: replaced 3573 cells with 22602 new cells, skipped 3838 cells.
  replaced 3 cell types:
     803 $_OR_
      71 $_XOR_
    2699 $_MUX_
  not replaced 13 cell types:
     164 $_NOT_
     890 $_AND_
      57 SB_DFFSR
     671 SB_DFFE
     356 SB_DFF
       2 SB_MAC16
       1 SB_HFOSC
       8 SB_RAM40_4K
       1 SB_DFFN
       2 SB_DFFESR
       4 SB_DFFSS
      64 $__ICE40_CARRY_WRAPPER
    1618 $__ABC9_DELAY
Module top$holes: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

25.44.9.1. Executing ABC9_OPS pass (helper functions for ABC9).

25.44.9.2. Executing ABC9_OPS pass (helper functions for ABC9).

25.44.9.3. Executing XAIGER backend.
<suppressed ~1232 debug messages>
Extracted 10003 AND gates and 27226 wires from module `top' to a netlist network with 1252 inputs and 1985 outputs.

25.44.9.4. Executing ABC9_EXE pass (technology mapping using ABC9).

25.44.9.5. Executing ABC9.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   1252/   1985  and =    8226  lev =   42 (6.58)  mem = 0.20 MB  box = 1682  bb = 1618
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   1252/   1985  and =   11061  lev =   53 (5.32)  mem = 0.23 MB  ch = 1418  box = 1682  bb = 1618
ABC: + &if -W 250 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =   11061.  Ch =  1243.  Total mem =    2.47 MB. Peak cut mem =    0.12 MB.
ABC: P:  Del = 10765.00.  Ar =    3136.0.  Edge =    10860.  Cut =    63541.  T =     0.01 sec
ABC: P:  Del = 10765.00.  Ar =    2890.0.  Edge =    10688.  Cut =    66221.  T =     0.01 sec
ABC: P:  Del = 10765.00.  Ar =    2868.0.  Edge =     9362.  Cut =    72210.  T =     0.01 sec
ABC: F:  Del = 10765.00.  Ar =    2662.0.  Edge =     8674.  Cut =    68527.  T =     0.01 sec
ABC: A:  Del = 10765.00.  Ar =    2550.0.  Edge =     8237.  Cut =    68102.  T =     0.02 sec
ABC: A:  Del = 10765.00.  Ar =    2537.0.  Edge =     8213.  Cut =    68502.  T =     0.02 sec
ABC: Total time =     0.10 sec
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =   1252/   1985  and =    7573  lev =   37 (5.71)  mem = 0.19 MB  box = 1682  bb = 1618
ABC: Mapping (K=4)  :  lut =   2532  edge =    8183  lev =   18 (3.01)  levB =   44  mem = 0.11 MB
ABC: LUT = 2532 : 2=509 20.1 %  3=927 36.6 %  4=1096 43.3 %  Ave = 3.23
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 3.04 seconds, total: 3.04 seconds

25.44.9.6. Executing AIGER frontend.
<suppressed ~6487 debug messages>
Removed 10699 unused cells and 17990 unused wires.

25.44.9.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     2533
ABC RESULTS:   $__ICE40_CARRY_WRAPPER cells:       64
ABC RESULTS:           input signals:      297
ABC RESULTS:          output signals:     1487
Removing temp directory.

25.45. Executing ICE40_WRAPCARRY pass (wrap carries).

25.46. Executing TECHMAP pass (map to technology primitives).

25.46.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

25.46.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 240 unused cells and 30560 unused wires.

25.47. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     2600
  1-LUT                1
  2-LUT              510
  3-LUT              993
  4-LUT             1096

Eliminating LUTs.
Number of LUTs:     2600
  1-LUT                1
  2-LUT              510
  3-LUT              993
  4-LUT             1096

Combining LUTs.
Number of LUTs:     2597
  1-LUT                1
  2-LUT              507
  3-LUT              990
  4-LUT             1099

Eliminated 0 LUTs.
Combined 3 LUTs.
<suppressed ~15422 debug messages>

25.48. Executing TECHMAP pass (map to technology primitives).

25.48.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

25.48.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000001001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010000010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100000101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010100011111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010011000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010100000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000101000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101010100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000000100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100100000001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000001010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110110101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001000010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101010101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001000000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111001010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001010001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010000010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000001011000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000001001000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000010000100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001111011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110111111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111110001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001101111011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011010110111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111001110110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100011111110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001000100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010100010101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010000000000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000010110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111011111100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010011111110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101110100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010101001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011100100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000010100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100100001000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100110001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010100000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000110000000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100101101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000001000101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001010001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001101011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111101001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010100110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101111111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111111011101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011111101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001101010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011110101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101111011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110111001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101101111111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001110110111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110110111001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001000010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000010101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000101010100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001001010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010011110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100100011000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101111001001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000011011101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011110001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111101011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110010100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000101011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110111011101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001101011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001000001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110101111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101110001010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00100111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111101011110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000100100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111001111101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110010001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110101011010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011011100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110101011101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010110001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001111011101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100111100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010100000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101011100010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010000100100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000101010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010001000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000001010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111111000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001110110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010100000000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101100111111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000101000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011010111011110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001000001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001000100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100100111101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000011101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100100001000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001111111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100001000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000001110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011100010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100010000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
No more expansions possible.
<suppressed ~6679 debug messages>
Removed 0 unused cells and 5197 unused wires.

25.49. Executing AUTONAME pass.
Renamed 29926 objects in module top (56 iterations).
<suppressed ~6379 debug messages>

25.50. Executing HIERARCHY pass (managing design hierarchy).

25.50.1. Analyzing design hierarchy..
Top module:  \top

25.50.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

25.51. Printing statistics.

=== top ===

   Number of wires:               3231
   Number of wire bits:          12874
   Number of public wires:        3231
   Number of public wire bits:   12874
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3761
     SB_CARRY                       62
     SB_DFF                        356
     SB_DFFE                       671
     SB_DFFESR                       2
     SB_DFFN                         1
     SB_DFFSR                       57
     SB_DFFSS                        4
     SB_HFOSC                        1
     SB_LUT4                      2597
     SB_MAC16                        2
     SB_RAM40_4K                     8

25.52. Executing CHECK pass (checking for obvious problems).
checking module top..
Warning: Wire top.processor.immediate_generator.imm has an unprocessed 'init' attribute.
found and reported 1 problems.

26. Printing statistics.

=== top ===

   Number of wires:               3231
   Number of wire bits:          12874
   Number of public wires:        3231
   Number of public wire bits:   12874
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3761
     SB_CARRY                       62
     SB_DFF                        356
     SB_DFFE                       671
     SB_DFFESR                       2
     SB_DFFN                         1
     SB_DFFSR                       57
     SB_DFFSS                        4
     SB_HFOSC                        1
     SB_LUT4                      2597
     SB_MAC16                        2
     SB_RAM40_4K                     8

27. Executing JSON backend.

Warnings: 5 unique messages, 5 total
End of script. Logfile hash: 10d5eed31c, CPU: user 7.82s system 0.45s, MEM: 106.87 MB peak
Yosys 0.9+2406 (git sha1 UNKNOWN, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 18% 35x opt_expr (1 sec), 16% 31x opt_clean (1 sec), ...
